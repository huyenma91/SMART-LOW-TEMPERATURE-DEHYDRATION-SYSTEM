

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 01:21:09 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 2.10
    56                           ; Generated 31/07/2019 GMT
    57                           ; 
    58                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F8722 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  002B4A                     __pidataCOMRAM:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for _maxhumi
    95  002B4A  0050               	dw	80
    96                           
    97                           ;initializer for _maxtemp
    98  002B4C  0014               	dw	20
    99                           
   100                           	psect	idataBANK0
   101  002B3E                     __pidataBANK0:
   102                           	opt callstack 0
   103                           
   104                           ;initializer for _TANSO
   105  002B3E  0900               	dw	2304
   106  002B40  003D               	dw	61
   107                           
   108                           ;initializer for _B
   109  002B42  0001               	dw	1
   110                           
   111                           ;initializer for _stopflag
   112  002B44  0001               	dw	1
   113                           
   114                           ;initializer for _resetStop
   115  002B46  0001               	dw	1
   116                           
   117                           ;initializer for _reset
   118  002B48  0001               	dw	1
   119  0000                     _TMR0	set	4054
   120  0000                     _T0CONbits	set	4053
   121  0000                     _OSCCONbits	set	4051
   122  0000                     _TRISC	set	3988
   123  0000                     _LATC	set	3979
   124  0000                     _TRISB	set	3987
   125  0000                     _LATB	set	3978
   126  0000                     _TRISA	set	3986
   127  0000                     _LATA	set	3977
   128  0000                     _ADCON1	set	4033
   129  0000                     _INTCONbits	set	4082
   130  0000                     _PORTD	set	3971
   131  0000                     _TRISD	set	3989
   132  0000                     _TRISBbits	set	3987
   133  0000                     _LATAbits	set	3977
   134  0000                     _TRISAbits	set	3986
   135  0000                     _LATFbits	set	3982
   136  0000                     _TRISFbits	set	3991
   137  0000                     _LATD	set	3980
   138  0000                     _LATCbits	set	3979
   139  0000                     _TRISCbits	set	3988
   140  0000                     _PORTCbits	set	3970
   141  0000                     _PORTBbits	set	3969
   142  0000                     _PORTAbits	set	3968
   143  0000                     _LATD4	set	31844
   144  0000                     _LATD3	set	31843
   145  0000                     _LATD2	set	31842
   146  0000                     _LATD0	set	31840
   147  0000                     _LATD1	set	31841
   148                           
   149                           	psect	smallconst
   150  001000                     __psmallconst:
   151                           	opt callstack 0
   152  001000  00                 	db	0
   153  001001                     STR_3:
   154                           
   155                           ; BSR set to: 0
   156  001001  52                 	db	82	;'R'
   157  001002  41                 	db	65	;'A'
   158  001003  35                 	db	53	;'5'
   159  001004  20                 	db	32
   160  001005  2D                 	db	45
   161  001006  3E                 	db	62	;'>'
   162  001007  20                 	db	32
   163  001008  6E                 	db	110	;'n'
   164  001009  65                 	db	101	;'e'
   165  00100A  78                 	db	120	;'x'
   166  00100B  74                 	db	116	;'t'
   167  00100C  00                 	db	0
   168  00100D                     STR_1:
   169                           
   170                           ; BSR set to: 0
   171  00100D  4C                 	db	76	;'L'
   172  00100E  54                 	db	84	;'T'
   173  00100F  44                 	db	68	;'D'
   174  001010  20                 	db	32
   175  001011  53                 	db	83	;'S'
   176  001012  79                 	db	121	;'y'
   177  001013  73                 	db	115	;'s'
   178  001014  74                 	db	116	;'t'
   179  001015  65                 	db	101	;'e'
   180  001016  6D                 	db	109	;'m'
   181  001017  00                 	db	0
   182  001018                     STR_4:
   183                           
   184                           ; BSR set to: 0
   185  001018  4D                 	db	77	;'M'
   186  001019  41                 	db	65	;'A'
   187  00101A  58                 	db	88	;'X'
   188  00101B  20                 	db	32
   189  00101C  68                 	db	104	;'h'
   190  00101D  75                 	db	117	;'u'
   191  00101E  6D                 	db	109	;'m'
   192  00101F  69                 	db	105	;'i'
   193  001020  3A                 	db	58	;':'
   194  001021  00                 	db	0
   195  001022                     STR_2:
   196                           
   197                           ; BSR set to: 0
   198  001022  4D                 	db	77	;'M'
   199  001023  61                 	db	97	;'a'
   200  001024  78                 	db	120	;'x'
   201  001025  20                 	db	32
   202  001026  54                 	db	84	;'T'
   203  001027  65                 	db	101	;'e'
   204  001028  6D                 	db	109	;'m'
   205  001029  70                 	db	112	;'p'
   206  00102A  3A                 	db	58	;':'
   207  00102B  00                 	db	0
   208  00102C                     STR_6:
   209                           
   210                           ; BSR set to: 0
   211  00102C  57                 	db	87	;'W'
   212  00102D  6F                 	db	111	;'o'
   213  00102E  72                 	db	114	;'r'
   214  00102F  6B                 	db	107	;'k'
   215  001030  69                 	db	105	;'i'
   216  001031  6E                 	db	110	;'n'
   217  001032  67                 	db	103	;'g'
   218  001033  00                 	db	0
   219  001034                     STR_8:
   220                           
   221                           ; BSR set to: 0
   222  001034  48                 	db	72	;'H'
   223  001035  3A                 	db	58	;':'
   224  001036  00                 	db	0
   225  001037                     STR_7:
   226                           
   227                           ; BSR set to: 0
   228  001037  54                 	db	84	;'T'
   229  001038  3A                 	db	58	;':'
   230  001039  00                 	db	0
   231  0000                     
   232                           ; #config settings
   233  00103A  00                 	db	0	; dummy byte at the end
   234  0000                     
   235                           	psect	cinit
   236  00273E                     __pcinit:
   237                           	opt callstack 0
   238  00273E                     start_initialization:
   239                           	opt callstack 0
   240  00273E                     __initialization:
   241                           	opt callstack 0
   242                           
   243                           ; Initialize objects allocated to BANK0 (12 bytes)
   244                           ; load TBLPTR registers with __pidataBANK0
   245  00273E  0E3E               	movlw	low __pidataBANK0
   246  002740  6EF6               	movwf	tblptrl,c
   247  002742  0E2B               	movlw	high __pidataBANK0
   248  002744  6EF7               	movwf	tblptrh,c
   249  002746  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   250  002748  6EF8               	movwf	tblptru,c
   251  00274A  EE00  F0EE         	lfsr	0,__pdataBANK0
   252  00274E  EE10 F00C          	lfsr	1,12
   253  002752                     copy_data0:
   254  002752  0009               	tblrd		*+
   255  002754  CFF5 FFEE          	movff	tablat,postinc0
   256  002758  50E5               	movf	postdec1,w,c
   257  00275A  50E1               	movf	fsr1l,w,c
   258  00275C  E1FA               	bnz	copy_data0
   259                           
   260                           ; Initialize objects allocated to COMRAM (4 bytes)
   261                           ; load TBLPTR registers with __pidataCOMRAM
   262  00275E  0E4A               	movlw	low __pidataCOMRAM
   263  002760  6EF6               	movwf	tblptrl,c
   264  002762  0E2B               	movlw	high __pidataCOMRAM
   265  002764  6EF7               	movwf	tblptrh,c
   266  002766  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   267  002768  6EF8               	movwf	tblptru,c
   268  00276A  EE00  F042         	lfsr	0,__pdataCOMRAM
   269  00276E  EE10 F004          	lfsr	1,4
   270  002772                     copy_data1:
   271  002772  0009               	tblrd		*+
   272  002774  CFF5 FFEE          	movff	tablat,postinc0
   273  002778  50E5               	movf	postdec1,w,c
   274  00277A  50E1               	movf	fsr1l,w,c
   275  00277C  E1FA               	bnz	copy_data1
   276                           
   277                           ; Clear objects allocated to BANK1 (110 bytes)
   278  00277E  EE01  F000         	lfsr	0,__pbssBANK1
   279  002782  0E6E               	movlw	110
   280  002784                     clear_0:
   281  002784  6AEE               	clrf	postinc0,c
   282  002786  06E8               	decf	wreg,f,c
   283  002788  E1FD               	bnz	clear_0
   284                           
   285                           ; Clear objects allocated to BANK0 (112 bytes)
   286  00278A  EE00  F060         	lfsr	0,__pbssBANK0
   287  00278E  0E70               	movlw	112
   288  002790                     clear_1:
   289  002790  6AEE               	clrf	postinc0,c
   290  002792  06E8               	decf	wreg,f,c
   291  002794  E1FD               	bnz	clear_1
   292                           
   293                           ; Clear objects allocated to COMRAM (30 bytes)
   294  002796  EE00  F024         	lfsr	0,__pbssCOMRAM
   295  00279A  0E1E               	movlw	30
   296  00279C                     clear_2:
   297  00279C  6AEE               	clrf	postinc0,c
   298  00279E  06E8               	decf	wreg,f,c
   299  0027A0  E1FD               	bnz	clear_2
   300  0027A2                     end_of_initialization:
   301                           	opt callstack 0
   302  0027A2                     __end_of__initialization:
   303                           	opt callstack 0
   304  0027A2  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   305  0027A4  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   306  0027A6  0100               	movlb	0
   307  0027A8  EFB9  F014         	goto	_main	;jump to C main() function
   308                           
   309                           	psect	bssCOMRAM
   310  000024                     __pbssCOMRAM:
   311                           	opt callstack 0
   312  000024                     _count:
   313                           	opt callstack 0
   314  000024                     	ds	2
   315  000026                     _Humid:
   316                           	opt callstack 0
   317  000026                     	ds	2
   318  000028                     _Temp:
   319                           	opt callstack 0
   320  000028                     	ds	2
   321  00002A                     _firstReadRB02:
   322                           	opt callstack 0
   323  00002A                     	ds	2
   324  00002C                     _firstReadRA52:
   325                           	opt callstack 0
   326  00002C                     	ds	2
   327  00002E                     _firstReadRB0:
   328                           	opt callstack 0
   329  00002E                     	ds	2
   330  000030                     _firstReadRA5:
   331                           	opt callstack 0
   332  000030                     	ds	2
   333  000032                     _pressRA5:
   334                           	opt callstack 0
   335  000032                     	ds	2
   336  000034                     _Checksum:
   337                           	opt callstack 0
   338  000034                     	ds	1
   339  000035                     _T_Integral:
   340                           	opt callstack 0
   341  000035                     	ds	1
   342  000036                     _T_Decimal:
   343                           	opt callstack 0
   344  000036                     	ds	1
   345  000037                     _RH_Integral:
   346                           	opt callstack 0
   347  000037                     	ds	1
   348  000038                     _RH_Decimal:
   349                           	opt callstack 0
   350  000038                     	ds	1
   351  000039                     _response:
   352                           	opt callstack 0
   353  000039                     	ds	1
   354  00003A                     _checkSum:
   355                           	opt callstack 0
   356  00003A                     	ds	1
   357  00003B                     _Sum:
   358                           	opt callstack 0
   359  00003B                     	ds	1
   360  00003C                     _statepress:
   361                           	opt callstack 0
   362  00003C                     	ds	1
   363  00003D                     _flagRB02:
   364                           	opt callstack 0
   365  00003D                     	ds	1
   366  00003E                     _flagRA52:
   367                           	opt callstack 0
   368  00003E                     	ds	1
   369  00003F                     _flagRB0:
   370                           	opt callstack 0
   371  00003F                     	ds	1
   372  000040                     _flagRA5:
   373                           	opt callstack 0
   374  000040                     	ds	1
   375  000041                     _portValue:
   376                           	opt callstack 0
   377  000041                     	ds	1
   378                           
   379                           	psect	dataCOMRAM
   380  000042                     __pdataCOMRAM:
   381                           	opt callstack 0
   382  000042                     _maxhumi:
   383                           	opt callstack 0
   384  000042                     	ds	2
   385  000044                     _maxtemp:
   386                           	opt callstack 0
   387  000044                     	ds	2
   388                           
   389                           	psect	bssBANK0
   390  000060                     __pbssBANK0:
   391                           	opt callstack 0
   392  000060                     _ptr:
   393                           	opt callstack 0
   394  000060                     	ds	30
   395  00007E                     _value:
   396                           	opt callstack 0
   397  00007E                     	ds	10
   398  000088                     _index:
   399                           	opt callstack 0
   400  000088                     	ds	2
   401  00008A                     _humidity_dht11:
   402                           	opt callstack 0
   403  00008A                     	ds	2
   404  00008C                     _temperature_dht11:
   405                           	opt callstack 0
   406  00008C                     	ds	2
   407  00008E                     _lastHumid:
   408                           	opt callstack 0
   409  00008E                     	ds	2
   410  000090                     _lastTemp:
   411                           	opt callstack 0
   412  000090                     	ds	2
   413  000092                     _flagLCD4:
   414                           	opt callstack 0
   415  000092                     	ds	2
   416  000094                     _flagLCD3:
   417                           	opt callstack 0
   418  000094                     	ds	2
   419  000096                     _flagLCD2:
   420                           	opt callstack 0
   421  000096                     	ds	2
   422  000098                     _flagLCD1:
   423                           	opt callstack 0
   424  000098                     	ds	2
   425  00009A                     _countInter:
   426                           	opt callstack 0
   427  00009A                     	ds	2
   428  00009C                     _count_unit:
   429                           	opt callstack 0
   430  00009C                     	ds	2
   431  00009E                     _count2A:
   432                           	opt callstack 0
   433  00009E                     	ds	2
   434  0000A0                     _state1A:
   435                           	opt callstack 0
   436  0000A0                     	ds	2
   437  0000A2                     _count1A:
   438                           	opt callstack 0
   439  0000A2                     	ds	2
   440  0000A4                     _temp_temp:
   441                           	opt callstack 0
   442  0000A4                     	ds	2
   443  0000A6                     _flagcount1:
   444                           	opt callstack 0
   445  0000A6                     	ds	2
   446  0000A8                     _flagcount:
   447                           	opt callstack 0
   448  0000A8                     	ds	2
   449  0000AA                     _blink_flag:
   450                           	opt callstack 0
   451  0000AA                     	ds	2
   452  0000AC                     _blink_count:
   453                           	opt callstack 0
   454  0000AC                     	ds	2
   455  0000AE                     _stateprocess:
   456                           	opt callstack 0
   457  0000AE                     	ds	2
   458  0000B0                     _cur_state:
   459                           	opt callstack 0
   460  0000B0                     	ds	2
   461  0000B2                     _A:
   462                           	opt callstack 0
   463  0000B2                     	ds	2
   464  0000B4                     _secondReadRB02:
   465                           	opt callstack 0
   466  0000B4                     	ds	2
   467  0000B6                     _secondReadRA52:
   468                           	opt callstack 0
   469  0000B6                     	ds	2
   470  0000B8                     _pressRB02:
   471                           	opt callstack 0
   472  0000B8                     	ds	2
   473  0000BA                     _pressRA52:
   474                           	opt callstack 0
   475  0000BA                     	ds	2
   476  0000BC                     _secondReadRB0:
   477                           	opt callstack 0
   478  0000BC                     	ds	2
   479  0000BE                     _secondReadRA5:
   480                           	opt callstack 0
   481  0000BE                     	ds	2
   482  0000C0                     _pressRB0:
   483                           	opt callstack 0
   484  0000C0                     	ds	2
   485  0000C2                     _stopwatch_second:
   486                           	opt callstack 0
   487  0000C2                     	ds	2
   488  0000C4                     _stopwatch_minute:
   489                           	opt callstack 0
   490  0000C4                     	ds	2
   491  0000C6                     _stopwatch_count:
   492                           	opt callstack 0
   493  0000C6                     	ds	2
   494  0000C8                     _khac:
   495                           	opt callstack 0
   496  0000C8                     	ds	2
   497  0000CA                     _sec:
   498                           	opt callstack 0
   499  0000CA                     	ds	2
   500  0000CC                     _min:
   501                           	opt callstack 0
   502  0000CC                     	ds	2
   503  0000CE                     _hr:
   504                           	opt callstack 0
   505  0000CE                     	ds	2
   506                           
   507                           	psect	dataBANK0
   508  0000EE                     __pdataBANK0:
   509                           	opt callstack 0
   510  0000EE                     _TANSO:
   511                           	opt callstack 0
   512  0000EE                     	ds	4
   513  0000F2                     _B:
   514                           	opt callstack 0
   515  0000F2                     	ds	2
   516  0000F4                     _stopflag:
   517                           	opt callstack 0
   518  0000F4                     	ds	2
   519  0000F6                     _resetStop:
   520                           	opt callstack 0
   521  0000F6                     	ds	2
   522  0000F8                     _reset:
   523                           	opt callstack 0
   524  0000F8                     	ds	2
   525                           
   526                           	psect	bssBANK1
   527  000100                     __pbssBANK1:
   528                           	opt callstack 0
   529  000100                     _SCH_Task:
   530                           	opt callstack 0
   531  000100                     	ds	110
   532                           
   533                           	psect	cstackBANK0
   534  0000D0                     __pcstackBANK0:
   535                           	opt callstack 0
   536  0000D0                     ??_DHT_Init:
   537  0000D0                     ??_DHT_ReadData:
   538  0000D0                     ?___wmul:
   539                           	opt callstack 0
   540  0000D0                     ?___awdiv:
   541                           	opt callstack 0
   542  0000D0                     ?___awmod:
   543                           	opt callstack 0
   544  0000D0                     SendByteBBSPI@output:
   545                           	opt callstack 0
   546  0000D0                     DHT_Check@timeOut:
   547                           	opt callstack 0
   548  0000D0                     ___wmul@multiplier:
   549                           	opt callstack 0
   550  0000D0                     ___awdiv@dividend:
   551                           	opt callstack 0
   552  0000D0                     ___awmod@dividend:
   553                           	opt callstack 0
   554                           
   555                           ; 2 bytes @ 0x0
   556  0000D0                     	ds	1
   557  0000D1                     SendByteBBSPI@bitcount:
   558                           	opt callstack 0
   559                           
   560                           ; 1 bytes @ 0x1
   561  0000D1                     	ds	1
   562  0000D2                     SendByteBBSPI@input:
   563                           	opt callstack 0
   564  0000D2                     DHT_ReadData@datain:
   565                           	opt callstack 0
   566  0000D2                     ___wmul@multiplicand:
   567                           	opt callstack 0
   568  0000D2                     ___awdiv@divisor:
   569                           	opt callstack 0
   570  0000D2                     ___awmod@divisor:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x2
   574  0000D2                     	ds	1
   575  0000D3                     Port_BBSPIInit@port_dir:
   576                           	opt callstack 0
   577  0000D3                     WritePort_BBSPI@a:
   578                           	opt callstack 0
   579  0000D3                     DHT_ReadData@timeOut:
   580                           	opt callstack 0
   581                           
   582                           ; 2 bytes @ 0x3
   583  0000D3                     	ds	1
   584  0000D4                     WritePort_BBSPI@port_add:
   585                           	opt callstack 0
   586  0000D4                     ___awdiv@counter:
   587                           	opt callstack 0
   588  0000D4                     ___awmod@counter:
   589                           	opt callstack 0
   590  0000D4                     ___wmul@product:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0x4
   594  0000D4                     	ds	1
   595  0000D5                     LCDPutChar@ch:
   596                           	opt callstack 0
   597  0000D5                     LCDPutInst@ch:
   598                           	opt callstack 0
   599  0000D5                     DHT_ReadData@i:
   600                           	opt callstack 0
   601  0000D5                     ___awdiv@sign:
   602                           	opt callstack 0
   603  0000D5                     ___awmod@sign:
   604                           	opt callstack 0
   605                           
   606                           ; 1 bytes @ 0x5
   607  0000D5                     	ds	1
   608  0000D6                     ??_LCDInit:
   609  0000D6                     LCDPutStr@ptr:
   610                           	opt callstack 0
   611  0000D6                     start@i:
   612                           	opt callstack 0
   613  0000D6                     ___awdiv@quotient:
   614                           	opt callstack 0
   615                           
   616                           ; 2 bytes @ 0x6
   617  0000D6                     	ds	2
   618  0000D8                     ??_DHT_Result:
   619  0000D8                     insert@delay:
   620                           	opt callstack 0
   621                           
   622                           ; 2 bytes @ 0x8
   623  0000D8                     	ds	2
   624  0000DA                     insert@period:
   625                           	opt callstack 0
   626                           
   627                           ; 2 bytes @ 0xA
   628  0000DA                     	ds	2
   629  0000DC                     insert@func_ptr:
   630                           	opt callstack 0
   631                           
   632                           ; 3 bytes @ 0xC
   633  0000DC                     	ds	1
   634  0000DD                     dispatch@pFn:
   635                           	opt callstack 0
   636                           
   637                           ; 3 bytes @ 0xD
   638  0000DD                     	ds	2
   639  0000DF                     ??_insert:
   640                           
   641                           ; 1 bytes @ 0xF
   642  0000DF                     	ds	1
   643  0000E0                     dispatch@i:
   644                           	opt callstack 0
   645                           
   646                           ; 2 bytes @ 0x10
   647  0000E0                     	ds	3
   648  0000E3                     insert@time:
   649                           	opt callstack 0
   650                           
   651                           ; 2 bytes @ 0x13
   652  0000E3                     	ds	2
   653  0000E5                     insert@j:
   654                           	opt callstack 0
   655                           
   656                           ; 2 bytes @ 0x15
   657  0000E5                     	ds	2
   658  0000E7                     insert@i:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x17
   662  0000E7                     	ds	2
   663  0000E9                     ??_FSM:
   664                           
   665                           ; 1 bytes @ 0x19
   666  0000E9                     	ds	3
   667  0000EC                     FSM@lol:
   668                           	opt callstack 0
   669                           
   670                           ; 2 bytes @ 0x1C
   671  0000EC                     	ds	2
   672  0000EE                     
   673                           ; 1 bytes @ 0x1E
   674                           
   675                           	psect	cstackCOMRAM
   676  000001                     __pcstackCOMRAM:
   677                           	opt callstack 0
   678  000001                     ??_readButton1:
   679  000001                     ??_readButton2:
   680  000001                     ?i2___wmul:
   681                           	opt callstack 0
   682  000001                     i2___wmul@multiplier:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x0
   686  000001                     	ds	2
   687  000003                     i2___wmul@multiplicand:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x2
   691  000003                     	ds	2
   692  000005                     i2___wmul@product:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0x4
   696  000005                     	ds	2
   697  000007                     ??_remove:
   698                           
   699                           ; 1 bytes @ 0x6
   700  000007                     	ds	1
   701  000008                     remove@i:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0x7
   705  000008                     	ds	2
   706  00000A                     ??_update:
   707                           
   708                           ; 1 bytes @ 0x9
   709  00000A                     	ds	5
   710  00000F                     update@ptr_temp:
   711                           	opt callstack 0
   712                           
   713                           ; 3 bytes @ 0xE
   714  00000F                     	ds	3
   715  000012                     update@temp_1:
   716                           	opt callstack 0
   717                           
   718                           ; 2 bytes @ 0x11
   719  000012                     	ds	2
   720  000014                     update@time:
   721                           	opt callstack 0
   722                           
   723                           ; 2 bytes @ 0x13
   724  000014                     	ds	2
   725  000016                     update@temp_2:
   726                           	opt callstack 0
   727                           
   728                           ; 2 bytes @ 0x15
   729  000016                     	ds	2
   730  000018                     update@t:
   731                           	opt callstack 0
   732                           
   733                           ; 2 bytes @ 0x17
   734  000018                     	ds	2
   735  00001A                     update@i:
   736                           	opt callstack 0
   737                           
   738                           ; 2 bytes @ 0x19
   739  00001A                     	ds	2
   740  00001C                     update@j:
   741                           	opt callstack 0
   742                           
   743                           ; 2 bytes @ 0x1B
   744  00001C                     	ds	2
   745  00001E                     ??_tcInt:
   746                           
   747                           ; 1 bytes @ 0x1D
   748  00001E                     	ds	6
   749                           
   750 ;;
   751 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   752 ;;
   753 ;; *************** function _main *****************
   754 ;; Defined at:
   755 ;;		line 30 in file "main.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels required when called:   10
   775 ;; This function calls:
   776 ;;		_FSM
   777 ;;		_LCDInit
   778 ;;		_LCDPutInst
   779 ;;		_PIN
   780 ;;		_dispatch
   781 ;;		_start
   782 ;;		_tmr
   783 ;; This function is called by:
   784 ;;		Startup code after reset
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text0
   789  002972                     __ptext0:
   790                           	opt callstack 0
   791  002972                     _main:
   792                           	opt callstack 21
   793  002972                     
   794                           ;main.c: 31:     PIN();
   795  002972  EC9E  F014         	call	_PIN	;wreg free
   796  002976                     
   797                           ;main.c: 32:     start();
   798  002976  EC32  F010         	call	_start	;wreg free
   799  00297A                     
   800                           ;main.c: 36:     TRISD = 0x0;
   801  00297A  0E00               	movlw	0
   802  00297C  6E95               	movwf	149,c	;volatile
   803  00297E                     
   804                           ;main.c: 37:     LATD = 0x00;
   805  00297E  0E00               	movlw	0
   806  002980  6E8C               	movwf	140,c	;volatile
   807  002982                     
   808                           ;main.c: 38:     LCDInit();
   809  002982  EC0B  F014         	call	_LCDInit	;wreg free
   810  002986                     
   811                           ;main.c: 39:     LCDPutInst(0x01);
   812  002986  0E01               	movlw	1
   813  002988  EC7E  F014         	call	_LCDPutInst
   814  00298C                     
   815                           ;main.c: 41:     tmr();
   816  00298C  ECD0  F014         	call	_tmr	;wreg free
   817  002990                     l4465:
   818                           
   819                           ;main.c: 45:         dispatch();
   820  002990  ECA8  F00F         	call	_dispatch	;wreg free
   821  002994                     
   822                           ;main.c: 46:         FSM();
   823  002994  EC1E  F008         	call	_FSM	;wreg free
   824  002998  EFC8  F014         	goto	l4465
   825  00299C  EF07  F000         	goto	start
   826  0029A0                     __end_of_main:
   827                           	opt callstack 0
   828                           
   829 ;; *************** function _tmr *****************
   830 ;; Defined at:
   831 ;;		line 16 in file "time.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   849 ;;Total ram usage:        0 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    4
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text1
   860  0029A0                     __ptext1:
   861                           	opt callstack 0
   862  0029A0                     _tmr:
   863                           	opt callstack 26
   864  0029A0                     
   865                           ;time.c: 17:     OSCCONbits.IDLEN = 0b0;
   866  0029A0  9ED3               	bcf	211,7,c	;volatile
   867                           
   868                           ;time.c: 18:     OSCCONbits.OSTS = 0b0;
   869  0029A2  96D3               	bcf	211,3,c	;volatile
   870                           
   871                           ;time.c: 19:     OSCCONbits.IOFS = 0b1;
   872  0029A4  84D3               	bsf	211,2,c	;volatile
   873  0029A6                     
   874                           ;time.c: 20:     OSCCONbits.SCS = 0b10;
   875  0029A6  50D3               	movf	211,w,c	;volatile
   876  0029A8  0BFC               	andlw	-4
   877  0029AA  0902               	iorlw	2
   878  0029AC  6ED3               	movwf	211,c	;volatile
   879  0029AE                     
   880                           ;time.c: 21:     T0CONbits.TMR0ON = 0b1;
   881  0029AE  8ED5               	bsf	213,7,c	;volatile
   882  0029B0                     
   883                           ;time.c: 22:     T0CONbits.T08BIT = 0b1;
   884  0029B0  8CD5               	bsf	213,6,c	;volatile
   885  0029B2                     
   886                           ;time.c: 23:     T0CONbits.T0CS =0b0;
   887  0029B2  9AD5               	bcf	213,5,c	;volatile
   888  0029B4                     
   889                           ;time.c: 24:     T0CONbits.T0SE =0b0;
   890  0029B4  98D5               	bcf	213,4,c	;volatile
   891  0029B6                     
   892                           ;time.c: 25:     T0CONbits.PSA = 0b0;
   893  0029B6  96D5               	bcf	213,3,c	;volatile
   894                           
   895                           ;time.c: 27:     OSCCONbits.IRCF = 0b111;
   896  0029B8  0E70               	movlw	112
   897  0029BA  12D3               	iorwf	211,f,c	;volatile
   898                           
   899                           ;time.c: 28:     T0CONbits.T0PS=0b111;
   900  0029BC  0E07               	movlw	7
   901  0029BE  12D5               	iorwf	213,f,c	;volatile
   902                           
   903                           ;time.c: 35:        A = 177;
   904  0029C0  0E00               	movlw	0
   905  0029C2  0100               	movlb	0	; () banked
   906  0029C4  6FB3               	movwf	(_A+1)& (0+255),b
   907  0029C6  0EB1               	movlw	177
   908  0029C8  6FB2               	movwf	_A& (0+255),b
   909  0029CA                     
   910                           ; BSR set to: 0
   911  0029CA  0012               	return		;funcret
   912  0029CC                     __end_of_tmr:
   913                           	opt callstack 0
   914                           
   915 ;; *************** function _dispatch *****************
   916 ;; Defined at:
   917 ;;		line 147 in file "Sche.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  pFn             3   13[BANK0 ] PTR FTN()void 
   922 ;;		 -> NULL(0), fan1(1), fan3(1), heatpump(1), 
   923 ;;		 -> fan2(1), heater(1), DHT_Result(1), 
   924 ;;  i               2   16[BANK0 ] int 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;Total ram usage:        8 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    9
   941 ;; This function calls:
   942 ;;		_DHT_Result
   943 ;;		___wmul
   944 ;;		_fan1
   945 ;;		_fan2
   946 ;;		_fan3
   947 ;;		_heater
   948 ;;		_heatpump
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text2
   955  001F50                     __ptext2:
   956                           	opt callstack 0
   957  001F50                     _dispatch:
   958                           	opt callstack 21
   959  001F50                     
   960                           ;Sche.c: 150:         for(int i = 0; (i < 10 && ptr[i]!=((void*)0)); i++)
   961  001F50  0E00               	movlw	0
   962  001F52  0100               	movlb	0	; () banked
   963  001F54  6FE1               	movwf	(dispatch@i+1)& (0+255),b
   964  001F56  0E00               	movlw	0
   965  001F58  6FE0               	movwf	dispatch@i& (0+255),b
   966  001F5A  EF08  F010         	goto	l4395
   967  001F5E                     l4387:
   968                           
   969                           ; BSR set to: 0
   970                           ;Sche.c: 151:         {;Sche.c: 152:             void (*pFn)() = ptr[i];
   971  001F5E  C0E0  F0D0         	movff	dispatch@i,___wmul@multiplier
   972  001F62  C0E1  F0D1         	movff	dispatch@i+1,___wmul@multiplier+1
   973  001F66  0E00               	movlw	0
   974  001F68  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
   975  001F6A  0E03               	movlw	3
   976  001F6C  6FD2               	movwf	___wmul@multiplicand& (0+255),b
   977  001F6E  ECE6  F014         	call	___wmul	;wreg free
   978  001F72  0E60               	movlw	low _ptr
   979  001F74  0100               	movlb	0	; () banked
   980  001F76  25D0               	addwf	?___wmul& (0+255),w,b
   981  001F78  6ED9               	movwf	fsr2l,c
   982  001F7A  0E00               	movlw	high _ptr
   983  001F7C  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
   984  001F7E  6EDA               	movwf	fsr2h,c
   985  001F80  CFDE F0DD          	movff	postinc2,dispatch@pFn
   986  001F84  CFDE F0DE          	movff	postinc2,dispatch@pFn+1
   987  001F88  CFDD F0DF          	movff	postdec2,dispatch@pFn+2
   988                           
   989                           ;Sche.c: 153:             if(ptr[i]!=0){
   990  001F8C  C0E0  F0D0         	movff	dispatch@i,___wmul@multiplier
   991  001F90  C0E1  F0D1         	movff	dispatch@i+1,___wmul@multiplier+1
   992  001F94  0E00               	movlw	0
   993  001F96  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
   994  001F98  0E03               	movlw	3
   995  001F9A  6FD2               	movwf	___wmul@multiplicand& (0+255),b
   996  001F9C  ECE6  F014         	call	___wmul	;wreg free
   997  001FA0  0E60               	movlw	low _ptr
   998  001FA2  0100               	movlb	0	; () banked
   999  001FA4  25D0               	addwf	?___wmul& (0+255),w,b
  1000  001FA6  6ED9               	movwf	fsr2l,c
  1001  001FA8  0E00               	movlw	high _ptr
  1002  001FAA  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  1003  001FAC  6EDA               	movwf	fsr2h,c
  1004  001FAE  50DE               	movf	postinc2,w,c
  1005  001FB0  10DE               	iorwf	postinc2,w,c
  1006  001FB2  10DE               	iorwf	postinc2,w,c
  1007  001FB4  B4D8               	btfsc	status,2,c
  1008  001FB6  EFDF  F00F         	goto	u3661
  1009  001FBA  EFE1  F00F         	goto	u3660
  1010  001FBE                     u3661:
  1011  001FBE  EF06  F010         	goto	l4393
  1012  001FC2                     u3660:
  1013  001FC2                     
  1014                           ; BSR set to: 0
  1015                           ;Sche.c: 154:             (*pFn)();
  1016  001FC2  D802               	call	u3678
  1017  001FC4  EFEE  F00F         	goto	u3679
  1018  001FC8                     u3678:
  1019  001FC8  0005               	push	
  1020  001FCA  6EFA               	movwf	pclath,c
  1021  001FCC  51DD               	movf	dispatch@pFn& (0+255),w,b
  1022  001FCE  6EFD               	movwf	tosl,c
  1023  001FD0  51DE               	movf	(dispatch@pFn+1)& (0+255),w,b
  1024  001FD2  6EFE               	movwf	tosh,c
  1025  001FD4  51DF               	movf	(dispatch@pFn+2)& (0+255),w,b
  1026  001FD6  6EFF               	movwf	tosu,c
  1027  001FD8  50FA               	movf	pclath,w,c
  1028  001FDA  0012               	return		;indir
  1029  001FDC                     u3679:
  1030  001FDC                     
  1031                           ;Sche.c: 155:              ptr[i]=((void*)0);}
  1032  001FDC  C0E0  F0D0         	movff	dispatch@i,___wmul@multiplier
  1033  001FE0  C0E1  F0D1         	movff	dispatch@i+1,___wmul@multiplier+1
  1034  001FE4  0E00               	movlw	0
  1035  001FE6  0100               	movlb	0	; () banked
  1036  001FE8  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1037  001FEA  0E03               	movlw	3
  1038  001FEC  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  1039  001FEE  ECE6  F014         	call	___wmul	;wreg free
  1040  001FF2  0E60               	movlw	low _ptr
  1041  001FF4  0100               	movlb	0	; () banked
  1042  001FF6  25D0               	addwf	?___wmul& (0+255),w,b
  1043  001FF8  6ED9               	movwf	fsr2l,c
  1044  001FFA  0E00               	movlw	high _ptr
  1045  001FFC  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  1046  001FFE  6EDA               	movwf	fsr2h,c
  1047  002000  0E00               	movlw	0
  1048  002002  6EDE               	movwf	postinc2,c
  1049  002004  0E00               	movlw	0
  1050  002006  6EDE               	movwf	postinc2,c
  1051  002008  0E00               	movlw	0
  1052  00200A  6EDE               	movwf	postinc2,c
  1053  00200C                     l4393:
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;Sche.c: 156:         }
  1057  00200C  4BE0               	infsnz	dispatch@i& (0+255),f,b
  1058  00200E  2BE1               	incf	(dispatch@i+1)& (0+255),f,b
  1059  002010                     l4395:
  1060                           
  1061                           ; BSR set to: 0
  1062  002010  BFE1               	btfsc	(dispatch@i+1)& (0+255),7,b
  1063  002012  EF16  F010         	goto	u3680
  1064  002016  51E1               	movf	(dispatch@i+1)& (0+255),w,b
  1065  002018  E107               	bnz	u3681
  1066  00201A  0E0A               	movlw	10
  1067  00201C  5DE0               	subwf	dispatch@i& (0+255),w,b
  1068  00201E  B0D8               	btfsc	status,0,c
  1069  002020  EF14  F010         	goto	u3681
  1070  002024  EF16  F010         	goto	u3680
  1071  002028                     u3681:
  1072  002028  EF31  F010         	goto	l845
  1073  00202C                     u3680:
  1074  00202C                     
  1075                           ; BSR set to: 0
  1076  00202C  C0E0  F0D0         	movff	dispatch@i,___wmul@multiplier
  1077  002030  C0E1  F0D1         	movff	dispatch@i+1,___wmul@multiplier+1
  1078  002034  0E00               	movlw	0
  1079  002036  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1080  002038  0E03               	movlw	3
  1081  00203A  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  1082  00203C  ECE6  F014         	call	___wmul	;wreg free
  1083  002040  0E60               	movlw	low _ptr
  1084  002042  0100               	movlb	0	; () banked
  1085  002044  25D0               	addwf	?___wmul& (0+255),w,b
  1086  002046  6ED9               	movwf	fsr2l,c
  1087  002048  0E00               	movlw	high _ptr
  1088  00204A  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  1089  00204C  6EDA               	movwf	fsr2h,c
  1090  00204E  50DE               	movf	postinc2,w,c
  1091  002050  10DE               	iorwf	postinc2,w,c
  1092  002052  10DE               	iorwf	postinc2,w,c
  1093  002054  A4D8               	btfss	status,2,c
  1094  002056  EF2F  F010         	goto	u3691
  1095  00205A  EF31  F010         	goto	u3690
  1096  00205E                     u3691:
  1097  00205E  EFAF  F00F         	goto	l4387
  1098  002062                     u3690:
  1099  002062                     l845:
  1100                           
  1101                           ; BSR set to: 0
  1102  002062  0012               	return		;funcret
  1103  002064                     __end_of_dispatch:
  1104                           	opt callstack 0
  1105                           
  1106 ;; *************** function _fan1 *****************
  1107 ;; Defined at:
  1108 ;;		line 27 in file "Function.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;Total ram usage:        0 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    4
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_FSM
  1133 ;;		_dispatch
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text3
  1138  0029F4                     __ptext3:
  1139                           	opt callstack 0
  1140  0029F4                     _fan1:
  1141                           	opt callstack 25
  1142  0029F4  0E03               	movlw	3
  1143  0029F6  183C               	xorwf	_statepress^0,w,c
  1144  0029F8  A4D8               	btfss	status,2,c
  1145  0029FA  EF01  F015         	goto	u3421
  1146  0029FE  EF03  F015         	goto	u3420
  1147  002A02                     u3421:
  1148  002A02  EF0C  F015         	goto	l577
  1149  002A06                     u3420:
  1150  002A06                     
  1151                           ;Function.c: 29:     LATD4=~LATD4;
  1152  002A06  A88C               	btfss	3980,4,c	;volatile
  1153  002A08  EF08  F015         	goto	u3431
  1154  002A0C  EF0B  F015         	goto	u3430
  1155  002A10                     u3431:
  1156  002A10  888C               	bsf	3980,4,c	;volatile
  1157  002A12  EF0C  F015         	goto	u3445
  1158  002A16                     u3430:
  1159  002A16  988C               	bcf	3980,4,c	;volatile
  1160  002A18                     u3445:
  1161  002A18                     l577:
  1162  002A18  0012               	return		;funcret
  1163  002A1A                     __end_of_fan1:
  1164                           	opt callstack 0
  1165                           
  1166 ;; *************** function _fan3 *****************
  1167 ;; Defined at:
  1168 ;;		line 23 in file "Function.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    4
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_FSM
  1193 ;;		_dispatch
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text4
  1198  002A1A                     __ptext4:
  1199                           	opt callstack 0
  1200  002A1A                     _fan3:
  1201                           	opt callstack 25
  1202  002A1A  0E03               	movlw	3
  1203  002A1C  183C               	xorwf	_statepress^0,w,c
  1204  002A1E  A4D8               	btfss	status,2,c
  1205  002A20  EF14  F015         	goto	u3391
  1206  002A24  EF16  F015         	goto	u3390
  1207  002A28                     u3391:
  1208  002A28  EF1F  F015         	goto	l573
  1209  002A2C                     u3390:
  1210  002A2C                     
  1211                           ;Function.c: 25:     LATD3=~LATD3;
  1212  002A2C  A68C               	btfss	3980,3,c	;volatile
  1213  002A2E  EF1B  F015         	goto	u3401
  1214  002A32  EF1E  F015         	goto	u3400
  1215  002A36                     u3401:
  1216  002A36  868C               	bsf	3980,3,c	;volatile
  1217  002A38  EF1F  F015         	goto	u3415
  1218  002A3C                     u3400:
  1219  002A3C  968C               	bcf	3980,3,c	;volatile
  1220  002A3E                     u3415:
  1221  002A3E                     l573:
  1222  002A3E  0012               	return		;funcret
  1223  002A40                     __end_of_fan3:
  1224                           	opt callstack 0
  1225                           
  1226 ;; *************** function _fan2 *****************
  1227 ;; Defined at:
  1228 ;;		line 15 in file "Function.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;Total ram usage:        0 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    4
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_FSM
  1253 ;;		_dispatch
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text5
  1258  002A40                     __ptext5:
  1259                           	opt callstack 0
  1260  002A40                     _fan2:
  1261                           	opt callstack 25
  1262  002A40  0E03               	movlw	3
  1263  002A42  183C               	xorwf	_statepress^0,w,c
  1264  002A44  A4D8               	btfss	status,2,c
  1265  002A46  EF27  F015         	goto	u3331
  1266  002A4A  EF29  F015         	goto	u3330
  1267  002A4E                     u3331:
  1268  002A4E  EF32  F015         	goto	l565
  1269  002A52                     u3330:
  1270  002A52                     
  1271                           ;Function.c: 17:     LATD0=~LATD0;
  1272  002A52  A08C               	btfss	3980,0,c	;volatile
  1273  002A54  EF2E  F015         	goto	u3341
  1274  002A58  EF31  F015         	goto	u3340
  1275  002A5C                     u3341:
  1276  002A5C  808C               	bsf	3980,0,c	;volatile
  1277  002A5E  EF32  F015         	goto	u3355
  1278  002A62                     u3340:
  1279  002A62  908C               	bcf	3980,0,c	;volatile
  1280  002A64                     u3355:
  1281  002A64                     l565:
  1282  002A64  0012               	return		;funcret
  1283  002A66                     __end_of_fan2:
  1284                           	opt callstack 0
  1285                           
  1286 ;; *************** function _heater *****************
  1287 ;; Defined at:
  1288 ;;		line 9 in file "Function.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;Total ram usage:        0 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    4
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_FSM
  1313 ;;		_dispatch
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text6
  1318  002B14                     __ptext6:
  1319                           	opt callstack 0
  1320  002B14                     _heater:
  1321                           	opt callstack 25
  1322  002B14  0E03               	movlw	3
  1323  002B16  6E3C               	movwf	_statepress^0,c
  1324  002B18                     
  1325                           ;Function.c: 11:     LATD1=~LATD1;
  1326  002B18  A28C               	btfss	3980,1,c	;volatile
  1327  002B1A  EF91  F015         	goto	u3311
  1328  002B1E  EF94  F015         	goto	u3310
  1329  002B22                     u3311:
  1330  002B22  828C               	bsf	3980,1,c	;volatile
  1331  002B24  EF95  F015         	goto	u3325
  1332  002B28                     u3310:
  1333  002B28  928C               	bcf	3980,1,c	;volatile
  1334  002B2A                     u3325:
  1335  002B2A  0012               	return		;funcret
  1336  002B2C                     __end_of_heater:
  1337                           	opt callstack 0
  1338                           
  1339 ;; *************** function _DHT_Result *****************
  1340 ;; Defined at:
  1341 ;;		line 64 in file "DHT11.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;Total ram usage:        2 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    8
  1362 ;; This function calls:
  1363 ;;		_DHT_Check
  1364 ;;		_DHT_Init
  1365 ;;		_DHT_ReadData
  1366 ;;		_LCDPutChar
  1367 ;;		_LCDPutInst
  1368 ;;		_LCDPutStr
  1369 ;;		___awdiv
  1370 ;;		___awmod
  1371 ;; This function is called by:
  1372 ;;		_FSM
  1373 ;;		_DHT11
  1374 ;;		_dispatch
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text7
  1379  002288                     __ptext7:
  1380                           	opt callstack 0
  1381  002288                     _DHT_Result:
  1382                           	opt callstack 21
  1383  002288                     
  1384                           ;DHT11.c: 65:     DHT_Init();
  1385  002288  EC59  F015         	call	_DHT_Init	;wreg free
  1386  00228C                     
  1387                           ;DHT11.c: 66:     DHT_Check();
  1388  00228C  EC06  F013         	call	_DHT_Check	;wreg free
  1389  002290                     
  1390                           ;DHT11.c: 67:     RH_Integral = DHT_ReadData();
  1391  002290  ECC9  F011         	call	_DHT_ReadData	;wreg free
  1392  002294  6E37               	movwf	_RH_Integral^0,c
  1393  002296                     
  1394                           ;DHT11.c: 68:     RH_Decimal = DHT_ReadData();
  1395  002296  ECC9  F011         	call	_DHT_ReadData	;wreg free
  1396  00229A  6E38               	movwf	_RH_Decimal^0,c
  1397  00229C                     
  1398                           ;DHT11.c: 69:     T_Integral = DHT_ReadData();
  1399  00229C  ECC9  F011         	call	_DHT_ReadData	;wreg free
  1400  0022A0  6E35               	movwf	_T_Integral^0,c
  1401  0022A2                     
  1402                           ;DHT11.c: 70:     T_Decimal = DHT_ReadData();
  1403  0022A2  ECC9  F011         	call	_DHT_ReadData	;wreg free
  1404  0022A6  6E36               	movwf	_T_Decimal^0,c
  1405  0022A8                     
  1406                           ;DHT11.c: 71:     Checksum = DHT_ReadData();
  1407  0022A8  ECC9  F011         	call	_DHT_ReadData	;wreg free
  1408  0022AC  6E34               	movwf	_Checksum^0,c
  1409  0022AE                     
  1410                           ;DHT11.c: 73:     LCDPutInst(0x8A);
  1411  0022AE  0E8A               	movlw	138
  1412  0022B0  EC7E  F014         	call	_LCDPutInst
  1413  0022B4                     
  1414                           ;DHT11.c: 74:     if(Checksum != ((RH_Integral+RH_Decimal+T_Integral+T_Decimal)&0xFF)){
  1415  0022B4  5038               	movf	_RH_Decimal^0,w,c
  1416  0022B6  C037  F0D8         	movff	_RH_Integral,??_DHT_Result
  1417  0022BA  0100               	movlb	0	; () banked
  1418  0022BC  6BD9               	clrf	(??_DHT_Result+1)& (0+255),b
  1419  0022BE  27D8               	addwf	??_DHT_Result& (0+255),f,b
  1420  0022C0  0E00               	movlw	0
  1421  0022C2  23D9               	addwfc	(??_DHT_Result+1)& (0+255),f,b
  1422  0022C4  5035               	movf	_T_Integral^0,w,c
  1423  0022C6  27D8               	addwf	??_DHT_Result& (0+255),f,b
  1424  0022C8  0E00               	movlw	0
  1425  0022CA  23D9               	addwfc	(??_DHT_Result+1)& (0+255),f,b
  1426  0022CC  5036               	movf	_T_Decimal^0,w,c
  1427  0022CE  27D8               	addwf	??_DHT_Result& (0+255),f,b
  1428  0022D0  0E00               	movlw	0
  1429  0022D2  23D9               	addwfc	(??_DHT_Result+1)& (0+255),f,b
  1430  0022D4  51D8               	movf	??_DHT_Result& (0+255),w,b
  1431  0022D6  1834               	xorwf	_Checksum^0,w,c
  1432  0022D8  B4D8               	btfsc	status,2,c
  1433  0022DA  EF71  F011         	goto	u3451
  1434  0022DE  EF73  F011         	goto	u3450
  1435  0022E2                     u3451:
  1436  0022E2  EF75  F011         	goto	l4167
  1437  0022E6                     u3450:
  1438  0022E6  EFC8  F011         	goto	l1266
  1439  0022EA                     l4167:
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;DHT11.c: 78:     {;DHT11.c: 79:            LCDPutInst(0xC4);
  1443  0022EA  0EC4               	movlw	196
  1444  0022EC  EC7E  F014         	call	_LCDPutInst
  1445  0022F0                     
  1446                           ;DHT11.c: 80:         LCDPutStr("T:");
  1447  0022F0  0E37               	movlw	low STR_7
  1448  0022F2  0100               	movlb	0	; () banked
  1449  0022F4  6FD6               	movwf	LCDPutStr@ptr& (0+255),b
  1450  0022F6  0E10               	movlw	high STR_7
  1451  0022F8  6FD7               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  1452  0022FA  EC3E  F014         	call	_LCDPutStr	;wreg free
  1453  0022FE                     
  1454                           ;DHT11.c: 81:         LCDPutChar(T_Integral/10+'0');
  1455  0022FE  C035  F0D0         	movff	_T_Integral,___awdiv@dividend
  1456  002302  0100               	movlb	0	; () banked
  1457  002304  6BD1               	clrf	(___awdiv@dividend+1)& (0+255),b
  1458  002306  0E00               	movlw	0
  1459  002308  6FD3               	movwf	(___awdiv@divisor+1)& (0+255),b
  1460  00230A  0E0A               	movlw	10
  1461  00230C  6FD2               	movwf	___awdiv@divisor& (0+255),b
  1462  00230E  EC4A  F012         	call	___awdiv	;wreg free
  1463  002312  0100               	movlb	0	; () banked
  1464  002314  51D0               	movf	?___awdiv& (0+255),w,b
  1465  002316  0F30               	addlw	48
  1466  002318  EC5E  F014         	call	_LCDPutChar
  1467  00231C                     
  1468                           ;DHT11.c: 82:         LCDPutChar(T_Integral%10+'0');
  1469  00231C  C035  F0D0         	movff	_T_Integral,___awmod@dividend
  1470  002320  0100               	movlb	0	; () banked
  1471  002322  6BD1               	clrf	(___awmod@dividend+1)& (0+255),b
  1472  002324  0E00               	movlw	0
  1473  002326  6FD3               	movwf	(___awmod@divisor+1)& (0+255),b
  1474  002328  0E0A               	movlw	10
  1475  00232A  6FD2               	movwf	___awmod@divisor& (0+255),b
  1476  00232C  ECAD  F012         	call	___awmod	;wreg free
  1477  002330  0100               	movlb	0	; () banked
  1478  002332  51D0               	movf	?___awmod& (0+255),w,b
  1479  002334  0F30               	addlw	48
  1480  002336  EC5E  F014         	call	_LCDPutChar
  1481  00233A                     
  1482                           ;DHT11.c: 83:         LCDPutInst(0xC0);
  1483  00233A  0EC0               	movlw	192
  1484  00233C  EC7E  F014         	call	_LCDPutInst
  1485  002340                     
  1486                           ;DHT11.c: 84:         LCDPutInst(0xCA);
  1487  002340  0ECA               	movlw	202
  1488  002342  EC7E  F014         	call	_LCDPutInst
  1489  002346                     
  1490                           ;DHT11.c: 85:         LCDPutStr("H:");
  1491  002346  0E34               	movlw	low STR_8
  1492  002348  0100               	movlb	0	; () banked
  1493  00234A  6FD6               	movwf	LCDPutStr@ptr& (0+255),b
  1494  00234C  0E10               	movlw	high STR_8
  1495  00234E  6FD7               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  1496  002350  EC3E  F014         	call	_LCDPutStr	;wreg free
  1497                           
  1498                           ;DHT11.c: 86:         LCDPutChar(RH_Integral/10+'0');
  1499  002354  C037  F0D0         	movff	_RH_Integral,___awdiv@dividend
  1500  002358  0100               	movlb	0	; () banked
  1501  00235A  6BD1               	clrf	(___awdiv@dividend+1)& (0+255),b
  1502  00235C  0E00               	movlw	0
  1503  00235E  6FD3               	movwf	(___awdiv@divisor+1)& (0+255),b
  1504  002360  0E0A               	movlw	10
  1505  002362  6FD2               	movwf	___awdiv@divisor& (0+255),b
  1506  002364  EC4A  F012         	call	___awdiv	;wreg free
  1507  002368  0100               	movlb	0	; () banked
  1508  00236A  51D0               	movf	?___awdiv& (0+255),w,b
  1509  00236C  0F30               	addlw	48
  1510  00236E  EC5E  F014         	call	_LCDPutChar
  1511                           
  1512                           ;DHT11.c: 87:         LCDPutChar(RH_Integral%10+'0');
  1513  002372  C037  F0D0         	movff	_RH_Integral,___awmod@dividend
  1514  002376  0100               	movlb	0	; () banked
  1515  002378  6BD1               	clrf	(___awmod@dividend+1)& (0+255),b
  1516  00237A  0E00               	movlw	0
  1517  00237C  6FD3               	movwf	(___awmod@divisor+1)& (0+255),b
  1518  00237E  0E0A               	movlw	10
  1519  002380  6FD2               	movwf	___awmod@divisor& (0+255),b
  1520  002382  ECAD  F012         	call	___awmod	;wreg free
  1521  002386  0100               	movlb	0	; () banked
  1522  002388  51D0               	movf	?___awmod& (0+255),w,b
  1523  00238A  0F30               	addlw	48
  1524  00238C  EC5E  F014         	call	_LCDPutChar
  1525  002390                     l1266:
  1526  002390  0012               	return		;funcret
  1527  002392                     __end_of_DHT_Result:
  1528                           	opt callstack 0
  1529                           
  1530 ;; *************** function _heatpump *****************
  1531 ;; Defined at:
  1532 ;;		line 19 in file "Function.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;		None
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;		None
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;Total ram usage:        0 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    4
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_FSM
  1557 ;;		_dispatch
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text8
  1562  002A66                     __ptext8:
  1563                           	opt callstack 0
  1564  002A66                     _heatpump:
  1565                           	opt callstack 25
  1566  002A66  0E03               	movlw	3
  1567  002A68  183C               	xorwf	_statepress^0,w,c
  1568  002A6A  A4D8               	btfss	status,2,c
  1569  002A6C  EF3A  F015         	goto	u3361
  1570  002A70  EF3C  F015         	goto	u3360
  1571  002A74                     u3361:
  1572  002A74  EF45  F015         	goto	l569
  1573  002A78                     u3360:
  1574  002A78                     
  1575                           ;Function.c: 21:     LATD2=~LATD2;
  1576  002A78  A48C               	btfss	3980,2,c	;volatile
  1577  002A7A  EF41  F015         	goto	u3371
  1578  002A7E  EF44  F015         	goto	u3370
  1579  002A82                     u3371:
  1580  002A82  848C               	bsf	3980,2,c	;volatile
  1581  002A84  EF45  F015         	goto	u3385
  1582  002A88                     u3370:
  1583  002A88  948C               	bcf	3980,2,c	;volatile
  1584  002A8A                     u3385:
  1585  002A8A                     l569:
  1586  002A8A  0012               	return		;funcret
  1587  002A8C                     __end_of_heatpump:
  1588                           	opt callstack 0
  1589                           
  1590 ;; *************** function _DHT_ReadData *****************
  1591 ;; Defined at:
  1592 ;;		line 38 in file "DHT11.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  timeOut         2    3[BANK0 ] int 
  1597 ;;  i               1    5[BANK0 ] unsigned char 
  1598 ;;  datain          1    2[BANK0 ] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      unsigned char 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;Total ram usage:        6 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    4
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_DHT_Result
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	text9
  1623  002392                     __ptext9:
  1624                           	opt callstack 0
  1625  002392                     _DHT_ReadData:
  1626                           	opt callstack 24
  1627  002392                     
  1628                           ;DHT11.c: 40:     char i,datain = 0;
  1629  002392  0E00               	movlw	0
  1630  002394  0100               	movlb	0	; () banked
  1631  002396  6FD2               	movwf	DHT_ReadData@datain& (0+255),b
  1632                           
  1633                           ;DHT11.c: 41:     int timeOut = 10000;
  1634  002398  0E27               	movlw	39
  1635  00239A  6FD4               	movwf	(DHT_ReadData@timeOut+1)& (0+255),b
  1636  00239C  0E10               	movlw	16
  1637  00239E  6FD3               	movwf	DHT_ReadData@timeOut& (0+255),b
  1638                           
  1639                           ;DHT11.c: 42:     for(i=0;i<8;i++)
  1640  0023A0  0E00               	movlw	0
  1641  0023A2  6FD5               	movwf	DHT_ReadData@i& (0+255),b
  1642  0023A4  EFE3  F011         	goto	l1252
  1643  0023A8                     l3943:
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;DHT11.c: 45:             if(--timeOut==0){
  1647  0023A8  07D3               	decf	DHT_ReadData@timeOut& (0+255),f,b
  1648  0023AA  A0D8               	btfss	status,0,c
  1649  0023AC  07D4               	decf	(DHT_ReadData@timeOut+1)& (0+255),f,b
  1650  0023AE  51D3               	movf	DHT_ReadData@timeOut& (0+255),w,b
  1651  0023B0  11D4               	iorwf	(DHT_ReadData@timeOut+1)& (0+255),w,b
  1652  0023B2  A4D8               	btfss	status,2,c
  1653  0023B4  EFDE  F011         	goto	u3011
  1654  0023B8  EFE0  F011         	goto	u3010
  1655  0023BC                     u3011:
  1656  0023BC  EFE3  F011         	goto	l1252
  1657  0023C0                     u3010:
  1658  0023C0                     l3945:
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;DHT11.c: 46:                 return 0;
  1662  0023C0  0E00               	movlw	0
  1663  0023C2  EF49  F012         	goto	l1255
  1664  0023C6                     l1252:
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;DHT11.c: 44:         while(!(PORTCbits.RC0 & 1)){
  1668  0023C6  A082               	btfss	130,0,c	;volatile
  1669  0023C8  EFE8  F011         	goto	u3021
  1670  0023CC  EFEA  F011         	goto	u3020
  1671  0023D0                     u3021:
  1672  0023D0  EFD4  F011         	goto	l3943
  1673  0023D4                     u3020:
  1674  0023D4                     
  1675                           ; BSR set to: 0
  1676                           ;DHT11.c: 49:         _delay((unsigned long)((25)*(10000000/4000000.0)));
  1677  0023D4  0E14               	movlw	20
  1678  0023D6                     u3767:
  1679  0023D6  2EE8               	decfsz	wreg,f,c
  1680  0023D8  D7FE               	bra	u3767
  1681  0023DA  D000               	nop2	
  1682  0023DC                     
  1683                           ;DHT11.c: 50:         if(!PORTCbits.RC0 & 1)
  1684  0023DC  A082               	btfss	130,0,c	;volatile
  1685  0023DE  EFF3  F011         	goto	u3031
  1686  0023E2  EFF6  F011         	goto	u3030
  1687  0023E6                     u3031:
  1688  0023E6  0E01               	movlw	1
  1689  0023E8  EFF7  F011         	goto	u3040
  1690  0023EC                     u3030:
  1691  0023EC  0E00               	movlw	0
  1692  0023EE                     u3040:
  1693  0023EE  0100               	movlb	0	; () banked
  1694  0023F0  6FD0               	movwf	??_DHT_ReadData& (0+255),b
  1695  0023F2  6BD1               	clrf	(??_DHT_ReadData+1)& (0+255),b
  1696  0023F4  A1D0               	btfss	??_DHT_ReadData& (0+255),0,b
  1697  0023F6  EFFF  F011         	goto	u3051
  1698  0023FA  EF01  F012         	goto	u3050
  1699  0023FE                     u3051:
  1700  0023FE  EF14  F012         	goto	l3955
  1701  002402                     u3050:
  1702  002402                     
  1703                           ; BSR set to: 0
  1704                           ;DHT11.c: 51:           datain &= ~(1 << (7-i));
  1705  002402  51D5               	movf	DHT_ReadData@i& (0+255),w,b
  1706  002404  0807               	sublw	7
  1707  002406  6FD0               	movwf	??_DHT_ReadData& (0+255),b
  1708  002408  0E01               	movlw	1
  1709  00240A  6FD1               	movwf	(??_DHT_ReadData+1)& (0+255),b
  1710  00240C  2BD0               	incf	??_DHT_ReadData& (0+255),f,b
  1711  00240E  EF0B  F012         	goto	u3064
  1712  002412                     u3065:
  1713  002412  90D8               	bcf	status,0,c
  1714  002414  37D1               	rlcf	(??_DHT_ReadData+1)& (0+255),f,b
  1715  002416                     u3064:
  1716  002416  2FD0               	decfsz	??_DHT_ReadData& (0+255),f,b
  1717  002418  EF09  F012         	goto	u3065
  1718  00241C  0100               	movlb	0	; () banked
  1719  00241E  51D1               	movf	(??_DHT_ReadData+1)& (0+255),w,b
  1720  002420  0AFF               	xorlw	255
  1721  002422  17D2               	andwf	DHT_ReadData@datain& (0+255),f,b
  1722  002424  EF3F  F012         	goto	l3965
  1723  002428                     l3955:
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;DHT11.c: 53:             datain |= (1 << (7-i));
  1727  002428  51D5               	movf	DHT_ReadData@i& (0+255),w,b
  1728  00242A  0807               	sublw	7
  1729  00242C  6FD0               	movwf	??_DHT_ReadData& (0+255),b
  1730  00242E  0E01               	movlw	1
  1731  002430  6FD1               	movwf	(??_DHT_ReadData+1)& (0+255),b
  1732  002432  2BD0               	incf	??_DHT_ReadData& (0+255),f,b
  1733  002434  EF1E  F012         	goto	u3074
  1734  002438                     u3075:
  1735  002438  90D8               	bcf	status,0,c
  1736  00243A  37D1               	rlcf	(??_DHT_ReadData+1)& (0+255),f,b
  1737  00243C                     u3074:
  1738  00243C  2FD0               	decfsz	??_DHT_ReadData& (0+255),f,b
  1739  00243E  EF1C  F012         	goto	u3075
  1740  002442  0100               	movlb	0	; () banked
  1741  002444  51D1               	movf	(??_DHT_ReadData+1)& (0+255),w,b
  1742  002446  13D2               	iorwf	DHT_ReadData@datain& (0+255),f,b
  1743  002448                     
  1744                           ; BSR set to: 0
  1745                           ;DHT11.c: 54:             timeOut = 10000;
  1746  002448  0E27               	movlw	39
  1747  00244A  6FD4               	movwf	(DHT_ReadData@timeOut+1)& (0+255),b
  1748  00244C  0E10               	movlw	16
  1749  00244E  6FD3               	movwf	DHT_ReadData@timeOut& (0+255),b
  1750                           
  1751                           ;DHT11.c: 55:             while(PORTCbits.RC0 & 1){
  1752  002450  EF38  F012         	goto	l1259
  1753  002454                     l3959:
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;DHT11.c: 56:                 if(--timeOut==0){
  1757  002454  07D3               	decf	DHT_ReadData@timeOut& (0+255),f,b
  1758  002456  A0D8               	btfss	status,0,c
  1759  002458  07D4               	decf	(DHT_ReadData@timeOut+1)& (0+255),f,b
  1760  00245A  51D3               	movf	DHT_ReadData@timeOut& (0+255),w,b
  1761  00245C  11D4               	iorwf	(DHT_ReadData@timeOut+1)& (0+255),w,b
  1762  00245E  A4D8               	btfss	status,2,c
  1763  002460  EF34  F012         	goto	u3081
  1764  002464  EF36  F012         	goto	u3080
  1765  002468                     u3081:
  1766  002468  EF38  F012         	goto	l1259
  1767  00246C                     u3080:
  1768  00246C  EFE0  F011         	goto	l3945
  1769  002470                     l1259:
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;DHT11.c: 55:             while(PORTCbits.RC0 & 1){
  1773  002470  B082               	btfsc	130,0,c	;volatile
  1774  002472  EF3D  F012         	goto	u3091
  1775  002476  EF3F  F012         	goto	u3090
  1776  00247A                     u3091:
  1777  00247A  EF2A  F012         	goto	l3959
  1778  00247E                     u3090:
  1779  00247E                     l3965:
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;DHT11.c: 61:     }
  1783  00247E  2BD5               	incf	DHT_ReadData@i& (0+255),f,b
  1784  002480                     
  1785                           ; BSR set to: 0
  1786  002480  0E07               	movlw	7
  1787  002482  65D5               	cpfsgt	DHT_ReadData@i& (0+255),b
  1788  002484  EF46  F012         	goto	u3101
  1789  002488  EF48  F012         	goto	u3100
  1790  00248C                     u3101:
  1791  00248C  EFE3  F011         	goto	l1252
  1792  002490                     u3100:
  1793  002490                     
  1794                           ; BSR set to: 0
  1795                           ;DHT11.c: 62:   return datain;
  1796  002490  51D2               	movf	DHT_ReadData@datain& (0+255),w,b
  1797  002492                     l1255:
  1798                           
  1799                           ; BSR set to: 0
  1800  002492  0012               	return		;funcret
  1801  002494                     __end_of_DHT_ReadData:
  1802                           	opt callstack 0
  1803                           
  1804 ;; *************** function _DHT_Init *****************
  1805 ;; Defined at:
  1806 ;;		line 5 in file "DHT11.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;Total ram usage:        1 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    4
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_DHT_Result
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text10
  1835  002AB2                     __ptext10:
  1836                           	opt callstack 0
  1837  002AB2                     _DHT_Init:
  1838                           	opt callstack 24
  1839  002AB2                     
  1840                           ;DHT11.c: 7:     TRISCbits.TRISC0 = 0;
  1841  002AB2  9094               	bcf	148,0,c	;volatile
  1842                           
  1843                           ;DHT11.c: 8:     LATCbits.LATC0 = 0;
  1844  002AB4  908B               	bcf	139,0,c	;volatile
  1845  002AB6                     
  1846                           ;DHT11.c: 9:     _delay((unsigned long)((20)*(10000000/4000.0)));
  1847  002AB6  0E41               	movlw	65
  1848  002AB8  0100               	movlb	0	; () banked
  1849  002ABA  6FD0               	movwf	??_DHT_Init& (0+255),b
  1850  002ABC  0EEE               	movlw	238
  1851  002ABE                     u3777:
  1852  002ABE  2EE8               	decfsz	wreg,f,c
  1853  002AC0  D7FE               	bra	u3777
  1854  002AC2  2FD0               	decfsz	??_DHT_Init& (0+255),f,b
  1855  002AC4  D7FC               	bra	u3777
  1856  002AC6  F000               	nop	
  1857  002AC8                     
  1858                           ;DHT11.c: 10:     LATCbits.LATC0 = 1;
  1859  002AC8  808B               	bsf	139,0,c	;volatile
  1860                           
  1861                           ;DHT11.c: 11:     _delay((unsigned long)((20)*(10000000/4000000.0)));
  1862  002ACA  0E10               	movlw	16
  1863  002ACC                     u3787:
  1864  002ACC  2EE8               	decfsz	wreg,f,c
  1865  002ACE  D7FE               	bra	u3787
  1866  002AD0  D000               	nop2	
  1867  002AD2                     
  1868                           ;DHT11.c: 12:     TRISCbits.TRISC0 = 1;
  1869  002AD2  8094               	bsf	148,0,c	;volatile
  1870  002AD4  0012               	return		;funcret
  1871  002AD6                     __end_of_DHT_Init:
  1872                           	opt callstack 0
  1873                           
  1874 ;; *************** function _DHT_Check *****************
  1875 ;; Defined at:
  1876 ;;		line 14 in file "DHT11.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  timeOut         2    0[BANK0 ] int 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;Total ram usage:        2 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    4
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_DHT_Result
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text11
  1905  00260C                     __ptext11:
  1906                           	opt callstack 0
  1907  00260C                     _DHT_Check:
  1908                           	opt callstack 24
  1909  00260C                     
  1910                           ;DHT11.c: 16:     int timeOut = 10000;
  1911  00260C  0E27               	movlw	39
  1912  00260E  0100               	movlb	0	; () banked
  1913  002610  6FD1               	movwf	(DHT_Check@timeOut+1)& (0+255),b
  1914  002612  0E10               	movlw	16
  1915  002614  6FD0               	movwf	DHT_Check@timeOut& (0+255),b
  1916                           
  1917                           ;DHT11.c: 17:     while(PORTCbits.RC0 & 1){
  1918  002616  EF1B  F013         	goto	l1235
  1919  00261A                     l3915:
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;DHT11.c: 18:         if(--timeOut==0){
  1923  00261A  07D0               	decf	DHT_Check@timeOut& (0+255),f,b
  1924  00261C  A0D8               	btfss	status,0,c
  1925  00261E  07D1               	decf	(DHT_Check@timeOut+1)& (0+255),f,b
  1926  002620  51D0               	movf	DHT_Check@timeOut& (0+255),w,b
  1927  002622  11D1               	iorwf	(DHT_Check@timeOut+1)& (0+255),w,b
  1928  002624  A4D8               	btfss	status,2,c
  1929  002626  EF17  F013         	goto	u2951
  1930  00262A  EF19  F013         	goto	u2950
  1931  00262E                     u2951:
  1932  00262E  EF1B  F013         	goto	l1235
  1933  002632                     u2950:
  1934  002632                     l3917:
  1935                           
  1936                           ; BSR set to: 0
  1937  002632  EF58  F013         	goto	l1238
  1938  002636                     l1235:
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;DHT11.c: 17:     while(PORTCbits.RC0 & 1){
  1942  002636  B082               	btfsc	130,0,c	;volatile
  1943  002638  EF20  F013         	goto	u2961
  1944  00263C  EF22  F013         	goto	u2960
  1945  002640                     u2961:
  1946  002640  EF0D  F013         	goto	l3915
  1947  002644                     u2960:
  1948  002644                     
  1949                           ; BSR set to: 0
  1950                           ;DHT11.c: 23:     timeOut = 10000;
  1951  002644  0E27               	movlw	39
  1952  002646  6FD1               	movwf	(DHT_Check@timeOut+1)& (0+255),b
  1953  002648  0E10               	movlw	16
  1954  00264A  6FD0               	movwf	DHT_Check@timeOut& (0+255),b
  1955                           
  1956                           ;DHT11.c: 24:     while(!(PORTCbits.RC0&1)){
  1957  00264C  EF36  F013         	goto	l1240
  1958  002650                     l3923:
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;DHT11.c: 25:         if(--timeOut==0){
  1962  002650  07D0               	decf	DHT_Check@timeOut& (0+255),f,b
  1963  002652  A0D8               	btfss	status,0,c
  1964  002654  07D1               	decf	(DHT_Check@timeOut+1)& (0+255),f,b
  1965  002656  51D0               	movf	DHT_Check@timeOut& (0+255),w,b
  1966  002658  11D1               	iorwf	(DHT_Check@timeOut+1)& (0+255),w,b
  1967  00265A  A4D8               	btfss	status,2,c
  1968  00265C  EF32  F013         	goto	u2971
  1969  002660  EF34  F013         	goto	u2970
  1970  002664                     u2971:
  1971  002664  EF36  F013         	goto	l1240
  1972  002668                     u2970:
  1973  002668  EF19  F013         	goto	l3917
  1974  00266C                     l1240:
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;DHT11.c: 24:     while(!(PORTCbits.RC0&1)){
  1978  00266C  A082               	btfss	130,0,c	;volatile
  1979  00266E  EF3B  F013         	goto	u2981
  1980  002672  EF3D  F013         	goto	u2980
  1981  002676                     u2981:
  1982  002676  EF28  F013         	goto	l3923
  1983  00267A                     u2980:
  1984  00267A                     
  1985                           ; BSR set to: 0
  1986                           ;DHT11.c: 30:     timeOut = 10000;
  1987  00267A  0E27               	movlw	39
  1988  00267C  6FD1               	movwf	(DHT_Check@timeOut+1)& (0+255),b
  1989  00267E  0E10               	movlw	16
  1990  002680  6FD0               	movwf	DHT_Check@timeOut& (0+255),b
  1991                           
  1992                           ;DHT11.c: 31:     while(PORTCbits.RC0&1){
  1993  002682  EF51  F013         	goto	l1244
  1994  002686                     l3931:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;DHT11.c: 32:         if(--timeOut==0){
  1998  002686  07D0               	decf	DHT_Check@timeOut& (0+255),f,b
  1999  002688  A0D8               	btfss	status,0,c
  2000  00268A  07D1               	decf	(DHT_Check@timeOut+1)& (0+255),f,b
  2001  00268C  51D0               	movf	DHT_Check@timeOut& (0+255),w,b
  2002  00268E  11D1               	iorwf	(DHT_Check@timeOut+1)& (0+255),w,b
  2003  002690  A4D8               	btfss	status,2,c
  2004  002692  EF4D  F013         	goto	u2991
  2005  002696  EF4F  F013         	goto	u2990
  2006  00269A                     u2991:
  2007  00269A  EF51  F013         	goto	l1244
  2008  00269E                     u2990:
  2009  00269E  EF19  F013         	goto	l3917
  2010  0026A2                     l1244:
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;DHT11.c: 31:     while(PORTCbits.RC0&1){
  2014  0026A2  B082               	btfsc	130,0,c	;volatile
  2015  0026A4  EF56  F013         	goto	u3001
  2016  0026A8  EF58  F013         	goto	u3000
  2017  0026AC                     u3001:
  2018  0026AC  EF43  F013         	goto	l3931
  2019  0026B0                     u3000:
  2020  0026B0                     l1238:
  2021                           
  2022                           ; BSR set to: 0
  2023  0026B0  0012               	return		;funcret
  2024  0026B2                     __end_of_DHT_Check:
  2025                           	opt callstack 0
  2026                           
  2027 ;; *************** function _PIN *****************
  2028 ;; Defined at:
  2029 ;;		line 4 in file "pinmanager_1.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;Total ram usage:        0 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    4
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text12
  2058  00293C                     __ptext12:
  2059                           	opt callstack 0
  2060  00293C                     _PIN:
  2061                           	opt callstack 26
  2062  00293C                     
  2063                           ;pinmanager_1.c: 5:     TRISAbits.RA5 = 1;
  2064  00293C  8A92               	bsf	146,5,c	;volatile
  2065                           
  2066                           ;pinmanager_1.c: 6:     TRISBbits.RB0 = 1;
  2067  00293E  8093               	bsf	147,0,c	;volatile
  2068  002940                     
  2069                           ;pinmanager_1.c: 7:     TRISD =0x0;
  2070  002940  0E00               	movlw	0
  2071  002942  6E95               	movwf	149,c	;volatile
  2072                           
  2073                           ;pinmanager_1.c: 8:     PORTD=0x0;
  2074  002944  0E00               	movlw	0
  2075  002946  6E83               	movwf	131,c	;volatile
  2076  002948                     
  2077                           ;pinmanager_1.c: 9:     INTCONbits.GIE = 1;
  2078  002948  8EF2               	bsf	242,7,c	;volatile
  2079  00294A                     
  2080                           ;pinmanager_1.c: 10:     INTCONbits.TMR0IE = 1;
  2081  00294A  8AF2               	bsf	242,5,c	;volatile
  2082  00294C                     
  2083                           ;pinmanager_1.c: 11:     INTCONbits.INT0IF = 0;
  2084  00294C  92F2               	bcf	242,1,c	;volatile
  2085                           
  2086                           ;pinmanager_1.c: 13:     TRISD = 0;
  2087  00294E  0E00               	movlw	0
  2088  002950  6E95               	movwf	149,c	;volatile
  2089                           
  2090                           ;pinmanager_1.c: 14:     LATD = 0;
  2091  002952  0E00               	movlw	0
  2092  002954  6E8C               	movwf	140,c	;volatile
  2093                           
  2094                           ;pinmanager_1.c: 15:     ADCON1 = 0b00001111;
  2095  002956  0E0F               	movlw	15
  2096  002958  6EC1               	movwf	193,c	;volatile
  2097                           
  2098                           ;pinmanager_1.c: 17:     LATA = 0x00;
  2099  00295A  0E00               	movlw	0
  2100  00295C  6E89               	movwf	137,c	;volatile
  2101                           
  2102                           ;pinmanager_1.c: 18:     TRISA = 0xF3;
  2103  00295E  0EF3               	movlw	243
  2104  002960  6E92               	movwf	146,c	;volatile
  2105                           
  2106                           ;pinmanager_1.c: 19:     LATB = 0x00;
  2107  002962  0E00               	movlw	0
  2108  002964  6E8A               	movwf	138,c	;volatile
  2109  002966                     
  2110                           ;pinmanager_1.c: 20:     TRISB = 0xFF;
  2111  002966  6893               	setf	147,c	;volatile
  2112                           
  2113                           ;pinmanager_1.c: 21:     LATC = 0x00;
  2114  002968  0E00               	movlw	0
  2115  00296A  6E8B               	movwf	139,c	;volatile
  2116                           
  2117                           ;pinmanager_1.c: 22:     TRISC = 0xD7;
  2118  00296C  0ED7               	movlw	215
  2119  00296E  6E94               	movwf	148,c	;volatile
  2120  002970  0012               	return		;funcret
  2121  002972                     __end_of_PIN:
  2122                           	opt callstack 0
  2123                           
  2124 ;; *************** function _LCDInit *****************
  2125 ;; Defined at:
  2126 ;;		line 4 in file "LCD3.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, status,0, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;Total ram usage:        1 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    7
  2147 ;; This function calls:
  2148 ;;		_InitBBSPI
  2149 ;;		_LCDPutInst
  2150 ;;		_Port_BBSPIInit
  2151 ;;		_WritePort_BBSPI
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text13
  2158  002816                     __ptext13:
  2159                           	opt callstack 0
  2160  002816                     _LCDInit:
  2161                           	opt callstack 23
  2162  002816                     
  2163                           ;LCD3.c: 6:     InitBBSPI();
  2164  002816  EC96  F015         	call	_InitBBSPI	;wreg free
  2165  00281A                     
  2166                           ;LCD3.c: 7:     TRISFbits.TRISF6 = 0;
  2167  00281A  9C97               	bcf	151,6,c	;volatile
  2168  00281C                     
  2169                           ;LCD3.c: 8:     LATFbits.LATF6 = 0;
  2170  00281C  9C8E               	bcf	142,6,c	;volatile
  2171  00281E                     
  2172                           ;LCD3.c: 9:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2173  00281E  0E11               	movlw	17
  2174  002820  0100               	movlb	0	; () banked
  2175  002822  6FD6               	movwf	??_LCDInit& (0+255),b
  2176  002824  0E3A               	movlw	58
  2177  002826                     u3797:
  2178  002826  2EE8               	decfsz	wreg,f,c
  2179  002828  D7FE               	bra	u3797
  2180  00282A  2FD6               	decfsz	??_LCDInit& (0+255),f,b
  2181  00282C  D7FC               	bra	u3797
  2182  00282E  F000               	nop	
  2183  002830                     
  2184                           ;LCD3.c: 10:     LATFbits.LATF6 = 1;
  2185  002830  8C8E               	bsf	142,6,c	;volatile
  2186  002832                     
  2187                           ;LCD3.c: 11:     Port_BBSPIInit (0x00);
  2188  002832  0E00               	movlw	0
  2189  002834  EC7B  F015         	call	_Port_BBSPIInit
  2190  002838                     
  2191                           ;LCD3.c: 12:     Port_BBSPIInit (0x01);
  2192  002838  0E01               	movlw	1
  2193  00283A  EC7B  F015         	call	_Port_BBSPIInit
  2194  00283E                     
  2195                           ;LCD3.c: 13:     WritePort_BBSPI (0x12, 0);
  2196  00283E  0E00               	movlw	0
  2197  002840  0100               	movlb	0	; () banked
  2198  002842  6FD3               	movwf	WritePort_BBSPI@a& (0+255),b
  2199  002844  0E12               	movlw	18
  2200  002846  EC6B  F015         	call	_WritePort_BBSPI
  2201  00284A                     
  2202                           ;LCD3.c: 14:     _delay((unsigned long)((15)*(10000000/4000.0)));
  2203  00284A  0E31               	movlw	49
  2204  00284C  0100               	movlb	0	; () banked
  2205  00284E  6FD6               	movwf	??_LCDInit& (0+255),b
  2206  002850  0EB2               	movlw	178
  2207  002852                     u3807:
  2208  002852  2EE8               	decfsz	wreg,f,c
  2209  002854  D7FE               	bra	u3807
  2210  002856  2FD6               	decfsz	??_LCDInit& (0+255),f,b
  2211  002858  D7FC               	bra	u3807
  2212  00285A  F000               	nop	
  2213  00285C                     
  2214                           ;LCD3.c: 15:     LCDPutInst(0x32);
  2215  00285C  0E32               	movlw	50
  2216  00285E  EC7E  F014         	call	_LCDPutInst
  2217  002862                     
  2218                           ;LCD3.c: 16:     LCDPutInst(0x3C);
  2219  002862  0E3C               	movlw	60
  2220  002864  EC7E  F014         	call	_LCDPutInst
  2221  002868                     
  2222                           ;LCD3.c: 17:     LCDPutInst(0x0C);
  2223  002868  0E0C               	movlw	12
  2224  00286A  EC7E  F014         	call	_LCDPutInst
  2225  00286E                     
  2226                           ;LCD3.c: 18:     LCDPutInst(0x01);
  2227  00286E  0E01               	movlw	1
  2228  002870  EC7E  F014         	call	_LCDPutInst
  2229  002874                     
  2230                           ;LCD3.c: 19:     LCDPutInst(0x06);
  2231  002874  0E06               	movlw	6
  2232  002876  EC7E  F014         	call	_LCDPutInst
  2233  00287A  0012               	return		;funcret
  2234  00287C                     __end_of_LCDInit:
  2235                           	opt callstack 0
  2236                           
  2237 ;; *************** function _Port_BBSPIInit *****************
  2238 ;; Defined at:
  2239 ;;		line 82 in file "LCD3.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  port_dir        1    wreg     unsigned char 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  port_dir        1    3[BANK0 ] unsigned char 
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, status,2, status,0, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;Total ram usage:        1 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:    5
  2260 ;; This function calls:
  2261 ;;		_SendByteBBSPI
  2262 ;; This function is called by:
  2263 ;;		_LCDInit
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	text14
  2268  002AF6                     __ptext14:
  2269                           	opt callstack 0
  2270  002AF6                     _Port_BBSPIInit:
  2271                           	opt callstack 24
  2272                           
  2273                           ;incstack = 0
  2274                           ;Port_BBSPIInit@port_dir stored from wreg
  2275  002AF6  0100               	movlb	0	; () banked
  2276  002AF8  6FD3               	movwf	Port_BBSPIInit@port_dir& (0+255),b
  2277  002AFA                     
  2278                           ;LCD3.c: 82: void Port_BBSPIInit (unsigned char port_dir);LCD3.c: 83: {;LCD3.c: 87:     
      +                          LATAbits.LATA2 = 0;
  2279  002AFA  9489               	bcf	137,2,c	;volatile
  2280  002AFC                     
  2281                           ;LCD3.c: 88:     SendByteBBSPI(0x40);
  2282  002AFC  0E40               	movlw	64
  2283  002AFE  ECD6  F013         	call	_SendByteBBSPI
  2284                           
  2285                           ;LCD3.c: 89:     SendByteBBSPI(port_dir);
  2286  002B02  0100               	movlb	0	; () banked
  2287  002B04  51D3               	movf	Port_BBSPIInit@port_dir& (0+255),w,b
  2288  002B06  ECD6  F013         	call	_SendByteBBSPI
  2289                           
  2290                           ;LCD3.c: 90:     SendByteBBSPI(0x00);
  2291  002B0A  0E00               	movlw	0
  2292  002B0C  ECD6  F013         	call	_SendByteBBSPI
  2293  002B10                     
  2294                           ;LCD3.c: 91:     LATAbits.LATA2 = 1;
  2295  002B10  8489               	bsf	137,2,c	;volatile
  2296  002B12  0012               	return		;funcret
  2297  002B14                     __end_of_Port_BBSPIInit:
  2298                           	opt callstack 0
  2299                           
  2300 ;; *************** function _InitBBSPI *****************
  2301 ;; Defined at:
  2302 ;;		line 29 in file "LCD3.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		None
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;Total ram usage:        0 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    4
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_LCDInit
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text15
  2331  002B2C                     __ptext15:
  2332                           	opt callstack 0
  2333  002B2C                     _InitBBSPI:
  2334                           	opt callstack 25
  2335  002B2C                     
  2336                           ;LCD3.c: 31:     TRISAbits.TRISA2 = 0;
  2337  002B2C  9492               	bcf	146,2,c	;volatile
  2338                           
  2339                           ;LCD3.c: 32:     TRISCbits.TRISC4 = 1;
  2340  002B2E  8894               	bsf	148,4,c	;volatile
  2341                           
  2342                           ;LCD3.c: 33:     TRISCbits.TRISC5 = 0;
  2343  002B30  9A94               	bcf	148,5,c	;volatile
  2344                           
  2345                           ;LCD3.c: 34:     TRISCbits.TRISC3 = 0;
  2346  002B32  9694               	bcf	148,3,c	;volatile
  2347                           
  2348                           ;LCD3.c: 36:     LATAbits.LATA2 = 1;
  2349  002B34  8489               	bsf	137,2,c	;volatile
  2350                           
  2351                           ;LCD3.c: 37:     LATCbits.LATC4 = 1;
  2352  002B36  888B               	bsf	139,4,c	;volatile
  2353                           
  2354                           ;LCD3.c: 38:     LATCbits.LATC5 = 0;
  2355  002B38  9A8B               	bcf	139,5,c	;volatile
  2356                           
  2357                           ;LCD3.c: 39:     LATCbits.LATC3 = 0;
  2358  002B3A  968B               	bcf	139,3,c	;volatile
  2359  002B3C  0012               	return		;funcret
  2360  002B3E                     __end_of_InitBBSPI:
  2361                           	opt callstack 0
  2362                           
  2363 ;; *************** function _FSM *****************
  2364 ;; Defined at:
  2365 ;;		line 9 in file "FSM.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  lol             2   28[BANK0 ] int 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2380 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;Total ram usage:        5 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    8
  2386 ;; This function calls:
  2387 ;;		_LCDPutChar
  2388 ;;		_LCDPutInst
  2389 ;;		_LCDPutStr
  2390 ;;		___awdiv
  2391 ;;		___awmod
  2392 ;;		___wmul
  2393 ;;		_insert
  2394 ;;		_start
  2395 ;; This function is called by:
  2396 ;;		_main
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text16
  2401  00103C                     __ptext16:
  2402                           	opt callstack 0
  2403  00103C                     _FSM:
  2404                           	opt callstack 22
  2405  00103C                     
  2406                           ;FSM.c: 10:     switch (statepress) {
  2407  00103C  EF7C  F00A         	goto	l4329
  2408  001040                     l4193:
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;FSM.c: 12:         {;FSM.c: 14:             if (flagLCD1 == 0) {
  2412  001040  5198               	movf	_flagLCD1& (0+255),w,b
  2413  001042  1199               	iorwf	(_flagLCD1+1)& (0+255),w,b
  2414  001044  A4D8               	btfss	status,2,c
  2415  001046  EF27  F008         	goto	u3461
  2416  00104A  EF29  F008         	goto	u3460
  2417  00104E                     u3461:
  2418  00104E  EF3D  F008         	goto	l4205
  2419  001052                     u3460:
  2420  001052                     
  2421                           ; BSR set to: 0
  2422                           ;FSM.c: 15:                 LATD=0;
  2423  001052  0E00               	movlw	0
  2424  001054  6E8C               	movwf	140,c	;volatile
  2425  001056                     
  2426                           ; BSR set to: 0
  2427                           ;FSM.c: 16:                 LCDPutInst(0x01);
  2428  001056  0E01               	movlw	1
  2429  001058  EC7E  F014         	call	_LCDPutInst
  2430  00105C                     
  2431                           ;FSM.c: 17:                 LCDPutInst(0x80);
  2432  00105C  0E80               	movlw	128
  2433  00105E  EC7E  F014         	call	_LCDPutInst
  2434  001062                     
  2435                           ;FSM.c: 18:                 LCDPutStr("LTD System");
  2436  001062  0E0D               	movlw	low STR_1
  2437  001064  0100               	movlb	0	; () banked
  2438  001066  6FD6               	movwf	LCDPutStr@ptr& (0+255),b
  2439  001068  0E10               	movlw	high STR_1
  2440  00106A  6FD7               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  2441  00106C  EC3E  F014         	call	_LCDPutStr	;wreg free
  2442  001070                     
  2443                           ;FSM.c: 19:                 flagLCD1 = 1;
  2444  001070  0E00               	movlw	0
  2445  001072  0100               	movlb	0	; () banked
  2446  001074  6F99               	movwf	(_flagLCD1+1)& (0+255),b
  2447  001076  0E01               	movlw	1
  2448  001078  6F98               	movwf	_flagLCD1& (0+255),b
  2449  00107A                     l4205:
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;FSM.c: 22:             if (pressRA5 == 0 && flagRA5 == 1) {
  2453  00107A  5032               	movf	_pressRA5^0,w,c
  2454  00107C  1033               	iorwf	(_pressRA5+1)^0,w,c
  2455  00107E  A4D8               	btfss	status,2,c
  2456  001080  EF44  F008         	goto	u3471
  2457  001084  EF46  F008         	goto	u3470
  2458  001088                     u3471:
  2459  001088  EF9A  F00A         	goto	l436
  2460  00108C                     u3470:
  2461  00108C                     
  2462                           ; BSR set to: 0
  2463  00108C  0440               	decf	_flagRA5^0,w,c
  2464  00108E  A4D8               	btfss	status,2,c
  2465  001090  EF4C  F008         	goto	u3481
  2466  001094  EF4E  F008         	goto	u3480
  2467  001098                     u3481:
  2468  001098  EF9A  F00A         	goto	l436
  2469  00109C                     u3480:
  2470  00109C                     
  2471                           ; BSR set to: 0
  2472                           ;FSM.c: 23:                 flagRA5 = 0;
  2473  00109C  0E00               	movlw	0
  2474  00109E  6E40               	movwf	_flagRA5^0,c
  2475                           
  2476                           ;FSM.c: 24:                 flagLCD1 = 0;
  2477  0010A0  0E00               	movlw	0
  2478  0010A2  6F99               	movwf	(_flagLCD1+1)& (0+255),b
  2479  0010A4  0E00               	movlw	0
  2480  0010A6  6F98               	movwf	_flagLCD1& (0+255),b
  2481                           
  2482                           ;FSM.c: 27:                 statepress = STATE2;
  2483  0010A8  0E01               	movlw	1
  2484  0010AA  6E3C               	movwf	_statepress^0,c
  2485  0010AC  EF9A  F00A         	goto	l436
  2486  0010B0                     l4211:
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;FSM.c: 33:         {;FSM.c: 34:             if (flagLCD2 == 0) {
  2490  0010B0  5196               	movf	_flagLCD2& (0+255),w,b
  2491  0010B2  1197               	iorwf	(_flagLCD2+1)& (0+255),w,b
  2492  0010B4  A4D8               	btfss	status,2,c
  2493  0010B6  EF5F  F008         	goto	u3491
  2494  0010BA  EF61  F008         	goto	u3490
  2495  0010BE                     u3491:
  2496  0010BE  EFA3  F008         	goto	l4229
  2497  0010C2                     u3490:
  2498  0010C2                     
  2499                           ; BSR set to: 0
  2500                           ;FSM.c: 35:                 LCDPutInst(0x01);
  2501  0010C2  0E01               	movlw	1
  2502  0010C4  EC7E  F014         	call	_LCDPutInst
  2503                           
  2504                           ;FSM.c: 36:                 LCDPutInst(0x80);
  2505  0010C8  0E80               	movlw	128
  2506  0010CA  EC7E  F014         	call	_LCDPutInst
  2507                           
  2508                           ;FSM.c: 37:                 LCDPutInst(0x80);
  2509  0010CE  0E80               	movlw	128
  2510  0010D0  EC7E  F014         	call	_LCDPutInst
  2511  0010D4                     
  2512                           ;FSM.c: 38:                 LCDPutStr("Max Temp:");
  2513  0010D4  0E22               	movlw	low STR_2
  2514  0010D6  0100               	movlb	0	; () banked
  2515  0010D8  6FD6               	movwf	LCDPutStr@ptr& (0+255),b
  2516  0010DA  0E10               	movlw	high STR_2
  2517  0010DC  6FD7               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  2518  0010DE  EC3E  F014         	call	_LCDPutStr	;wreg free
  2519  0010E2                     
  2520                           ;FSM.c: 39:                 LCDPutInst(0x89);
  2521  0010E2  0E89               	movlw	137
  2522  0010E4  EC7E  F014         	call	_LCDPutInst
  2523  0010E8                     
  2524                           ;FSM.c: 40:                 LCDPutChar(maxtemp / 10 + '0');
  2525  0010E8  C044  F0D0         	movff	_maxtemp,___awdiv@dividend
  2526  0010EC  C045  F0D1         	movff	_maxtemp+1,___awdiv@dividend+1
  2527  0010F0  0E00               	movlw	0
  2528  0010F2  0100               	movlb	0	; () banked
  2529  0010F4  6FD3               	movwf	(___awdiv@divisor+1)& (0+255),b
  2530  0010F6  0E0A               	movlw	10
  2531  0010F8  6FD2               	movwf	___awdiv@divisor& (0+255),b
  2532  0010FA  EC4A  F012         	call	___awdiv	;wreg free
  2533  0010FE  0100               	movlb	0	; () banked
  2534  001100  51D0               	movf	?___awdiv& (0+255),w,b
  2535  001102  0F30               	addlw	48
  2536  001104  EC5E  F014         	call	_LCDPutChar
  2537  001108                     
  2538                           ;FSM.c: 41:                 LCDPutChar(maxtemp % 10 + '0');
  2539  001108  C044  F0D0         	movff	_maxtemp,___awmod@dividend
  2540  00110C  C045  F0D1         	movff	_maxtemp+1,___awmod@dividend+1
  2541  001110  0E00               	movlw	0
  2542  001112  0100               	movlb	0	; () banked
  2543  001114  6FD3               	movwf	(___awmod@divisor+1)& (0+255),b
  2544  001116  0E0A               	movlw	10
  2545  001118  6FD2               	movwf	___awmod@divisor& (0+255),b
  2546  00111A  ECAD  F012         	call	___awmod	;wreg free
  2547  00111E  0100               	movlb	0	; () banked
  2548  001120  51D0               	movf	?___awmod& (0+255),w,b
  2549  001122  0F30               	addlw	48
  2550  001124  EC5E  F014         	call	_LCDPutChar
  2551  001128                     
  2552                           ;FSM.c: 42:                 LCDPutInst(0xC0);
  2553  001128  0EC0               	movlw	192
  2554  00112A  EC7E  F014         	call	_LCDPutInst
  2555  00112E                     
  2556                           ;FSM.c: 43:                 LCDPutStr("RA5 -> next");
  2557  00112E  0E01               	movlw	low STR_3
  2558  001130  0100               	movlb	0	; () banked
  2559  001132  6FD6               	movwf	LCDPutStr@ptr& (0+255),b
  2560  001134  0E10               	movlw	high STR_3
  2561  001136  6FD7               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  2562  001138  EC3E  F014         	call	_LCDPutStr	;wreg free
  2563  00113C                     
  2564                           ;FSM.c: 44:                 flagLCD2 = 1;
  2565  00113C  0E00               	movlw	0
  2566  00113E  0100               	movlb	0	; () banked
  2567  001140  6F97               	movwf	(_flagLCD2+1)& (0+255),b
  2568  001142  0E01               	movlw	1
  2569  001144  6F96               	movwf	_flagLCD2& (0+255),b
  2570  001146                     l4229:
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;FSM.c: 47:             if (pressRB02 == 0 && flagRB02 == 1) {
  2574  001146  51B8               	movf	_pressRB02& (0+255),w,b
  2575  001148  11B9               	iorwf	(_pressRB02+1)& (0+255),w,b
  2576  00114A  A4D8               	btfss	status,2,c
  2577  00114C  EFAA  F008         	goto	u3501
  2578  001150  EFAC  F008         	goto	u3500
  2579  001154                     u3501:
  2580  001154  EFED  F008         	goto	l4245
  2581  001158                     u3500:
  2582  001158                     
  2583                           ; BSR set to: 0
  2584  001158  043D               	decf	_flagRB02^0,w,c
  2585  00115A  A4D8               	btfss	status,2,c
  2586  00115C  EFB2  F008         	goto	u3511
  2587  001160  EFB4  F008         	goto	u3510
  2588  001164                     u3511:
  2589  001164  EFED  F008         	goto	l4245
  2590  001168                     u3510:
  2591  001168                     
  2592                           ; BSR set to: 0
  2593                           ;FSM.c: 48:                 maxtemp=maxtemp+5;
  2594  001168  0E05               	movlw	5
  2595  00116A  2444               	addwf	_maxtemp^0,w,c
  2596  00116C  6E44               	movwf	_maxtemp^0,c
  2597  00116E  0E00               	movlw	0
  2598  001170  2045               	addwfc	(_maxtemp+1)^0,w,c
  2599  001172  6E45               	movwf	(_maxtemp+1)^0,c
  2600  001174                     
  2601                           ; BSR set to: 0
  2602                           ;FSM.c: 49:                 LCDPutInst(0x89);
  2603  001174  0E89               	movlw	137
  2604  001176  EC7E  F014         	call	_LCDPutInst
  2605  00117A                     
  2606                           ;FSM.c: 50:                 LCDPutChar(maxtemp / 10 + '0');
  2607  00117A  C044  F0D0         	movff	_maxtemp,___awdiv@dividend
  2608  00117E  C045  F0D1         	movff	_maxtemp+1,___awdiv@dividend+1
  2609  001182  0E00               	movlw	0
  2610  001184  0100               	movlb	0	; () banked
  2611  001186  6FD3               	movwf	(___awdiv@divisor+1)& (0+255),b
  2612  001188  0E0A               	movlw	10
  2613  00118A  6FD2               	movwf	___awdiv@divisor& (0+255),b
  2614  00118C  EC4A  F012         	call	___awdiv	;wreg free
  2615  001190  0100               	movlb	0	; () banked
  2616  001192  51D0               	movf	?___awdiv& (0+255),w,b
  2617  001194  0F30               	addlw	48
  2618  001196  EC5E  F014         	call	_LCDPutChar
  2619  00119A                     
  2620                           ;FSM.c: 51:                 LCDPutChar(maxtemp % 10 + '0');
  2621  00119A  C044  F0D0         	movff	_maxtemp,___awmod@dividend
  2622  00119E  C045  F0D1         	movff	_maxtemp+1,___awmod@dividend+1
  2623  0011A2  0E00               	movlw	0
  2624  0011A4  0100               	movlb	0	; () banked
  2625  0011A6  6FD3               	movwf	(___awmod@divisor+1)& (0+255),b
  2626  0011A8  0E0A               	movlw	10
  2627  0011AA  6FD2               	movwf	___awmod@divisor& (0+255),b
  2628  0011AC  ECAD  F012         	call	___awmod	;wreg free
  2629  0011B0  0100               	movlb	0	; () banked
  2630  0011B2  51D0               	movf	?___awmod& (0+255),w,b
  2631  0011B4  0F30               	addlw	48
  2632  0011B6  EC5E  F014         	call	_LCDPutChar
  2633  0011BA                     
  2634                           ;FSM.c: 52:                 if(maxtemp==90){
  2635  0011BA  0E5A               	movlw	90
  2636  0011BC  1844               	xorwf	_maxtemp^0,w,c
  2637  0011BE  1045               	iorwf	(_maxtemp+1)^0,w,c
  2638  0011C0  A4D8               	btfss	status,2,c
  2639  0011C2  EFE5  F008         	goto	u3521
  2640  0011C6  EFE7  F008         	goto	u3520
  2641  0011CA                     u3521:
  2642  0011CA  EFEB  F008         	goto	l425
  2643  0011CE                     u3520:
  2644  0011CE                     
  2645                           ;FSM.c: 53:                     maxtemp=15;
  2646  0011CE  0E00               	movlw	0
  2647  0011D0  6E45               	movwf	(_maxtemp+1)^0,c
  2648  0011D2  0E0F               	movlw	15
  2649  0011D4  6E44               	movwf	_maxtemp^0,c
  2650  0011D6                     l425:
  2651                           
  2652                           ;FSM.c: 55:                 flagRB02 = 0;
  2653  0011D6  0E00               	movlw	0
  2654  0011D8  6E3D               	movwf	_flagRB02^0,c
  2655  0011DA                     l4245:
  2656                           
  2657                           ;FSM.c: 58:             if (pressRA5 == 0 && flagRA5 == 1) {
  2658  0011DA  5032               	movf	_pressRA5^0,w,c
  2659  0011DC  1033               	iorwf	(_pressRA5+1)^0,w,c
  2660  0011DE  A4D8               	btfss	status,2,c
  2661  0011E0  EFF4  F008         	goto	u3531
  2662  0011E4  EFF6  F008         	goto	u3530
  2663  0011E8                     u3531:
  2664  0011E8  EF9A  F00A         	goto	l436
  2665  0011EC                     u3530:
  2666  0011EC  0440               	decf	_flagRA5^0,w,c
  2667  0011EE  A4D8               	btfss	status,2,c
  2668  0011F0  EFFC  F008         	goto	u3541
  2669  0011F4  EFFE  F008         	goto	u3540
  2670  0011F8                     u3541:
  2671  0011F8  EF9A  F00A         	goto	l436
  2672  0011FC                     u3540:
  2673  0011FC                     
  2674                           ;FSM.c: 59:                 flagRA5 = 0;
  2675  0011FC  0E00               	movlw	0
  2676  0011FE  6E40               	movwf	_flagRA5^0,c
  2677                           
  2678                           ;FSM.c: 60:                 statepress = STATE3;
  2679  001200  0E02               	movlw	2
  2680  001202  6E3C               	movwf	_statepress^0,c
  2681                           
  2682                           ;FSM.c: 61:                 flagLCD2 = 0;
  2683  001204  0E00               	movlw	0
  2684  001206  0100               	movlb	0	; () banked
  2685  001208  6F97               	movwf	(_flagLCD2+1)& (0+255),b
  2686  00120A  0E00               	movlw	0
  2687  00120C  6F96               	movwf	_flagLCD2& (0+255),b
  2688  00120E  EF9A  F00A         	goto	l436
  2689  001212                     l4251:
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;FSM.c: 68:         {;FSM.c: 69:             if (flagLCD3 == 0) {
  2693  001212  5194               	movf	_flagLCD3& (0+255),w,b
  2694  001214  1195               	iorwf	(_flagLCD3+1)& (0+255),w,b
  2695  001216  A4D8               	btfss	status,2,c
  2696  001218  EF10  F009         	goto	u3551
  2697  00121C  EF12  F009         	goto	u3550
  2698  001220                     u3551:
  2699  001220  EF53  F009         	goto	l4271
  2700  001224                     u3550:
  2701  001224                     
  2702                           ; BSR set to: 0
  2703                           ;FSM.c: 70:                 LCDPutInst(0x01);
  2704  001224  0E01               	movlw	1
  2705  001226  EC7E  F014         	call	_LCDPutInst
  2706                           
  2707                           ;FSM.c: 71:                 LCDPutInst(0x80);
  2708  00122A  0E80               	movlw	128
  2709  00122C  EC7E  F014         	call	_LCDPutInst
  2710  001230                     
  2711                           ;FSM.c: 72:                 LCDPutStr("MAX humi:");
  2712  001230  0E18               	movlw	low STR_4
  2713  001232  0100               	movlb	0	; () banked
  2714  001234  6FD6               	movwf	LCDPutStr@ptr& (0+255),b
  2715  001236  0E10               	movlw	high STR_4
  2716  001238  6FD7               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  2717  00123A  EC3E  F014         	call	_LCDPutStr	;wreg free
  2718  00123E                     
  2719                           ;FSM.c: 73:                  LCDPutInst(0x89);
  2720  00123E  0E89               	movlw	137
  2721  001240  EC7E  F014         	call	_LCDPutInst
  2722  001244                     
  2723                           ;FSM.c: 74:                 LCDPutChar(maxhumi / 10 + '0');
  2724  001244  C042  F0D0         	movff	_maxhumi,___awdiv@dividend
  2725  001248  C043  F0D1         	movff	_maxhumi+1,___awdiv@dividend+1
  2726  00124C  0E00               	movlw	0
  2727  00124E  0100               	movlb	0	; () banked
  2728  001250  6FD3               	movwf	(___awdiv@divisor+1)& (0+255),b
  2729  001252  0E0A               	movlw	10
  2730  001254  6FD2               	movwf	___awdiv@divisor& (0+255),b
  2731  001256  EC4A  F012         	call	___awdiv	;wreg free
  2732  00125A  0100               	movlb	0	; () banked
  2733  00125C  51D0               	movf	?___awdiv& (0+255),w,b
  2734  00125E  0F30               	addlw	48
  2735  001260  EC5E  F014         	call	_LCDPutChar
  2736  001264                     
  2737                           ;FSM.c: 75:                 LCDPutChar(maxhumi % 10 + '0');
  2738  001264  C042  F0D0         	movff	_maxhumi,___awmod@dividend
  2739  001268  C043  F0D1         	movff	_maxhumi+1,___awmod@dividend+1
  2740  00126C  0E00               	movlw	0
  2741  00126E  0100               	movlb	0	; () banked
  2742  001270  6FD3               	movwf	(___awmod@divisor+1)& (0+255),b
  2743  001272  0E0A               	movlw	10
  2744  001274  6FD2               	movwf	___awmod@divisor& (0+255),b
  2745  001276  ECAD  F012         	call	___awmod	;wreg free
  2746  00127A  0100               	movlb	0	; () banked
  2747  00127C  51D0               	movf	?___awmod& (0+255),w,b
  2748  00127E  0F30               	addlw	48
  2749  001280  EC5E  F014         	call	_LCDPutChar
  2750  001284                     
  2751                           ;FSM.c: 76:                 LCDPutInst(0xC0);
  2752  001284  0EC0               	movlw	192
  2753  001286  EC7E  F014         	call	_LCDPutInst
  2754  00128A                     
  2755                           ;FSM.c: 77:                 LCDPutStr("RA5 -> next");
  2756  00128A  0E01               	movlw	low STR_3
  2757  00128C  0100               	movlb	0	; () banked
  2758  00128E  6FD6               	movwf	LCDPutStr@ptr& (0+255),b
  2759  001290  0E10               	movlw	high STR_3
  2760  001292  6FD7               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  2761  001294  EC3E  F014         	call	_LCDPutStr	;wreg free
  2762  001298                     
  2763                           ;FSM.c: 79:                 flagRB02 = 0;
  2764  001298  0E00               	movlw	0
  2765  00129A  6E3D               	movwf	_flagRB02^0,c
  2766  00129C                     
  2767                           ;FSM.c: 80:                 flagLCD3 = 1;
  2768  00129C  0E00               	movlw	0
  2769  00129E  0100               	movlb	0	; () banked
  2770  0012A0  6F95               	movwf	(_flagLCD3+1)& (0+255),b
  2771  0012A2  0E01               	movlw	1
  2772  0012A4  6F94               	movwf	_flagLCD3& (0+255),b
  2773  0012A6                     l4271:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;FSM.c: 82:               if (pressRB02 == 0 && flagRB02 == 1) {
  2777  0012A6  51B8               	movf	_pressRB02& (0+255),w,b
  2778  0012A8  11B9               	iorwf	(_pressRB02+1)& (0+255),w,b
  2779  0012AA  A4D8               	btfss	status,2,c
  2780  0012AC  EF5A  F009         	goto	u3561
  2781  0012B0  EF5C  F009         	goto	u3560
  2782  0012B4                     u3561:
  2783  0012B4  EF9D  F009         	goto	l4287
  2784  0012B8                     u3560:
  2785  0012B8                     
  2786                           ; BSR set to: 0
  2787  0012B8  043D               	decf	_flagRB02^0,w,c
  2788  0012BA  A4D8               	btfss	status,2,c
  2789  0012BC  EF62  F009         	goto	u3571
  2790  0012C0  EF64  F009         	goto	u3570
  2791  0012C4                     u3571:
  2792  0012C4  EF9D  F009         	goto	l4287
  2793  0012C8                     u3570:
  2794  0012C8                     
  2795                           ; BSR set to: 0
  2796                           ;FSM.c: 83:                 maxhumi=maxhumi+5;
  2797  0012C8  0E05               	movlw	5
  2798  0012CA  2442               	addwf	_maxhumi^0,w,c
  2799  0012CC  6E42               	movwf	_maxhumi^0,c
  2800  0012CE  0E00               	movlw	0
  2801  0012D0  2043               	addwfc	(_maxhumi+1)^0,w,c
  2802  0012D2  6E43               	movwf	(_maxhumi+1)^0,c
  2803                           
  2804                           ;FSM.c: 84:                  if(maxhumi==95){
  2805  0012D4  0E5F               	movlw	95
  2806  0012D6  1842               	xorwf	_maxhumi^0,w,c
  2807  0012D8  1043               	iorwf	(_maxhumi+1)^0,w,c
  2808  0012DA  A4D8               	btfss	status,2,c
  2809  0012DC  EF72  F009         	goto	u3581
  2810  0012E0  EF74  F009         	goto	u3580
  2811  0012E4                     u3581:
  2812  0012E4  EF78  F009         	goto	l4279
  2813  0012E8                     u3580:
  2814  0012E8                     
  2815                           ; BSR set to: 0
  2816                           ;FSM.c: 85:                     maxhumi=55;
  2817  0012E8  0E00               	movlw	0
  2818  0012EA  6E43               	movwf	(_maxhumi+1)^0,c
  2819  0012EC  0E37               	movlw	55
  2820  0012EE  6E42               	movwf	_maxhumi^0,c
  2821  0012F0                     l4279:
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;FSM.c: 87:                 LCDPutInst(0x89);
  2825  0012F0  0E89               	movlw	137
  2826  0012F2  EC7E  F014         	call	_LCDPutInst
  2827  0012F6                     
  2828                           ;FSM.c: 88:                 LCDPutChar(maxhumi / 10 + '0');
  2829  0012F6  C042  F0D0         	movff	_maxhumi,___awdiv@dividend
  2830  0012FA  C043  F0D1         	movff	_maxhumi+1,___awdiv@dividend+1
  2831  0012FE  0E00               	movlw	0
  2832  001300  0100               	movlb	0	; () banked
  2833  001302  6FD3               	movwf	(___awdiv@divisor+1)& (0+255),b
  2834  001304  0E0A               	movlw	10
  2835  001306  6FD2               	movwf	___awdiv@divisor& (0+255),b
  2836  001308  EC4A  F012         	call	___awdiv	;wreg free
  2837  00130C  0100               	movlb	0	; () banked
  2838  00130E  51D0               	movf	?___awdiv& (0+255),w,b
  2839  001310  0F30               	addlw	48
  2840  001312  EC5E  F014         	call	_LCDPutChar
  2841  001316                     
  2842                           ;FSM.c: 89:                 LCDPutChar(maxhumi % 10 + '0');
  2843  001316  C042  F0D0         	movff	_maxhumi,___awmod@dividend
  2844  00131A  C043  F0D1         	movff	_maxhumi+1,___awmod@dividend+1
  2845  00131E  0E00               	movlw	0
  2846  001320  0100               	movlb	0	; () banked
  2847  001322  6FD3               	movwf	(___awmod@divisor+1)& (0+255),b
  2848  001324  0E0A               	movlw	10
  2849  001326  6FD2               	movwf	___awmod@divisor& (0+255),b
  2850  001328  ECAD  F012         	call	___awmod	;wreg free
  2851  00132C  0100               	movlb	0	; () banked
  2852  00132E  51D0               	movf	?___awmod& (0+255),w,b
  2853  001330  0F30               	addlw	48
  2854  001332  EC5E  F014         	call	_LCDPutChar
  2855  001336                     
  2856                           ;FSM.c: 90:                 flagRB02 = 0;
  2857  001336  0E00               	movlw	0
  2858  001338  6E3D               	movwf	_flagRB02^0,c
  2859  00133A                     l4287:
  2860                           
  2861                           ;FSM.c: 92:             if (pressRA5 == 0 && flagRA5 == 1) {
  2862  00133A  5032               	movf	_pressRA5^0,w,c
  2863  00133C  1033               	iorwf	(_pressRA5+1)^0,w,c
  2864  00133E  A4D8               	btfss	status,2,c
  2865  001340  EFA4  F009         	goto	u3591
  2866  001344  EFA6  F009         	goto	u3590
  2867  001348                     u3591:
  2868  001348  EF9A  F00A         	goto	l436
  2869  00134C                     u3590:
  2870  00134C  0440               	decf	_flagRA5^0,w,c
  2871  00134E  A4D8               	btfss	status,2,c
  2872  001350  EFAC  F009         	goto	u3601
  2873  001354  EFAE  F009         	goto	u3600
  2874  001358                     u3601:
  2875  001358  EF9A  F00A         	goto	l436
  2876  00135C                     u3600:
  2877  00135C                     
  2878                           ;FSM.c: 93:                 flagRA5 = 0;
  2879  00135C  0E00               	movlw	0
  2880  00135E  6E40               	movwf	_flagRA5^0,c
  2881                           
  2882                           ;FSM.c: 94:                 statepress = STATE4;
  2883  001360  0E03               	movlw	3
  2884  001362  6E3C               	movwf	_statepress^0,c
  2885                           
  2886                           ;FSM.c: 95:                 flagLCD3 = 0;
  2887  001364  0E00               	movlw	0
  2888  001366  0100               	movlb	0	; () banked
  2889  001368  6F95               	movwf	(_flagLCD3+1)& (0+255),b
  2890  00136A  0E00               	movlw	0
  2891  00136C  6F94               	movwf	_flagLCD3& (0+255),b
  2892  00136E                     
  2893                           ; BSR set to: 0
  2894                           ;FSM.c: 96:                 int lol = maxtemp*50;
  2895  00136E  C044  F0D0         	movff	_maxtemp,___wmul@multiplier
  2896  001372  C045  F0D1         	movff	_maxtemp+1,___wmul@multiplier+1
  2897  001376  0E00               	movlw	0
  2898  001378  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2899  00137A  0E32               	movlw	50
  2900  00137C  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  2901  00137E  ECE6  F014         	call	___wmul	;wreg free
  2902  001382  C0D0  F0EC         	movff	?___wmul,FSM@lol
  2903  001386  C0D1  F0ED         	movff	?___wmul+1,FSM@lol+1
  2904  00138A                     
  2905                           ;FSM.c: 97:                 insert(10, 2000, DHT_Result);
  2906  00138A  0E00               	movlw	0
  2907  00138C  0100               	movlb	0	; () banked
  2908  00138E  6FD9               	movwf	(insert@delay+1)& (0+255),b
  2909  001390  0E0A               	movlw	10
  2910  001392  6FD8               	movwf	insert@delay& (0+255),b
  2911  001394  0E07               	movlw	7
  2912  001396  6FDB               	movwf	(insert@period+1)& (0+255),b
  2913  001398  0ED0               	movlw	208
  2914  00139A  6FDA               	movwf	insert@period& (0+255),b
  2915  00139C  0E88               	movlw	low _DHT_Result
  2916  00139E  6FDC               	movwf	insert@func_ptr& (0+255),b
  2917  0013A0  0E22               	movlw	high _DHT_Result
  2918  0013A2  6FDD               	movwf	(insert@func_ptr+1)& (0+255),b
  2919  0013A4  0E00               	movlw	low (_DHT_Result shr (0+16))
  2920  0013A6  6FDE               	movwf	(insert@func_ptr+2)& (0+255),b
  2921  0013A8  EC97  F00C         	call	_insert	;wreg free
  2922  0013AC                     
  2923                           ;FSM.c: 98:                 insert(lol, lol, heater);
  2924  0013AC  C0EC  F0D8         	movff	FSM@lol,insert@delay
  2925  0013B0  C0ED  F0D9         	movff	FSM@lol+1,insert@delay+1
  2926  0013B4  C0EC  F0DA         	movff	FSM@lol,insert@period
  2927  0013B8  C0ED  F0DB         	movff	FSM@lol+1,insert@period+1
  2928  0013BC  0E14               	movlw	low _heater
  2929  0013BE  0100               	movlb	0	; () banked
  2930  0013C0  6FDC               	movwf	insert@func_ptr& (0+255),b
  2931  0013C2  0E2B               	movlw	high _heater
  2932  0013C4  6FDD               	movwf	(insert@func_ptr+1)& (0+255),b
  2933  0013C6  0E00               	movlw	low (_heater shr (0+16))
  2934  0013C8  6FDE               	movwf	(insert@func_ptr+2)& (0+255),b
  2935  0013CA  EC97  F00C         	call	_insert	;wreg free
  2936  0013CE                     
  2937                           ;FSM.c: 99:                 insert(lol, lol, fan2);
  2938  0013CE  C0EC  F0D8         	movff	FSM@lol,insert@delay
  2939  0013D2  C0ED  F0D9         	movff	FSM@lol+1,insert@delay+1
  2940  0013D6  C0EC  F0DA         	movff	FSM@lol,insert@period
  2941  0013DA  C0ED  F0DB         	movff	FSM@lol+1,insert@period+1
  2942  0013DE  0E40               	movlw	low _fan2
  2943  0013E0  0100               	movlb	0	; () banked
  2944  0013E2  6FDC               	movwf	insert@func_ptr& (0+255),b
  2945  0013E4  0E2A               	movlw	high _fan2
  2946  0013E6  6FDD               	movwf	(insert@func_ptr+1)& (0+255),b
  2947  0013E8  0E00               	movlw	low (_fan2 shr (0+16))
  2948  0013EA  6FDE               	movwf	(insert@func_ptr+2)& (0+255),b
  2949  0013EC  EC97  F00C         	call	_insert	;wreg free
  2950  0013F0                     
  2951                           ;FSM.c: 100:                  insert(lol*2, lol, heatpump);
  2952  0013F0  90D8               	bcf	status,0,c
  2953  0013F2  0100               	movlb	0	; () banked
  2954  0013F4  35EC               	rlcf	FSM@lol& (0+255),w,b
  2955  0013F6  6FD8               	movwf	insert@delay& (0+255),b
  2956  0013F8  35ED               	rlcf	(FSM@lol+1)& (0+255),w,b
  2957  0013FA  6FD9               	movwf	(insert@delay+1)& (0+255),b
  2958  0013FC  C0EC  F0DA         	movff	FSM@lol,insert@period
  2959  001400  C0ED  F0DB         	movff	FSM@lol+1,insert@period+1
  2960  001404  0E66               	movlw	low _heatpump
  2961  001406  6FDC               	movwf	insert@func_ptr& (0+255),b
  2962  001408  0E2A               	movlw	high _heatpump
  2963  00140A  6FDD               	movwf	(insert@func_ptr+1)& (0+255),b
  2964  00140C  0E00               	movlw	low (_heatpump shr (0+16))
  2965  00140E  6FDE               	movwf	(insert@func_ptr+2)& (0+255),b
  2966  001410  EC97  F00C         	call	_insert	;wreg free
  2967  001414                     
  2968                           ;FSM.c: 101:                 insert(lol*2, lol, fan3);
  2969  001414  90D8               	bcf	status,0,c
  2970  001416  0100               	movlb	0	; () banked
  2971  001418  35EC               	rlcf	FSM@lol& (0+255),w,b
  2972  00141A  6FD8               	movwf	insert@delay& (0+255),b
  2973  00141C  35ED               	rlcf	(FSM@lol+1)& (0+255),w,b
  2974  00141E  6FD9               	movwf	(insert@delay+1)& (0+255),b
  2975  001420  C0EC  F0DA         	movff	FSM@lol,insert@period
  2976  001424  C0ED  F0DB         	movff	FSM@lol+1,insert@period+1
  2977  001428  0E1A               	movlw	low _fan3
  2978  00142A  6FDC               	movwf	insert@func_ptr& (0+255),b
  2979  00142C  0E2A               	movlw	high _fan3
  2980  00142E  6FDD               	movwf	(insert@func_ptr+1)& (0+255),b
  2981  001430  0E00               	movlw	low (_fan3 shr (0+16))
  2982  001432  6FDE               	movwf	(insert@func_ptr+2)& (0+255),b
  2983  001434  EC97  F00C         	call	_insert	;wreg free
  2984  001438                     
  2985                           ;FSM.c: 102:                 if(RH_Integral>=maxhumi)
  2986  001438  5037               	movf	_RH_Integral^0,w,c
  2987  00143A  0100               	movlb	0	; () banked
  2988  00143C  6FE9               	movwf	??_FSM& (0+255),b
  2989  00143E  6BEA               	clrf	(??_FSM+1)& (0+255),b
  2990  001440  5042               	movf	_maxhumi^0,w,c
  2991  001442  5DE9               	subwf	??_FSM& (0+255),w,b
  2992  001444  51EA               	movf	(??_FSM+1)& (0+255),w,b
  2993  001446  0A80               	xorlw	128
  2994  001448  6FEB               	movwf	(??_FSM+2)& (0+255),b
  2995  00144A  5043               	movf	(_maxhumi+1)^0,w,c
  2996  00144C  0A80               	xorlw	128
  2997  00144E  59EB               	subwfb	(??_FSM+2)& (0+255),w,b
  2998  001450  A0D8               	btfss	status,0,c
  2999  001452  EF2D  F00A         	goto	u3611
  3000  001456  EF2F  F00A         	goto	u3610
  3001  00145A                     u3611:
  3002  00145A  EF9A  F00A         	goto	l436
  3003  00145E                     u3610:
  3004  00145E                     
  3005                           ; BSR set to: 0
  3006                           ;FSM.c: 103:                 {;FSM.c: 104:                     insert(1000, 1000, fan1);
  3007  00145E  0E03               	movlw	3
  3008  001460  6FD9               	movwf	(insert@delay+1)& (0+255),b
  3009  001462  0EE8               	movlw	232
  3010  001464  6FD8               	movwf	insert@delay& (0+255),b
  3011  001466  0E03               	movlw	3
  3012  001468  6FDB               	movwf	(insert@period+1)& (0+255),b
  3013  00146A  0EE8               	movlw	232
  3014  00146C  6FDA               	movwf	insert@period& (0+255),b
  3015  00146E  0EF4               	movlw	low _fan1
  3016  001470  6FDC               	movwf	insert@func_ptr& (0+255),b
  3017  001472  0E29               	movlw	high _fan1
  3018  001474  6FDD               	movwf	(insert@func_ptr+1)& (0+255),b
  3019  001476  0E00               	movlw	low (_fan1 shr (0+16))
  3020  001478  6FDE               	movwf	(insert@func_ptr+2)& (0+255),b
  3021  00147A  EC97  F00C         	call	_insert	;wreg free
  3022  00147E  EF9A  F00A         	goto	l436
  3023  001482                     l4309:
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;FSM.c: 113:         {;FSM.c: 114:             if (flagLCD4 == 0) {
  3027  001482  5192               	movf	_flagLCD4& (0+255),w,b
  3028  001484  1193               	iorwf	(_flagLCD4+1)& (0+255),w,b
  3029  001486  A4D8               	btfss	status,2,c
  3030  001488  EF48  F00A         	goto	u3621
  3031  00148C  EF4A  F00A         	goto	u3620
  3032  001490                     u3621:
  3033  001490  EF5F  F00A         	goto	l4319
  3034  001494                     u3620:
  3035  001494                     
  3036                           ; BSR set to: 0
  3037                           ;FSM.c: 115:                 LCDPutInst(0x01);
  3038  001494  0E01               	movlw	1
  3039  001496  EC7E  F014         	call	_LCDPutInst
  3040                           
  3041                           ;FSM.c: 116:                 LCDPutInst(0x80);
  3042  00149A  0E80               	movlw	128
  3043  00149C  EC7E  F014         	call	_LCDPutInst
  3044  0014A0                     
  3045                           ;FSM.c: 117:                 LCDPutStr("Working");
  3046  0014A0  0E2C               	movlw	low STR_6
  3047  0014A2  0100               	movlb	0	; () banked
  3048  0014A4  6FD6               	movwf	LCDPutStr@ptr& (0+255),b
  3049  0014A6  0E10               	movlw	high STR_6
  3050  0014A8  6FD7               	movwf	(LCDPutStr@ptr+1)& (0+255),b
  3051  0014AA  EC3E  F014         	call	_LCDPutStr	;wreg free
  3052  0014AE                     
  3053                           ;FSM.c: 118:                 LCDPutInst(0xC0);
  3054  0014AE  0EC0               	movlw	192
  3055  0014B0  EC7E  F014         	call	_LCDPutInst
  3056  0014B4                     
  3057                           ;FSM.c: 120:                 flagLCD4 = 1;
  3058  0014B4  0E00               	movlw	0
  3059  0014B6  0100               	movlb	0	; () banked
  3060  0014B8  6F93               	movwf	(_flagLCD4+1)& (0+255),b
  3061  0014BA  0E01               	movlw	1
  3062  0014BC  6F92               	movwf	_flagLCD4& (0+255),b
  3063  0014BE                     l4319:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;FSM.c: 122:             if (pressRA5 == 0 && flagRA5 == 1) {
  3067  0014BE  5032               	movf	_pressRA5^0,w,c
  3068  0014C0  1033               	iorwf	(_pressRA5+1)^0,w,c
  3069  0014C2  A4D8               	btfss	status,2,c
  3070  0014C4  EF66  F00A         	goto	u3631
  3071  0014C8  EF68  F00A         	goto	u3630
  3072  0014CC                     u3631:
  3073  0014CC  EF9A  F00A         	goto	l436
  3074  0014D0                     u3630:
  3075  0014D0                     
  3076                           ; BSR set to: 0
  3077  0014D0  0440               	decf	_flagRA5^0,w,c
  3078  0014D2  A4D8               	btfss	status,2,c
  3079  0014D4  EF6E  F00A         	goto	u3641
  3080  0014D8  EF70  F00A         	goto	u3640
  3081  0014DC                     u3641:
  3082  0014DC  EF9A  F00A         	goto	l436
  3083  0014E0                     u3640:
  3084  0014E0                     
  3085                           ; BSR set to: 0
  3086                           ;FSM.c: 123:                 flagRA5 = 0;
  3087  0014E0  0E00               	movlw	0
  3088  0014E2  6E40               	movwf	_flagRA5^0,c
  3089                           
  3090                           ;FSM.c: 124:                 statepress = STATE1;
  3091  0014E4  0E00               	movlw	0
  3092  0014E6  6E3C               	movwf	_statepress^0,c
  3093                           
  3094                           ;FSM.c: 126:                 flagLCD4 = 0;
  3095  0014E8  0E00               	movlw	0
  3096  0014EA  6F93               	movwf	(_flagLCD4+1)& (0+255),b
  3097  0014EC  0E00               	movlw	0
  3098  0014EE  6F92               	movwf	_flagLCD4& (0+255),b
  3099  0014F0                     
  3100                           ; BSR set to: 0
  3101                           ;FSM.c: 127:                 start();
  3102  0014F0  EC32  F010         	call	_start	;wreg free
  3103  0014F4  EF9A  F00A         	goto	l436
  3104  0014F8                     l4329:
  3105  0014F8  503C               	movf	_statepress^0,w,c
  3106  0014FA  0100               	movlb	0	; () banked
  3107  0014FC  6FE9               	movwf	??_FSM& (0+255),b
  3108  0014FE  6BEA               	clrf	(??_FSM+1)& (0+255),b
  3109                           
  3110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3111                           ; Switch size 1, requested type "simple"
  3112                           ; Number of cases is 1, Range of values is 0 to 0
  3113                           ; switch strategies available:
  3114                           ; Name         Instructions Cycles
  3115                           ; simple_byte            4     3 (average)
  3116                           ;	Chosen strategy is simple_byte
  3117  001500  51EA               	movf	(??_FSM+1)& (0+255),w,b
  3118  001502  0A00               	xorlw	0	; case 0
  3119  001504  B4D8               	btfsc	status,2,c
  3120  001506  EF87  F00A         	goto	l4489
  3121  00150A  EF9A  F00A         	goto	l436
  3122  00150E                     l4489:
  3123                           
  3124                           ; BSR set to: 0
  3125                           ; Switch size 1, requested type "simple"
  3126                           ; Number of cases is 4, Range of values is 0 to 3
  3127                           ; switch strategies available:
  3128                           ; Name         Instructions Cycles
  3129                           ; simple_byte           13     7 (average)
  3130                           ;	Chosen strategy is simple_byte
  3131  00150E  51E9               	movf	??_FSM& (0+255),w,b
  3132  001510  0A00               	xorlw	0	; case 0
  3133  001512  B4D8               	btfsc	status,2,c
  3134  001514  EF20  F008         	goto	l4193
  3135  001518  0A01               	xorlw	1	; case 1
  3136  00151A  B4D8               	btfsc	status,2,c
  3137  00151C  EF58  F008         	goto	l4211
  3138  001520  0A03               	xorlw	3	; case 2
  3139  001522  B4D8               	btfsc	status,2,c
  3140  001524  EF09  F009         	goto	l4251
  3141  001528  0A01               	xorlw	1	; case 3
  3142  00152A  B4D8               	btfsc	status,2,c
  3143  00152C  EF41  F00A         	goto	l4309
  3144  001530  EF9A  F00A         	goto	l436
  3145  001534                     l436:
  3146  001534  0012               	return		;funcret
  3147  001536                     __end_of_FSM:
  3148                           	opt callstack 0
  3149                           
  3150 ;; *************** function _start *****************
  3151 ;; Defined at:
  3152 ;;		line 16 in file "Sche.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  i               2    6[BANK0 ] int 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;Total ram usage:        2 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    5
  3173 ;; This function calls:
  3174 ;;		___wmul
  3175 ;; This function is called by:
  3176 ;;		_FSM
  3177 ;;		_main
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text17
  3182  002064                     __ptext17:
  3183                           	opt callstack 0
  3184  002064                     _start:
  3185                           	opt callstack 25
  3186  002064                     
  3187                           ;Sche.c: 18:     count = 0;
  3188  002064  0E00               	movlw	0
  3189  002066  6E25               	movwf	(_count+1)^0,c
  3190  002068  0E00               	movlw	0
  3191  00206A  6E24               	movwf	_count^0,c
  3192                           
  3193                           ;Sche.c: 19:     index = 0;
  3194  00206C  0E00               	movlw	0
  3195  00206E  0100               	movlb	0	; () banked
  3196  002070  6F89               	movwf	(_index+1)& (0+255),b
  3197  002072  0E00               	movlw	0
  3198  002074  6F88               	movwf	_index& (0+255),b
  3199                           
  3200                           ;Sche.c: 20:     for(int i=0; i< 10;i++)
  3201  002076  0E00               	movlw	0
  3202  002078  6FD7               	movwf	(start@i+1)& (0+255),b
  3203  00207A  0E00               	movlw	0
  3204  00207C  6FD6               	movwf	start@i& (0+255),b
  3205  00207E                     l4117:
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;Sche.c: 21:         {;Sche.c: 22:             SCH_Task[i].delay=-1;
  3209  00207E  C0D6  F0D0         	movff	start@i,___wmul@multiplier
  3210  002082  C0D7  F0D1         	movff	start@i+1,___wmul@multiplier+1
  3211  002086  0E00               	movlw	0
  3212  002088  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3213  00208A  0E0B               	movlw	11
  3214  00208C  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3215  00208E  ECE6  F014         	call	___wmul	;wreg free
  3216  002092  0E00               	movlw	low _SCH_Task
  3217  002094  0100               	movlb	0	; () banked
  3218  002096  25D0               	addwf	?___wmul& (0+255),w,b
  3219  002098  6ED9               	movwf	fsr2l,c
  3220  00209A  0E01               	movlw	high _SCH_Task
  3221  00209C  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3222  00209E  6EDA               	movwf	fsr2h,c
  3223  0020A0  0EFF               	movlw	255
  3224  0020A2  6EDE               	movwf	postinc2,c
  3225  0020A4  0EFF               	movlw	255
  3226  0020A6  6EDD               	movwf	postdec2,c
  3227                           
  3228                           ;Sche.c: 23:             SCH_Task[i].realdelay=-1;
  3229  0020A8  C0D6  F0D0         	movff	start@i,___wmul@multiplier
  3230  0020AC  C0D7  F0D1         	movff	start@i+1,___wmul@multiplier+1
  3231  0020B0  0E00               	movlw	0
  3232  0020B2  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3233  0020B4  0E0B               	movlw	11
  3234  0020B6  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3235  0020B8  ECE6  F014         	call	___wmul	;wreg free
  3236  0020BC  0E02               	movlw	low (_SCH_Task+2)
  3237  0020BE  0100               	movlb	0	; () banked
  3238  0020C0  25D0               	addwf	?___wmul& (0+255),w,b
  3239  0020C2  6ED9               	movwf	fsr2l,c
  3240  0020C4  0E01               	movlw	high (_SCH_Task+2)
  3241  0020C6  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3242  0020C8  6EDA               	movwf	fsr2h,c
  3243  0020CA  0EFF               	movlw	255
  3244  0020CC  6EDE               	movwf	postinc2,c
  3245  0020CE  0EFF               	movlw	255
  3246  0020D0  6EDD               	movwf	postdec2,c
  3247                           
  3248                           ;Sche.c: 24:             SCH_Task[i].period=0;
  3249  0020D2  C0D6  F0D0         	movff	start@i,___wmul@multiplier
  3250  0020D6  C0D7  F0D1         	movff	start@i+1,___wmul@multiplier+1
  3251  0020DA  0E00               	movlw	0
  3252  0020DC  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3253  0020DE  0E0B               	movlw	11
  3254  0020E0  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3255  0020E2  ECE6  F014         	call	___wmul	;wreg free
  3256  0020E6  0E04               	movlw	low (_SCH_Task+4)
  3257  0020E8  0100               	movlb	0	; () banked
  3258  0020EA  25D0               	addwf	?___wmul& (0+255),w,b
  3259  0020EC  6ED9               	movwf	fsr2l,c
  3260  0020EE  0E01               	movlw	high (_SCH_Task+4)
  3261  0020F0  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3262  0020F2  6EDA               	movwf	fsr2h,c
  3263  0020F4  0E00               	movlw	0
  3264  0020F6  6EDE               	movwf	postinc2,c
  3265  0020F8  0E00               	movlw	0
  3266  0020FA  6EDD               	movwf	postdec2,c
  3267                           
  3268                           ;Sche.c: 25:             SCH_Task[i].runMe=0;
  3269  0020FC  C0D6  F0D0         	movff	start@i,___wmul@multiplier
  3270  002100  C0D7  F0D1         	movff	start@i+1,___wmul@multiplier+1
  3271  002104  0E00               	movlw	0
  3272  002106  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3273  002108  0E0B               	movlw	11
  3274  00210A  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3275  00210C  ECE6  F014         	call	___wmul	;wreg free
  3276  002110  0E06               	movlw	low (_SCH_Task+6)
  3277  002112  0100               	movlb	0	; () banked
  3278  002114  25D0               	addwf	?___wmul& (0+255),w,b
  3279  002116  6ED9               	movwf	fsr2l,c
  3280  002118  0E01               	movlw	high (_SCH_Task+6)
  3281  00211A  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3282  00211C  6EDA               	movwf	fsr2h,c
  3283  00211E  0E00               	movlw	0
  3284  002120  6EDE               	movwf	postinc2,c
  3285  002122  0E00               	movlw	0
  3286  002124  6EDD               	movwf	postdec2,c
  3287                           
  3288                           ;Sche.c: 26:             SCH_Task[i].func_ptr=((void*)0);
  3289  002126  C0D6  F0D0         	movff	start@i,___wmul@multiplier
  3290  00212A  C0D7  F0D1         	movff	start@i+1,___wmul@multiplier+1
  3291  00212E  0E00               	movlw	0
  3292  002130  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3293  002132  0E0B               	movlw	11
  3294  002134  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3295  002136  ECE6  F014         	call	___wmul	;wreg free
  3296  00213A  0E08               	movlw	low (_SCH_Task+8)
  3297  00213C  0100               	movlb	0	; () banked
  3298  00213E  25D0               	addwf	?___wmul& (0+255),w,b
  3299  002140  6ED9               	movwf	fsr2l,c
  3300  002142  0E01               	movlw	high (_SCH_Task+8)
  3301  002144  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3302  002146  6EDA               	movwf	fsr2h,c
  3303  002148  0E00               	movlw	0
  3304  00214A  6EDE               	movwf	postinc2,c
  3305  00214C  0E00               	movlw	0
  3306  00214E  6EDE               	movwf	postinc2,c
  3307  002150  0E00               	movlw	0
  3308  002152  6EDE               	movwf	postinc2,c
  3309  002154                     
  3310                           ; BSR set to: 0
  3311                           ;Sche.c: 27:         }
  3312  002154  4BD6               	infsnz	start@i& (0+255),f,b
  3313  002156  2BD7               	incf	(start@i+1)& (0+255),f,b
  3314  002158                     
  3315                           ; BSR set to: 0
  3316  002158  BFD7               	btfsc	(start@i+1)& (0+255),7,b
  3317  00215A  EFB8  F010         	goto	u3301
  3318  00215E  51D7               	movf	(start@i+1)& (0+255),w,b
  3319  002160  E109               	bnz	u3300
  3320  002162  0E0A               	movlw	10
  3321  002164  5DD6               	subwf	start@i& (0+255),w,b
  3322  002166  A0D8               	btfss	status,0,c
  3323  002168  EFB8  F010         	goto	u3301
  3324  00216C  EFBA  F010         	goto	u3300
  3325  002170                     u3301:
  3326  002170  EF3F  F010         	goto	l4117
  3327  002174                     u3300:
  3328  002174                     
  3329                           ; BSR set to: 0
  3330  002174  0012               	return		;funcret
  3331  002176                     __end_of_start:
  3332                           	opt callstack 0
  3333                           
  3334 ;; *************** function _insert *****************
  3335 ;; Defined at:
  3336 ;;		line 30 in file "Sche.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  delay           2    8[BANK0 ] int 
  3339 ;;  period          2   10[BANK0 ] int 
  3340 ;;  func_ptr        3   12[BANK0 ] PTR FTN()void 
  3341 ;;		 -> fan1(1), fan3(1), heatpump(1), fan2(1), 
  3342 ;;		 -> heater(1), DHT_Result(1), 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  j               2   21[BANK0 ] int 
  3345 ;;  i               2   23[BANK0 ] int 
  3346 ;;  time            2   19[BANK0 ] int 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      void 
  3349 ;; Registers used:
  3350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3356 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;Total ram usage:       17 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    5
  3363 ;; This function calls:
  3364 ;;		___awdiv
  3365 ;;		___wmul
  3366 ;; This function is called by:
  3367 ;;		_FSM
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text18
  3372  00192E                     __ptext18:
  3373                           	opt callstack 0
  3374  00192E                     _insert:
  3375                           	opt callstack 24
  3376  00192E                     
  3377                           ;Sche.c: 30:     void insert(int delay, int period, void (*func_ptr)());Sche.c: 31:     
      +                          {;Sche.c: 32:         if(count == 10)
  3378  00192E  0E0A               	movlw	10
  3379  001930  1824               	xorwf	_count^0,w,c
  3380  001932  1025               	iorwf	(_count+1)^0,w,c
  3381  001934  A4D8               	btfss	status,2,c
  3382  001936  EF9F  F00C         	goto	u3231
  3383  00193A  EFA1  F00C         	goto	u3230
  3384  00193E                     u3231:
  3385  00193E  EFA3  F00C         	goto	l4063
  3386  001942                     u3230:
  3387  001942  EF63  F00E         	goto	l790
  3388  001946                     l4063:
  3389                           
  3390                           ;Sche.c: 36:         if(count == 0)
  3391  001946  5024               	movf	_count^0,w,c
  3392  001948  1025               	iorwf	(_count+1)^0,w,c
  3393  00194A  A4D8               	btfss	status,2,c
  3394  00194C  EFAA  F00C         	goto	u3241
  3395  001950  EFAC  F00C         	goto	u3240
  3396  001954                     u3241:
  3397  001954  EFE8  F00C         	goto	l4077
  3398  001958                     u3240:
  3399  001958                     
  3400                           ;Sche.c: 37:         {;Sche.c: 38:             SCH_Task[0].delay = delay/10;
  3401  001958  C0D8  F0D0         	movff	insert@delay,___awdiv@dividend
  3402  00195C  C0D9  F0D1         	movff	insert@delay+1,___awdiv@dividend+1
  3403  001960  0E00               	movlw	0
  3404  001962  0100               	movlb	0	; () banked
  3405  001964  6FD3               	movwf	(___awdiv@divisor+1)& (0+255),b
  3406  001966  0E0A               	movlw	10
  3407  001968  6FD2               	movwf	___awdiv@divisor& (0+255),b
  3408  00196A  EC4A  F012         	call	___awdiv	;wreg free
  3409  00196E  C0D0  F100         	movff	?___awdiv,_SCH_Task
  3410  001972  C0D1  F101         	movff	?___awdiv+1,_SCH_Task+1
  3411                           
  3412                           ;Sche.c: 39:             SCH_Task[0].realdelay = delay/10;
  3413  001976  C0D8  F0D0         	movff	insert@delay,___awdiv@dividend
  3414  00197A  C0D9  F0D1         	movff	insert@delay+1,___awdiv@dividend+1
  3415  00197E  0E00               	movlw	0
  3416  001980  0100               	movlb	0	; () banked
  3417  001982  6FD3               	movwf	(___awdiv@divisor+1)& (0+255),b
  3418  001984  0E0A               	movlw	10
  3419  001986  6FD2               	movwf	___awdiv@divisor& (0+255),b
  3420  001988  EC4A  F012         	call	___awdiv	;wreg free
  3421  00198C  C0D0  F102         	movff	?___awdiv,_SCH_Task+2
  3422  001990  C0D1  F103         	movff	?___awdiv+1,_SCH_Task+3
  3423                           
  3424                           ;Sche.c: 40:             SCH_Task[0].period = period/10;
  3425  001994  C0DA  F0D0         	movff	insert@period,___awdiv@dividend
  3426  001998  C0DB  F0D1         	movff	insert@period+1,___awdiv@dividend+1
  3427  00199C  0E00               	movlw	0
  3428  00199E  0100               	movlb	0	; () banked
  3429  0019A0  6FD3               	movwf	(___awdiv@divisor+1)& (0+255),b
  3430  0019A2  0E0A               	movlw	10
  3431  0019A4  6FD2               	movwf	___awdiv@divisor& (0+255),b
  3432  0019A6  EC4A  F012         	call	___awdiv	;wreg free
  3433  0019AA  C0D0  F104         	movff	?___awdiv,_SCH_Task+4
  3434  0019AE  C0D1  F105         	movff	?___awdiv+1,_SCH_Task+5
  3435  0019B2                     
  3436                           ;Sche.c: 41:             SCH_Task[0].runMe = 0;
  3437  0019B2  0E00               	movlw	0
  3438  0019B4  0101               	movlb	1	; () banked
  3439  0019B6  6F07               	movwf	(_SCH_Task+7)& (0+255),b
  3440  0019B8  0E00               	movlw	0
  3441  0019BA  6F06               	movwf	(_SCH_Task+6)& (0+255),b
  3442  0019BC                     
  3443                           ; BSR set to: 1
  3444                           ;Sche.c: 42:             SCH_Task[0].func_ptr=func_ptr;
  3445  0019BC  C0DC  F108         	movff	insert@func_ptr,_SCH_Task+8
  3446  0019C0  C0DD  F109         	movff	insert@func_ptr+1,_SCH_Task+9
  3447  0019C4  C0DE  F10A         	movff	insert@func_ptr+2,_SCH_Task+10
  3448  0019C8                     
  3449                           ; BSR set to: 1
  3450                           ;Sche.c: 43:             count ++;
  3451  0019C8  4A24               	infsnz	_count^0,f,c
  3452  0019CA  2A25               	incf	(_count+1)^0,f,c
  3453  0019CC  EF63  F00E         	goto	l790
  3454  0019D0                     l4077:
  3455                           
  3456                           ;Sche.c: 47:         {;Sche.c: 48:             int i;;Sche.c: 49:             int time =
      +                           0;
  3457  0019D0  0E00               	movlw	0
  3458  0019D2  0100               	movlb	0	; () banked
  3459  0019D4  6FE4               	movwf	(insert@time+1)& (0+255),b
  3460  0019D6  0E00               	movlw	0
  3461  0019D8  6FE3               	movwf	insert@time& (0+255),b
  3462  0019DA                     
  3463                           ; BSR set to: 0
  3464                           ;Sche.c: 50:             for( i = count - 1; (i>=0 && SCH_Task[i].realdelay>=delay/10);i
      +                          --){
  3465  0019DA  0EFF               	movlw	255
  3466  0019DC  2424               	addwf	_count^0,w,c
  3467  0019DE  6FE7               	movwf	insert@i& (0+255),b
  3468  0019E0  0EFF               	movlw	255
  3469  0019E2  2025               	addwfc	(_count+1)^0,w,c
  3470  0019E4  6FE8               	movwf	(insert@i+1)& (0+255),b
  3471  0019E6  EF1F  F00D         	goto	l4085
  3472  0019EA                     l4081:
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;Sche.c: 51:             SCH_Task[i+1] = SCH_Task[i];
  3476  0019EA  C0E7  F0D0         	movff	insert@i,___wmul@multiplier
  3477  0019EE  C0E8  F0D1         	movff	insert@i+1,___wmul@multiplier+1
  3478  0019F2  0E00               	movlw	0
  3479  0019F4  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3480  0019F6  0E0B               	movlw	11
  3481  0019F8  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3482  0019FA  ECE6  F014         	call	___wmul	;wreg free
  3483  0019FE  0E00               	movlw	low _SCH_Task
  3484  001A00  0100               	movlb	0	; () banked
  3485  001A02  25D0               	addwf	?___wmul& (0+255),w,b
  3486  001A04  6ED9               	movwf	fsr2l,c
  3487  001A06  0E01               	movlw	high _SCH_Task
  3488  001A08  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3489  001A0A  6EDA               	movwf	fsr2h,c
  3490  001A0C  C0E7  F0D0         	movff	insert@i,___wmul@multiplier
  3491  001A10  C0E8  F0D1         	movff	insert@i+1,___wmul@multiplier+1
  3492  001A14  0E00               	movlw	0
  3493  001A16  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3494  001A18  0E0B               	movlw	11
  3495  001A1A  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3496  001A1C  ECE6  F014         	call	___wmul	;wreg free
  3497  001A20  0E0B               	movlw	low (_SCH_Task+11)
  3498  001A22  0100               	movlb	0	; () banked
  3499  001A24  25D0               	addwf	?___wmul& (0+255),w,b
  3500  001A26  6EE1               	movwf	fsr1l,c
  3501  001A28  0E01               	movlw	high (_SCH_Task+11)
  3502  001A2A  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3503  001A2C  6EE2               	movwf	fsr1h,c
  3504  001A2E  0E0A               	movlw	10
  3505  001A30                     u3251:
  3506  001A30  CFDB FFE3          	movff	plusw2,plusw1
  3507  001A34  06E8               	decf	wreg,f,c
  3508  001A36  E2FC               	bc	u3251
  3509  001A38                     
  3510                           ; BSR set to: 0
  3511                           ;Sche.c: 52:             }
  3512  001A38  07E7               	decf	insert@i& (0+255),f,b
  3513  001A3A  A0D8               	btfss	status,0,c
  3514  001A3C  07E8               	decf	(insert@i+1)& (0+255),f,b
  3515  001A3E                     l4085:
  3516                           
  3517                           ; BSR set to: 0
  3518  001A3E  BFE8               	btfsc	(insert@i+1)& (0+255),7,b
  3519  001A40  EF24  F00D         	goto	u3261
  3520  001A44  EF26  F00D         	goto	u3260
  3521  001A48                     u3261:
  3522  001A48  EF51  F00D         	goto	l4089
  3523  001A4C                     u3260:
  3524  001A4C                     
  3525                           ; BSR set to: 0
  3526  001A4C  C0E7  F0D0         	movff	insert@i,___wmul@multiplier
  3527  001A50  C0E8  F0D1         	movff	insert@i+1,___wmul@multiplier+1
  3528  001A54  0E00               	movlw	0
  3529  001A56  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3530  001A58  0E0B               	movlw	11
  3531  001A5A  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3532  001A5C  ECE6  F014         	call	___wmul	;wreg free
  3533  001A60  0E02               	movlw	low (_SCH_Task+2)
  3534  001A62  0100               	movlb	0	; () banked
  3535  001A64  25D0               	addwf	?___wmul& (0+255),w,b
  3536  001A66  6ED9               	movwf	fsr2l,c
  3537  001A68  0E01               	movlw	high (_SCH_Task+2)
  3538  001A6A  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3539  001A6C  6EDA               	movwf	fsr2h,c
  3540  001A6E  C0D8  F0D0         	movff	insert@delay,___awdiv@dividend
  3541  001A72  C0D9  F0D1         	movff	insert@delay+1,___awdiv@dividend+1
  3542  001A76  0E00               	movlw	0
  3543  001A78  6FD3               	movwf	(___awdiv@divisor+1)& (0+255),b
  3544  001A7A  0E0A               	movlw	10
  3545  001A7C  6FD2               	movwf	___awdiv@divisor& (0+255),b
  3546  001A7E  EC4A  F012         	call	___awdiv	;wreg free
  3547  001A82  0100               	movlb	0	; () banked
  3548  001A84  51D0               	movf	?___awdiv& (0+255),w,b
  3549  001A86  5CDE               	subwf	postinc2,w,c
  3550  001A88  50DE               	movf	postinc2,w,c
  3551  001A8A  0A80               	xorlw	128
  3552  001A8C  6FE1               	movwf	(??_insert+2)& (0+255),b
  3553  001A8E  51D1               	movf	(?___awdiv+1)& (0+255),w,b
  3554  001A90  0A80               	xorlw	128
  3555  001A92  59E1               	subwfb	(??_insert+2)& (0+255),w,b
  3556  001A94  B0D8               	btfsc	status,0,c
  3557  001A96  EF4F  F00D         	goto	u3271
  3558  001A9A  EF51  F00D         	goto	u3270
  3559  001A9E                     u3271:
  3560  001A9E  EFF5  F00C         	goto	l4081
  3561  001AA2                     u3270:
  3562  001AA2                     l4089:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;Sche.c: 53:             for(int j = 0; j<=i; j++)
  3566  001AA2  0E00               	movlw	0
  3567  001AA4  6FE6               	movwf	(insert@j+1)& (0+255),b
  3568  001AA6  0E00               	movlw	0
  3569  001AA8  6FE5               	movwf	insert@j& (0+255),b
  3570  001AAA  EF6E  F00D         	goto	l4095
  3571  001AAE                     l4091:
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;Sche.c: 54:             {;Sche.c: 55:                 time += SCH_Task[j].delay;
  3575  001AAE  C0E5  F0D0         	movff	insert@j,___wmul@multiplier
  3576  001AB2  C0E6  F0D1         	movff	insert@j+1,___wmul@multiplier+1
  3577  001AB6  0E00               	movlw	0
  3578  001AB8  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3579  001ABA  0E0B               	movlw	11
  3580  001ABC  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3581  001ABE  ECE6  F014         	call	___wmul	;wreg free
  3582  001AC2  0E00               	movlw	low _SCH_Task
  3583  001AC4  0100               	movlb	0	; () banked
  3584  001AC6  25D0               	addwf	?___wmul& (0+255),w,b
  3585  001AC8  6ED9               	movwf	fsr2l,c
  3586  001ACA  0E01               	movlw	high _SCH_Task
  3587  001ACC  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3588  001ACE  6EDA               	movwf	fsr2h,c
  3589  001AD0  50DE               	movf	postinc2,w,c
  3590  001AD2  27E3               	addwf	insert@time& (0+255),f,b
  3591  001AD4  50DD               	movf	postdec2,w,c
  3592  001AD6  23E4               	addwfc	(insert@time+1)& (0+255),f,b
  3593  001AD8                     
  3594                           ; BSR set to: 0
  3595                           ;Sche.c: 56:             }
  3596  001AD8  4BE5               	infsnz	insert@j& (0+255),f,b
  3597  001ADA  2BE6               	incf	(insert@j+1)& (0+255),f,b
  3598  001ADC                     l4095:
  3599                           
  3600                           ; BSR set to: 0
  3601  001ADC  51E5               	movf	insert@j& (0+255),w,b
  3602  001ADE  5DE7               	subwf	insert@i& (0+255),w,b
  3603  001AE0  51E8               	movf	(insert@i+1)& (0+255),w,b
  3604  001AE2  0A80               	xorlw	128
  3605  001AE4  6FDF               	movwf	??_insert& (0+255),b
  3606  001AE6  51E6               	movf	(insert@j+1)& (0+255),w,b
  3607  001AE8  0A80               	xorlw	128
  3608  001AEA  59DF               	subwfb	??_insert& (0+255),w,b
  3609  001AEC  B0D8               	btfsc	status,0,c
  3610  001AEE  EF7B  F00D         	goto	u3281
  3611  001AF2  EF7D  F00D         	goto	u3280
  3612  001AF6                     u3281:
  3613  001AF6  EF57  F00D         	goto	l4091
  3614  001AFA                     u3280:
  3615  001AFA                     
  3616                           ; BSR set to: 0
  3617                           ;Sche.c: 57:             SCH_Task[i+1].delay = delay/10-time;
  3618  001AFA  C0E7  F0D0         	movff	insert@i,___wmul@multiplier
  3619  001AFE  C0E8  F0D1         	movff	insert@i+1,___wmul@multiplier+1
  3620  001B02  0E00               	movlw	0
  3621  001B04  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3622  001B06  0E0B               	movlw	11
  3623  001B08  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3624  001B0A  ECE6  F014         	call	___wmul	;wreg free
  3625  001B0E  0E0B               	movlw	low (_SCH_Task+11)
  3626  001B10  0100               	movlb	0	; () banked
  3627  001B12  25D0               	addwf	?___wmul& (0+255),w,b
  3628  001B14  6ED9               	movwf	fsr2l,c
  3629  001B16  0E01               	movlw	high (_SCH_Task+11)
  3630  001B18  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3631  001B1A  6EDA               	movwf	fsr2h,c
  3632  001B1C  C0D8  F0D0         	movff	insert@delay,___awdiv@dividend
  3633  001B20  C0D9  F0D1         	movff	insert@delay+1,___awdiv@dividend+1
  3634  001B24  0E00               	movlw	0
  3635  001B26  6FD3               	movwf	(___awdiv@divisor+1)& (0+255),b
  3636  001B28  0E0A               	movlw	10
  3637  001B2A  6FD2               	movwf	___awdiv@divisor& (0+255),b
  3638  001B2C  EC4A  F012         	call	___awdiv	;wreg free
  3639  001B30  0100               	movlb	0	; () banked
  3640  001B32  51E3               	movf	insert@time& (0+255),w,b
  3641  001B34  5FD0               	subwf	?___awdiv& (0+255),f,b
  3642  001B36  51E4               	movf	(insert@time+1)& (0+255),w,b
  3643  001B38  5BD1               	subwfb	(?___awdiv+1)& (0+255),f,b
  3644  001B3A  C0D0  FFDE         	movff	?___awdiv,postinc2
  3645  001B3E  C0D1  FFDD         	movff	?___awdiv+1,postdec2
  3646                           
  3647                           ;Sche.c: 58:             SCH_Task[i+1].period = period/10;
  3648  001B42  C0E7  F0D0         	movff	insert@i,___wmul@multiplier
  3649  001B46  C0E8  F0D1         	movff	insert@i+1,___wmul@multiplier+1
  3650  001B4A  0E00               	movlw	0
  3651  001B4C  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3652  001B4E  0E0B               	movlw	11
  3653  001B50  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3654  001B52  ECE6  F014         	call	___wmul	;wreg free
  3655  001B56  0E0F               	movlw	low (_SCH_Task+15)
  3656  001B58  0100               	movlb	0	; () banked
  3657  001B5A  25D0               	addwf	?___wmul& (0+255),w,b
  3658  001B5C  6ED9               	movwf	fsr2l,c
  3659  001B5E  0E01               	movlw	high (_SCH_Task+15)
  3660  001B60  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3661  001B62  6EDA               	movwf	fsr2h,c
  3662  001B64  C0DA  F0D0         	movff	insert@period,___awdiv@dividend
  3663  001B68  C0DB  F0D1         	movff	insert@period+1,___awdiv@dividend+1
  3664  001B6C  0E00               	movlw	0
  3665  001B6E  6FD3               	movwf	(___awdiv@divisor+1)& (0+255),b
  3666  001B70  0E0A               	movlw	10
  3667  001B72  6FD2               	movwf	___awdiv@divisor& (0+255),b
  3668  001B74  EC4A  F012         	call	___awdiv	;wreg free
  3669  001B78  0100               	movlb	0	; () banked
  3670  001B7A  C0D0  FFDE         	movff	?___awdiv,postinc2
  3671  001B7E  C0D1  FFDD         	movff	?___awdiv+1,postdec2
  3672                           
  3673                           ;Sche.c: 59:             SCH_Task[i+1].realdelay = delay/10;
  3674  001B82  C0E7  F0D0         	movff	insert@i,___wmul@multiplier
  3675  001B86  C0E8  F0D1         	movff	insert@i+1,___wmul@multiplier+1
  3676  001B8A  0E00               	movlw	0
  3677  001B8C  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3678  001B8E  0E0B               	movlw	11
  3679  001B90  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3680  001B92  ECE6  F014         	call	___wmul	;wreg free
  3681  001B96  0E0D               	movlw	low (_SCH_Task+13)
  3682  001B98  0100               	movlb	0	; () banked
  3683  001B9A  25D0               	addwf	?___wmul& (0+255),w,b
  3684  001B9C  6ED9               	movwf	fsr2l,c
  3685  001B9E  0E01               	movlw	high (_SCH_Task+13)
  3686  001BA0  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3687  001BA2  6EDA               	movwf	fsr2h,c
  3688  001BA4  C0D8  F0D0         	movff	insert@delay,___awdiv@dividend
  3689  001BA8  C0D9  F0D1         	movff	insert@delay+1,___awdiv@dividend+1
  3690  001BAC  0E00               	movlw	0
  3691  001BAE  6FD3               	movwf	(___awdiv@divisor+1)& (0+255),b
  3692  001BB0  0E0A               	movlw	10
  3693  001BB2  6FD2               	movwf	___awdiv@divisor& (0+255),b
  3694  001BB4  EC4A  F012         	call	___awdiv	;wreg free
  3695  001BB8  0100               	movlb	0	; () banked
  3696  001BBA  C0D0  FFDE         	movff	?___awdiv,postinc2
  3697  001BBE  C0D1  FFDD         	movff	?___awdiv+1,postdec2
  3698  001BC2                     
  3699                           ; BSR set to: 0
  3700                           ;Sche.c: 60:             SCH_Task[0].runMe = 0;
  3701  001BC2  0E00               	movlw	0
  3702  001BC4  0101               	movlb	1	; () banked
  3703  001BC6  6F07               	movwf	(_SCH_Task+7)& (0+255),b
  3704  001BC8  0E00               	movlw	0
  3705  001BCA  6F06               	movwf	(_SCH_Task+6)& (0+255),b
  3706  001BCC                     
  3707                           ; BSR set to: 1
  3708                           ;Sche.c: 61:             SCH_Task[i+1].func_ptr=func_ptr;
  3709  001BCC  C0E7  F0D0         	movff	insert@i,___wmul@multiplier
  3710  001BD0  C0E8  F0D1         	movff	insert@i+1,___wmul@multiplier+1
  3711  001BD4  0E00               	movlw	0
  3712  001BD6  0100               	movlb	0	; () banked
  3713  001BD8  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3714  001BDA  0E0B               	movlw	11
  3715  001BDC  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3716  001BDE  ECE6  F014         	call	___wmul	;wreg free
  3717  001BE2  0E13               	movlw	low (_SCH_Task+19)
  3718  001BE4  0100               	movlb	0	; () banked
  3719  001BE6  25D0               	addwf	?___wmul& (0+255),w,b
  3720  001BE8  6ED9               	movwf	fsr2l,c
  3721  001BEA  0E01               	movlw	high (_SCH_Task+19)
  3722  001BEC  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3723  001BEE  6EDA               	movwf	fsr2h,c
  3724  001BF0  C0DC  FFDE         	movff	insert@func_ptr,postinc2
  3725  001BF4  C0DD  FFDE         	movff	insert@func_ptr+1,postinc2
  3726  001BF8  C0DE  FFDE         	movff	insert@func_ptr+2,postinc2
  3727  001BFC                     
  3728                           ; BSR set to: 0
  3729                           ;Sche.c: 62:             count++;
  3730  001BFC  4A24               	infsnz	_count^0,f,c
  3731  001BFE  2A25               	incf	(_count+1)^0,f,c
  3732  001C00                     
  3733                           ; BSR set to: 0
  3734                           ;Sche.c: 63:             if(SCH_Task[i+2].delay>0)
  3735  001C00  C0E7  F0D0         	movff	insert@i,___wmul@multiplier
  3736  001C04  C0E8  F0D1         	movff	insert@i+1,___wmul@multiplier+1
  3737  001C08  0E00               	movlw	0
  3738  001C0A  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3739  001C0C  0E0B               	movlw	11
  3740  001C0E  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3741  001C10  ECE6  F014         	call	___wmul	;wreg free
  3742  001C14  0E16               	movlw	low (_SCH_Task+22)
  3743  001C16  0100               	movlb	0	; () banked
  3744  001C18  25D0               	addwf	?___wmul& (0+255),w,b
  3745  001C1A  6ED9               	movwf	fsr2l,c
  3746  001C1C  0E01               	movlw	high (_SCH_Task+22)
  3747  001C1E  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3748  001C20  6EDA               	movwf	fsr2h,c
  3749  001C22  0E01               	movlw	1
  3750  001C24  BEDB               	btfsc	plusw2,7,c
  3751  001C26  EF1E  F00E         	goto	u3291
  3752  001C2A  0E01               	movlw	1
  3753  001C2C  50DB               	movf	plusw2,w,c
  3754  001C2E  E108               	bnz	u3290
  3755  001C30  04DE               	decf	postinc2,w,c
  3756  001C32  A0D8               	btfss	status,0,c
  3757  001C34  EF1E  F00E         	goto	u3291
  3758  001C38  EF20  F00E         	goto	u3290
  3759  001C3C                     u3291:
  3760  001C3C  EF63  F00E         	goto	l790
  3761  001C40                     u3290:
  3762  001C40                     
  3763                           ; BSR set to: 0
  3764                           ;Sche.c: 64:             {;Sche.c: 65:                SCH_Task[i+2].delay = SCH_Task[i+2
      +                          ].delay-SCH_Task[i+1].delay;
  3765  001C40  C0E7  F0D0         	movff	insert@i,___wmul@multiplier
  3766  001C44  C0E8  F0D1         	movff	insert@i+1,___wmul@multiplier+1
  3767  001C48  0E00               	movlw	0
  3768  001C4A  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3769  001C4C  0E0B               	movlw	11
  3770  001C4E  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3771  001C50  ECE6  F014         	call	___wmul	;wreg free
  3772  001C54  0E0B               	movlw	low (_SCH_Task+11)
  3773  001C56  0100               	movlb	0	; () banked
  3774  001C58  25D0               	addwf	?___wmul& (0+255),w,b
  3775  001C5A  6ED9               	movwf	fsr2l,c
  3776  001C5C  0E01               	movlw	high (_SCH_Task+11)
  3777  001C5E  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3778  001C60  6EDA               	movwf	fsr2h,c
  3779  001C62  CFDE F0DF          	movff	postinc2,??_insert
  3780  001C66  CFDD F0E0          	movff	postdec2,??_insert+1
  3781  001C6A  C0E7  F0D0         	movff	insert@i,___wmul@multiplier
  3782  001C6E  C0E8  F0D1         	movff	insert@i+1,___wmul@multiplier+1
  3783  001C72  0E00               	movlw	0
  3784  001C74  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3785  001C76  0E0B               	movlw	11
  3786  001C78  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3787  001C7A  ECE6  F014         	call	___wmul	;wreg free
  3788  001C7E  0E16               	movlw	low (_SCH_Task+22)
  3789  001C80  0100               	movlb	0	; () banked
  3790  001C82  25D0               	addwf	?___wmul& (0+255),w,b
  3791  001C84  6ED9               	movwf	fsr2l,c
  3792  001C86  0E01               	movlw	high (_SCH_Task+22)
  3793  001C88  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3794  001C8A  6EDA               	movwf	fsr2h,c
  3795  001C8C  CFDE F0E1          	movff	postinc2,??_insert+2
  3796  001C90  CFDD F0E2          	movff	postdec2,??_insert+3
  3797  001C94  51DF               	movf	??_insert& (0+255),w,b
  3798  001C96  5FE1               	subwf	(??_insert+2)& (0+255),f,b
  3799  001C98  51E0               	movf	(??_insert+1)& (0+255),w,b
  3800  001C9A  5BE2               	subwfb	(??_insert+3)& (0+255),f,b
  3801  001C9C  C0E7  F0D0         	movff	insert@i,___wmul@multiplier
  3802  001CA0  C0E8  F0D1         	movff	insert@i+1,___wmul@multiplier+1
  3803  001CA4  0E00               	movlw	0
  3804  001CA6  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3805  001CA8  0E0B               	movlw	11
  3806  001CAA  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  3807  001CAC  ECE6  F014         	call	___wmul	;wreg free
  3808  001CB0  0E16               	movlw	low (_SCH_Task+22)
  3809  001CB2  0100               	movlb	0	; () banked
  3810  001CB4  25D0               	addwf	?___wmul& (0+255),w,b
  3811  001CB6  6ED9               	movwf	fsr2l,c
  3812  001CB8  0E01               	movlw	high (_SCH_Task+22)
  3813  001CBA  21D1               	addwfc	(?___wmul+1)& (0+255),w,b
  3814  001CBC  6EDA               	movwf	fsr2h,c
  3815  001CBE  C0E1  FFDE         	movff	??_insert+2,postinc2
  3816  001CC2  C0E2  FFDD         	movff	??_insert+3,postdec2
  3817  001CC6                     l790:
  3818  001CC6  0012               	return		;funcret
  3819  001CC8                     __end_of_insert:
  3820                           	opt callstack 0
  3821                           
  3822 ;; *************** function ___wmul *****************
  3823 ;; Defined at:
  3824 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3827 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;  product         2    4[BANK0 ] unsigned int 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  2    0[BANK0 ] unsigned int 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, prodl, prodh
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3839 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3840 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;Total ram usage:        6 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    4
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_FSM
  3850 ;;		_start
  3851 ;;		_insert
  3852 ;;		_dispatch
  3853 ;;		_deleteTask
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text19
  3858  0029CC                     __ptext19:
  3859                           	opt callstack 0
  3860  0029CC                     ___wmul:
  3861                           	opt callstack 25
  3862  0029CC  0100               	movlb	0	; () banked
  3863  0029CE  51D0               	movf	___wmul@multiplier& (0+255),w,b
  3864  0029D0  03D2               	mulwf	___wmul@multiplicand& (0+255),b
  3865  0029D2  CFF3 F0D4          	movff	prodl,___wmul@product
  3866  0029D6  CFF4 F0D5          	movff	prodh,___wmul@product+1
  3867  0029DA  51D0               	movf	___wmul@multiplier& (0+255),w,b
  3868  0029DC  03D3               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3869  0029DE  50F3               	movf	243,w,c
  3870  0029E0  27D5               	addwf	(___wmul@product+1)& (0+255),f,b
  3871  0029E2  51D1               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3872  0029E4  03D2               	mulwf	___wmul@multiplicand& (0+255),b
  3873  0029E6  50F3               	movf	243,w,c
  3874  0029E8  27D5               	addwf	(___wmul@product+1)& (0+255),f,b
  3875  0029EA                     
  3876                           ; BSR set to: 0
  3877  0029EA  C0D4  F0D0         	movff	___wmul@product,?___wmul
  3878  0029EE  C0D5  F0D1         	movff	___wmul@product+1,?___wmul+1
  3879  0029F2                     
  3880                           ; BSR set to: 0
  3881  0029F2  0012               	return		;funcret
  3882  0029F4                     __end_of___wmul:
  3883                           	opt callstack 0
  3884                           
  3885 ;; *************** function ___awdiv *****************
  3886 ;; Defined at:
  3887 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  dividend        2    0[BANK0 ] int 
  3890 ;;  divisor         2    2[BANK0 ] int 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  quotient        2    6[BANK0 ] int 
  3893 ;;  sign            1    5[BANK0 ] unsigned char 
  3894 ;;  counter         1    4[BANK0 ] unsigned char 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  2    0[BANK0 ] int 
  3897 ;; Registers used:
  3898 ;;		wreg, status,2, status,0
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3904 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3907 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;Total ram usage:        8 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    4
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_FSM
  3915 ;;		_insert
  3916 ;;		_DHT_Result
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text20
  3921  002494                     __ptext20:
  3922                           	opt callstack 0
  3923  002494                     ___awdiv:
  3924                           	opt callstack 24
  3925  002494  0E00               	movlw	0
  3926  002496  0100               	movlb	0	; () banked
  3927  002498  6FD5               	movwf	___awdiv@sign& (0+255),b
  3928  00249A                     
  3929                           ; BSR set to: 0
  3930  00249A  BFD3               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3931  00249C  EF54  F012         	goto	u3110
  3932  0024A0  EF52  F012         	goto	u3111
  3933  0024A4                     u3111:
  3934  0024A4  EF5A  F012         	goto	l3987
  3935  0024A8                     u3110:
  3936  0024A8                     
  3937                           ; BSR set to: 0
  3938  0024A8  6DD2               	negf	___awdiv@divisor& (0+255),b
  3939  0024AA  1FD3               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3940  0024AC  B0D8               	btfsc	status,0,c
  3941  0024AE  2BD3               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3942  0024B0                     
  3943                           ; BSR set to: 0
  3944  0024B0  0E01               	movlw	1
  3945  0024B2  6FD5               	movwf	___awdiv@sign& (0+255),b
  3946  0024B4                     l3987:
  3947                           
  3948                           ; BSR set to: 0
  3949  0024B4  BFD1               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  3950  0024B6  EF61  F012         	goto	u3120
  3951  0024BA  EF5F  F012         	goto	u3121
  3952  0024BE                     u3121:
  3953  0024BE  EF67  F012         	goto	l3993
  3954  0024C2                     u3120:
  3955  0024C2                     
  3956                           ; BSR set to: 0
  3957  0024C2  6DD0               	negf	___awdiv@dividend& (0+255),b
  3958  0024C4  1FD1               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3959  0024C6  B0D8               	btfsc	status,0,c
  3960  0024C8  2BD1               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3961  0024CA                     
  3962                           ; BSR set to: 0
  3963  0024CA  0E01               	movlw	1
  3964  0024CC  1BD5               	xorwf	___awdiv@sign& (0+255),f,b
  3965  0024CE                     l3993:
  3966                           
  3967                           ; BSR set to: 0
  3968  0024CE  0E00               	movlw	0
  3969  0024D0  6FD7               	movwf	(___awdiv@quotient+1)& (0+255),b
  3970  0024D2  0E00               	movlw	0
  3971  0024D4  6FD6               	movwf	___awdiv@quotient& (0+255),b
  3972  0024D6                     
  3973                           ; BSR set to: 0
  3974  0024D6  51D2               	movf	___awdiv@divisor& (0+255),w,b
  3975  0024D8  11D3               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3976  0024DA  B4D8               	btfsc	status,2,c
  3977  0024DC  EF72  F012         	goto	u3131
  3978  0024E0  EF74  F012         	goto	u3130
  3979  0024E4                     u3131:
  3980  0024E4  EF9C  F012         	goto	l4015
  3981  0024E8                     u3130:
  3982  0024E8                     
  3983                           ; BSR set to: 0
  3984  0024E8  0E01               	movlw	1
  3985  0024EA  6FD4               	movwf	___awdiv@counter& (0+255),b
  3986  0024EC  EF7C  F012         	goto	l4001
  3987  0024F0                     l3999:
  3988                           
  3989                           ; BSR set to: 0
  3990  0024F0  90D8               	bcf	status,0,c
  3991  0024F2  37D2               	rlcf	___awdiv@divisor& (0+255),f,b
  3992  0024F4  37D3               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3993  0024F6  2BD4               	incf	___awdiv@counter& (0+255),f,b
  3994  0024F8                     l4001:
  3995                           
  3996                           ; BSR set to: 0
  3997  0024F8  AFD3               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3998  0024FA  EF81  F012         	goto	u3141
  3999  0024FE  EF83  F012         	goto	u3140
  4000  002502                     u3141:
  4001  002502  EF78  F012         	goto	l3999
  4002  002506                     u3140:
  4003  002506                     l4003:
  4004                           
  4005                           ; BSR set to: 0
  4006  002506  90D8               	bcf	status,0,c
  4007  002508  37D6               	rlcf	___awdiv@quotient& (0+255),f,b
  4008  00250A  37D7               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4009  00250C                     
  4010                           ; BSR set to: 0
  4011  00250C  51D2               	movf	___awdiv@divisor& (0+255),w,b
  4012  00250E  5DD0               	subwf	___awdiv@dividend& (0+255),w,b
  4013  002510  51D3               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4014  002512  59D1               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4015  002514  A0D8               	btfss	status,0,c
  4016  002516  EF8F  F012         	goto	u3151
  4017  00251A  EF91  F012         	goto	u3150
  4018  00251E                     u3151:
  4019  00251E  EF96  F012         	goto	l4011
  4020  002522                     u3150:
  4021  002522                     
  4022                           ; BSR set to: 0
  4023  002522  51D2               	movf	___awdiv@divisor& (0+255),w,b
  4024  002524  5FD0               	subwf	___awdiv@dividend& (0+255),f,b
  4025  002526  51D3               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4026  002528  5BD1               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4027  00252A                     
  4028                           ; BSR set to: 0
  4029  00252A  81D6               	bsf	___awdiv@quotient& (0+255),0,b
  4030  00252C                     l4011:
  4031                           
  4032                           ; BSR set to: 0
  4033  00252C  90D8               	bcf	status,0,c
  4034  00252E  33D3               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4035  002530  33D2               	rrcf	___awdiv@divisor& (0+255),f,b
  4036  002532                     
  4037                           ; BSR set to: 0
  4038  002532  2FD4               	decfsz	___awdiv@counter& (0+255),f,b
  4039  002534  EF83  F012         	goto	l4003
  4040  002538                     l4015:
  4041                           
  4042                           ; BSR set to: 0
  4043  002538  51D5               	movf	___awdiv@sign& (0+255),w,b
  4044  00253A  B4D8               	btfsc	status,2,c
  4045  00253C  EFA2  F012         	goto	u3161
  4046  002540  EFA4  F012         	goto	u3160
  4047  002544                     u3161:
  4048  002544  EFA8  F012         	goto	l4019
  4049  002548                     u3160:
  4050  002548                     
  4051                           ; BSR set to: 0
  4052  002548  6DD6               	negf	___awdiv@quotient& (0+255),b
  4053  00254A  1FD7               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4054  00254C  B0D8               	btfsc	status,0,c
  4055  00254E  2BD7               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4056  002550                     l4019:
  4057                           
  4058                           ; BSR set to: 0
  4059  002550  C0D6  F0D0         	movff	___awdiv@quotient,?___awdiv
  4060  002554  C0D7  F0D1         	movff	___awdiv@quotient+1,?___awdiv+1
  4061  002558                     
  4062                           ; BSR set to: 0
  4063  002558  0012               	return		;funcret
  4064  00255A                     __end_of___awdiv:
  4065                           	opt callstack 0
  4066                           
  4067 ;; *************** function ___awmod *****************
  4068 ;; Defined at:
  4069 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  dividend        2    0[BANK0 ] int 
  4072 ;;  divisor         2    2[BANK0 ] int 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  sign            1    5[BANK0 ] unsigned char 
  4075 ;;  counter         1    4[BANK0 ] unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  2    0[BANK0 ] int 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4085 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;Total ram usage:        6 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:    4
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_FSM
  4096 ;;		_DHT_Result
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text21
  4101  00255A                     __ptext21:
  4102                           	opt callstack 0
  4103  00255A                     ___awmod:
  4104                           	opt callstack 24
  4105  00255A  0E00               	movlw	0
  4106  00255C  0100               	movlb	0	; () banked
  4107  00255E  6FD5               	movwf	___awmod@sign& (0+255),b
  4108  002560                     
  4109                           ; BSR set to: 0
  4110  002560  BFD1               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  4111  002562  EFB7  F012         	goto	u3170
  4112  002566  EFB5  F012         	goto	u3171
  4113  00256A                     u3171:
  4114  00256A  EFBD  F012         	goto	l4031
  4115  00256E                     u3170:
  4116  00256E                     
  4117                           ; BSR set to: 0
  4118  00256E  6DD0               	negf	___awmod@dividend& (0+255),b
  4119  002570  1FD1               	comf	(___awmod@dividend+1)& (0+255),f,b
  4120  002572  B0D8               	btfsc	status,0,c
  4121  002574  2BD1               	incf	(___awmod@dividend+1)& (0+255),f,b
  4122  002576                     
  4123                           ; BSR set to: 0
  4124  002576  0E01               	movlw	1
  4125  002578  6FD5               	movwf	___awmod@sign& (0+255),b
  4126  00257A                     l4031:
  4127                           
  4128                           ; BSR set to: 0
  4129  00257A  BFD3               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4130  00257C  EFC4  F012         	goto	u3180
  4131  002580  EFC2  F012         	goto	u3181
  4132  002584                     u3181:
  4133  002584  EFC8  F012         	goto	l4035
  4134  002588                     u3180:
  4135  002588                     
  4136                           ; BSR set to: 0
  4137  002588  6DD2               	negf	___awmod@divisor& (0+255),b
  4138  00258A  1FD3               	comf	(___awmod@divisor+1)& (0+255),f,b
  4139  00258C  B0D8               	btfsc	status,0,c
  4140  00258E  2BD3               	incf	(___awmod@divisor+1)& (0+255),f,b
  4141  002590                     l4035:
  4142                           
  4143                           ; BSR set to: 0
  4144  002590  51D2               	movf	___awmod@divisor& (0+255),w,b
  4145  002592  11D3               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4146  002594  B4D8               	btfsc	status,2,c
  4147  002596  EFCF  F012         	goto	u3191
  4148  00259A  EFD1  F012         	goto	u3190
  4149  00259E                     u3191:
  4150  00259E  EFF5  F012         	goto	l4051
  4151  0025A2                     u3190:
  4152  0025A2                     
  4153                           ; BSR set to: 0
  4154  0025A2  0E01               	movlw	1
  4155  0025A4  6FD4               	movwf	___awmod@counter& (0+255),b
  4156  0025A6  EFD9  F012         	goto	l4041
  4157  0025AA                     l4039:
  4158                           
  4159                           ; BSR set to: 0
  4160  0025AA  90D8               	bcf	status,0,c
  4161  0025AC  37D2               	rlcf	___awmod@divisor& (0+255),f,b
  4162  0025AE  37D3               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4163  0025B0  2BD4               	incf	___awmod@counter& (0+255),f,b
  4164  0025B2                     l4041:
  4165                           
  4166                           ; BSR set to: 0
  4167  0025B2  AFD3               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4168  0025B4  EFDE  F012         	goto	u3201
  4169  0025B8  EFE0  F012         	goto	u3200
  4170  0025BC                     u3201:
  4171  0025BC  EFD5  F012         	goto	l4039
  4172  0025C0                     u3200:
  4173  0025C0                     l4043:
  4174                           
  4175                           ; BSR set to: 0
  4176  0025C0  51D2               	movf	___awmod@divisor& (0+255),w,b
  4177  0025C2  5DD0               	subwf	___awmod@dividend& (0+255),w,b
  4178  0025C4  51D3               	movf	(___awmod@divisor+1)& (0+255),w,b
  4179  0025C6  59D1               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4180  0025C8  A0D8               	btfss	status,0,c
  4181  0025CA  EFE9  F012         	goto	u3211
  4182  0025CE  EFEB  F012         	goto	u3210
  4183  0025D2                     u3211:
  4184  0025D2  EFEF  F012         	goto	l4047
  4185  0025D6                     u3210:
  4186  0025D6                     
  4187                           ; BSR set to: 0
  4188  0025D6  51D2               	movf	___awmod@divisor& (0+255),w,b
  4189  0025D8  5FD0               	subwf	___awmod@dividend& (0+255),f,b
  4190  0025DA  51D3               	movf	(___awmod@divisor+1)& (0+255),w,b
  4191  0025DC  5BD1               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4192  0025DE                     l4047:
  4193                           
  4194                           ; BSR set to: 0
  4195  0025DE  90D8               	bcf	status,0,c
  4196  0025E0  33D3               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4197  0025E2  33D2               	rrcf	___awmod@divisor& (0+255),f,b
  4198  0025E4                     
  4199                           ; BSR set to: 0
  4200  0025E4  2FD4               	decfsz	___awmod@counter& (0+255),f,b
  4201  0025E6  EFE0  F012         	goto	l4043
  4202  0025EA                     l4051:
  4203                           
  4204                           ; BSR set to: 0
  4205  0025EA  51D5               	movf	___awmod@sign& (0+255),w,b
  4206  0025EC  B4D8               	btfsc	status,2,c
  4207  0025EE  EFFB  F012         	goto	u3221
  4208  0025F2  EFFD  F012         	goto	u3220
  4209  0025F6                     u3221:
  4210  0025F6  EF01  F013         	goto	l4055
  4211  0025FA                     u3220:
  4212  0025FA                     
  4213                           ; BSR set to: 0
  4214  0025FA  6DD0               	negf	___awmod@dividend& (0+255),b
  4215  0025FC  1FD1               	comf	(___awmod@dividend+1)& (0+255),f,b
  4216  0025FE  B0D8               	btfsc	status,0,c
  4217  002600  2BD1               	incf	(___awmod@dividend+1)& (0+255),f,b
  4218  002602                     l4055:
  4219                           
  4220                           ; BSR set to: 0
  4221  002602  C0D0  F0D0         	movff	___awmod@dividend,?___awmod
  4222  002606  C0D1  F0D1         	movff	___awmod@dividend+1,?___awmod+1
  4223  00260A                     
  4224                           ; BSR set to: 0
  4225  00260A  0012               	return		;funcret
  4226  00260C                     __end_of___awmod:
  4227                           	opt callstack 0
  4228                           
  4229 ;; *************** function _LCDPutStr *****************
  4230 ;; Defined at:
  4231 ;;		line 157 in file "LCD3.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  ptr             2    6[BANK0 ] PTR const unsigned char 
  4234 ;;		 -> STR_8(3), STR_7(3), STR_6(8), STR_5(12), 
  4235 ;;		 -> STR_4(10), STR_3(12), STR_2(10), STR_1(11), 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;		None
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4250 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4251 ;;Total ram usage:        2 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; Hardware stack levels required when called:    7
  4254 ;; This function calls:
  4255 ;;		_LCDPutChar
  4256 ;; This function is called by:
  4257 ;;		_FSM
  4258 ;;		_DHT_Result
  4259 ;;		_LCDPrint
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	text22
  4264  00287C                     __ptext22:
  4265                           	opt callstack 0
  4266  00287C                     _LCDPutStr:
  4267                           	opt callstack 21
  4268  00287C                     
  4269                           ;LCD3.c: 157: void LCDPutStr (const char *ptr);LCD3.c: 158: {;LCD3.c: 159:     while(*pt
      +                          r) LCDPutChar(*(ptr++));
  4270  00287C  EF4D  F014         	goto	l3903
  4271  002880                     l3899:
  4272  002880  C0D6  FFF6         	movff	LCDPutStr@ptr,tblptrl
  4273  002884  C0D7  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  4274  002888                     	if	0	;tblptru may be non-zero
  4275  002888                     	endif
  4276  002888                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4277  002888  0E00               	movlw	low (__mediumconst shr (0+16))
  4278  00288A  6EF8               	movwf	tblptru,c
  4279  00288C                     	endif
  4280  00288C  0008               	tblrd		*
  4281  00288E  50F5               	movf	tablat,w,c
  4282  002890  EC5E  F014         	call	_LCDPutChar
  4283  002894  0100               	movlb	0	; () banked
  4284  002896  4BD6               	infsnz	LCDPutStr@ptr& (0+255),f,b
  4285  002898  2BD7               	incf	(LCDPutStr@ptr+1)& (0+255),f,b
  4286  00289A                     l3903:
  4287  00289A  C0D6  FFF6         	movff	LCDPutStr@ptr,tblptrl
  4288  00289E  C0D7  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  4289  0028A2                     	if	0	;tblptru may be non-zero
  4290  0028A2                     	endif
  4291  0028A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4292  0028A2  0E00               	movlw	low (__mediumconst shr (0+16))
  4293  0028A4  6EF8               	movwf	tblptru,c
  4294  0028A6                     	endif
  4295  0028A6  0008               	tblrd		*
  4296  0028A8  50F5               	movf	tablat,w,c
  4297  0028AA  0900               	iorlw	0
  4298  0028AC  A4D8               	btfss	status,2,c
  4299  0028AE  EF5B  F014         	goto	u2941
  4300  0028B2  EF5D  F014         	goto	u2940
  4301  0028B6                     u2941:
  4302  0028B6  EF40  F014         	goto	l3899
  4303  0028BA                     u2940:
  4304  0028BA  0012               	return		;funcret
  4305  0028BC                     __end_of_LCDPutStr:
  4306                           	opt callstack 0
  4307                           
  4308 ;; *************** function _LCDPutChar *****************
  4309 ;; Defined at:
  4310 ;;		line 119 in file "LCD3.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  ch              1    wreg     unsigned char 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  ch              1    5[BANK0 ] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;Total ram usage:        1 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    6
  4331 ;; This function calls:
  4332 ;;		_WritePort_BBSPI
  4333 ;; This function is called by:
  4334 ;;		_FSM
  4335 ;;		_LCDPutStr
  4336 ;;		_DHT_Result
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text23
  4341  0028BC                     __ptext23:
  4342                           	opt callstack 0
  4343  0028BC                     _LCDPutChar:
  4344                           	opt callstack 21
  4345                           
  4346                           ;incstack = 0
  4347                           ;LCDPutChar@ch stored from wreg
  4348  0028BC  0100               	movlb	0	; () banked
  4349  0028BE  6FD5               	movwf	LCDPutChar@ch& (0+255),b
  4350  0028C0                     
  4351                           ;LCD3.c: 119: void LCDPutChar (unsigned char ch);LCD3.c: 120: {;LCD3.c: 121:     _delay(
      +                          (unsigned long)((5)*(10000000/4000000.0)));
  4352  0028C0  0E04               	movlw	4
  4353  0028C2                     u3817:
  4354  0028C2  2EE8               	decfsz	wreg,f,c
  4355  0028C4  D7FE               	bra	u3817
  4356  0028C6                     
  4357                           ;LCD3.c: 122:     WritePort_BBSPI (0x12, 0x80);
  4358  0028C6  0E80               	movlw	128
  4359  0028C8  0100               	movlb	0	; () banked
  4360  0028CA  6FD3               	movwf	WritePort_BBSPI@a& (0+255),b
  4361  0028CC  0E12               	movlw	18
  4362  0028CE  EC6B  F015         	call	_WritePort_BBSPI
  4363  0028D2                     
  4364                           ;LCD3.c: 123:     _delay((unsigned long)((1)*(10000000/4000000.0)));
  4365  0028D2  D000               	nop2		;2 cycle nop
  4366  0028D4                     
  4367                           ;LCD3.c: 124:     WritePort_BBSPI (0x13, ch);
  4368  0028D4  C0D5  F0D3         	movff	LCDPutChar@ch,WritePort_BBSPI@a
  4369  0028D8  0E13               	movlw	19
  4370  0028DA  EC6B  F015         	call	_WritePort_BBSPI
  4371  0028DE                     
  4372                           ;LCD3.c: 125:     _delay((unsigned long)((1)*(10000000/4000000.0)));
  4373  0028DE  D000               	nop2		;2 cycle nop
  4374  0028E0                     
  4375                           ;LCD3.c: 126:     WritePort_BBSPI (0x12, 0xC0);
  4376  0028E0  0EC0               	movlw	192
  4377  0028E2  0100               	movlb	0	; () banked
  4378  0028E4  6FD3               	movwf	WritePort_BBSPI@a& (0+255),b
  4379  0028E6  0E12               	movlw	18
  4380  0028E8  EC6B  F015         	call	_WritePort_BBSPI
  4381  0028EC                     
  4382                           ;LCD3.c: 127:     _delay((unsigned long)((1)*(10000000/4000000.0)));
  4383  0028EC  D000               	nop2		;2 cycle nop
  4384  0028EE                     
  4385                           ;LCD3.c: 128:     WritePort_BBSPI (0x12, 0x00);
  4386  0028EE  0E00               	movlw	0
  4387  0028F0  0100               	movlb	0	; () banked
  4388  0028F2  6FD3               	movwf	WritePort_BBSPI@a& (0+255),b
  4389  0028F4  0E12               	movlw	18
  4390  0028F6  EC6B  F015         	call	_WritePort_BBSPI
  4391  0028FA  0012               	return		;funcret
  4392  0028FC                     __end_of_LCDPutChar:
  4393                           	opt callstack 0
  4394                           
  4395 ;; *************** function _LCDPutInst *****************
  4396 ;; Defined at:
  4397 ;;		line 138 in file "LCD3.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  ch              1    wreg     unsigned char 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;  ch              1    5[BANK0 ] unsigned char 
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      void 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;Total ram usage:        1 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    6
  4418 ;; This function calls:
  4419 ;;		_WritePort_BBSPI
  4420 ;; This function is called by:
  4421 ;;		_FSM
  4422 ;;		_LCDInit
  4423 ;;		_main
  4424 ;;		_DHT_Result
  4425 ;;		_LCDMoveCursor
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text24
  4430  0028FC                     __ptext24:
  4431                           	opt callstack 0
  4432  0028FC                     _LCDPutInst:
  4433                           	opt callstack 22
  4434                           
  4435                           ;incstack = 0
  4436                           ;LCDPutInst@ch stored from wreg
  4437  0028FC  0100               	movlb	0	; () banked
  4438  0028FE  6FD5               	movwf	LCDPutInst@ch& (0+255),b
  4439  002900                     
  4440                           ;LCD3.c: 138: void LCDPutInst (unsigned char ch);LCD3.c: 139: {;LCD3.c: 140:     _delay(
      +                          (unsigned long)((5)*(10000000/4000000.0)));
  4441  002900  0E04               	movlw	4
  4442  002902                     u3827:
  4443  002902  2EE8               	decfsz	wreg,f,c
  4444  002904  D7FE               	bra	u3827
  4445  002906                     
  4446                           ;LCD3.c: 141:     WritePort_BBSPI (0x12, 0x00);
  4447  002906  0E00               	movlw	0
  4448  002908  0100               	movlb	0	; () banked
  4449  00290A  6FD3               	movwf	WritePort_BBSPI@a& (0+255),b
  4450  00290C  0E12               	movlw	18
  4451  00290E  EC6B  F015         	call	_WritePort_BBSPI
  4452  002912                     
  4453                           ;LCD3.c: 142:     _delay((unsigned long)((1)*(10000000/4000000.0)));
  4454  002912  D000               	nop2		;2 cycle nop
  4455  002914                     
  4456                           ;LCD3.c: 143:     WritePort_BBSPI (0x13, ch);
  4457  002914  C0D5  F0D3         	movff	LCDPutInst@ch,WritePort_BBSPI@a
  4458  002918  0E13               	movlw	19
  4459  00291A  EC6B  F015         	call	_WritePort_BBSPI
  4460  00291E                     
  4461                           ;LCD3.c: 144:     _delay((unsigned long)((1)*(10000000/4000000.0)));
  4462  00291E  D000               	nop2		;2 cycle nop
  4463  002920                     
  4464                           ;LCD3.c: 145:     WritePort_BBSPI (0x12,0x40);
  4465  002920  0E40               	movlw	64
  4466  002922  0100               	movlb	0	; () banked
  4467  002924  6FD3               	movwf	WritePort_BBSPI@a& (0+255),b
  4468  002926  0E12               	movlw	18
  4469  002928  EC6B  F015         	call	_WritePort_BBSPI
  4470  00292C                     
  4471                           ;LCD3.c: 146:     _delay((unsigned long)((1)*(10000000/4000000.0)));
  4472  00292C  D000               	nop2		;2 cycle nop
  4473  00292E                     
  4474                           ;LCD3.c: 147:     WritePort_BBSPI (0x12, 0x00);
  4475  00292E  0E00               	movlw	0
  4476  002930  0100               	movlb	0	; () banked
  4477  002932  6FD3               	movwf	WritePort_BBSPI@a& (0+255),b
  4478  002934  0E12               	movlw	18
  4479  002936  EC6B  F015         	call	_WritePort_BBSPI
  4480  00293A  0012               	return		;funcret
  4481  00293C                     __end_of_LCDPutInst:
  4482                           	opt callstack 0
  4483                           
  4484 ;; *************** function _WritePort_BBSPI *****************
  4485 ;; Defined at:
  4486 ;;		line 103 in file "LCD3.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  port_add        1    wreg     unsigned char 
  4489 ;;  a               1    3[BANK0 ] unsigned char 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  port_add        1    4[BANK0 ] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4501 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;Total ram usage:        2 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    5
  4508 ;; This function calls:
  4509 ;;		_SendByteBBSPI
  4510 ;; This function is called by:
  4511 ;;		_LCDInit
  4512 ;;		_LCDPutChar
  4513 ;;		_LCDPutInst
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text25
  4518  002AD6                     __ptext25:
  4519                           	opt callstack 0
  4520  002AD6                     _WritePort_BBSPI:
  4521                           	opt callstack 21
  4522                           
  4523                           ;incstack = 0
  4524                           ;WritePort_BBSPI@port_add stored from wreg
  4525  002AD6  0100               	movlb	0	; () banked
  4526  002AD8  6FD4               	movwf	WritePort_BBSPI@port_add& (0+255),b
  4527  002ADA                     
  4528                           ;LCD3.c: 103: void WritePort_BBSPI (unsigned char port_add, unsigned char a);LCD3.c: 104
      +                          : {;LCD3.c: 105:     LATAbits.LATA2 = 0;
  4529  002ADA  9489               	bcf	137,2,c	;volatile
  4530  002ADC                     
  4531                           ;LCD3.c: 106:     SendByteBBSPI(0x40);
  4532  002ADC  0E40               	movlw	64
  4533  002ADE  ECD6  F013         	call	_SendByteBBSPI
  4534                           
  4535                           ;LCD3.c: 107:     SendByteBBSPI(port_add);
  4536  002AE2  0100               	movlb	0	; () banked
  4537  002AE4  51D4               	movf	WritePort_BBSPI@port_add& (0+255),w,b
  4538  002AE6  ECD6  F013         	call	_SendByteBBSPI
  4539                           
  4540                           ;LCD3.c: 108:     SendByteBBSPI(a);
  4541  002AEA  0100               	movlb	0	; () banked
  4542  002AEC  51D3               	movf	WritePort_BBSPI@a& (0+255),w,b
  4543  002AEE  ECD6  F013         	call	_SendByteBBSPI
  4544  002AF2                     
  4545                           ;LCD3.c: 109:     LATAbits.LATA2 = 1;
  4546  002AF2  8489               	bsf	137,2,c	;volatile
  4547  002AF4  0012               	return		;funcret
  4548  002AF6                     __end_of_WritePort_BBSPI:
  4549                           	opt callstack 0
  4550                           
  4551 ;; *************** function _SendByteBBSPI *****************
  4552 ;; Defined at:
  4553 ;;		line 50 in file "LCD3.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  output          1    wreg     unsigned char 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  output          1    0[BANK0 ] unsigned char 
  4558 ;;  input           1    2[BANK0 ] unsigned char 
  4559 ;;  bitcount        1    1[BANK0 ] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;Total ram usage:        3 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    4
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_Port_BBSPIInit
  4580 ;;		_WritePort_BBSPI
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text26
  4585  0027AC                     __ptext26:
  4586                           	opt callstack 0
  4587  0027AC                     _SendByteBBSPI:
  4588                           	opt callstack 21
  4589                           
  4590                           ;incstack = 0
  4591                           ;SendByteBBSPI@output stored from wreg
  4592  0027AC  0100               	movlb	0	; () banked
  4593  0027AE  6FD0               	movwf	SendByteBBSPI@output& (0+255),b
  4594  0027B0                     
  4595                           ;LCD3.c: 50: void SendByteBBSPI (unsigned char output);LCD3.c: 51: {;LCD3.c: 52:     uns
      +                          igned char bitcount;;LCD3.c: 53:     unsigned char input = output;
  4596  0027B0  C0D0  F0D2         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  4597  0027B4                     
  4598                           ;LCD3.c: 55:     for(bitcount=0;bitcount<8;bitcount++)
  4599  0027B4  0E00               	movlw	0
  4600  0027B6  0100               	movlb	0	; () banked
  4601  0027B8  6FD1               	movwf	SendByteBBSPI@bitcount& (0+255),b
  4602  0027BA                     l613:
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;LCD3.c: 56:     {;LCD3.c: 58:         if(output & 0x80)
  4606  0027BA  AFD0               	btfss	SendByteBBSPI@output& (0+255),7,b
  4607  0027BC  EFE2  F013         	goto	u2911
  4608  0027C0  EFE4  F013         	goto	u2910
  4609  0027C4                     u2911:
  4610  0027C4  EFE7  F013         	goto	l615
  4611  0027C8                     u2910:
  4612  0027C8                     
  4613                           ; BSR set to: 0
  4614                           ;LCD3.c: 59:             LATCbits.LATC5 = 1;
  4615  0027C8  8A8B               	bsf	139,5,c	;volatile
  4616  0027CA  EFE8  F013         	goto	l616
  4617  0027CE                     l615:
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;LCD3.c: 61:             LATCbits.LATC5 = 0;
  4621  0027CE  9A8B               	bcf	139,5,c	;volatile
  4622  0027D0                     l616:
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;LCD3.c: 63:         if (LATCbits.LATC4)
  4626  0027D0  A88B               	btfss	139,4,c	;volatile
  4627  0027D2  EFED  F013         	goto	u2921
  4628  0027D6  EFEF  F013         	goto	u2920
  4629  0027DA                     u2921:
  4630  0027DA  EFF3  F013         	goto	l3837
  4631  0027DE                     u2920:
  4632  0027DE                     
  4633                           ; BSR set to: 0
  4634                           ;LCD3.c: 64:             input = (input << 1) | 0x1;
  4635  0027DE  80D8               	bsf	status,0,c
  4636  0027E0  37D2               	rlcf	SendByteBBSPI@input& (0+255),f,b
  4637  0027E2  EFF6  F013         	goto	l3839
  4638  0027E6                     l3837:
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;LCD3.c: 66:             input = input << 1;
  4642  0027E6  51D2               	movf	SendByteBBSPI@input& (0+255),w,b
  4643  0027E8  25D2               	addwf	SendByteBBSPI@input& (0+255),w,b
  4644  0027EA  6FD2               	movwf	SendByteBBSPI@input& (0+255),b
  4645  0027EC                     l3839:
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;LCD3.c: 67:         LATCbits.LATC3 = 1;
  4649  0027EC  868B               	bsf	139,3,c	;volatile
  4650  0027EE                     
  4651                           ; BSR set to: 0
  4652                           ;LCD3.c: 68:         __nop();__nop();__nop();__nop();__nop();__nop();
  4653  0027EE  F000               	nop	
  4654  0027F0  F000               	nop	
  4655  0027F2  F000               	nop	
  4656  0027F4  F000               	nop	
  4657  0027F6  F000               	nop	
  4658  0027F8  F000               	nop	
  4659  0027FA                     
  4660                           ;LCD3.c: 70:         LATCbits.LATC3 = 0;
  4661  0027FA  968B               	bcf	139,3,c	;volatile
  4662                           
  4663                           ;LCD3.c: 71:         output <<= 1;
  4664  0027FC  0100               	movlb	0	; () banked
  4665  0027FE  90D8               	bcf	status,0,c
  4666  002800  37D0               	rlcf	SendByteBBSPI@output& (0+255),f,b
  4667  002802                     
  4668                           ; BSR set to: 0
  4669                           ;LCD3.c: 72:     }
  4670  002802  2BD1               	incf	SendByteBBSPI@bitcount& (0+255),f,b
  4671  002804                     
  4672                           ; BSR set to: 0
  4673  002804  0E07               	movlw	7
  4674  002806  65D1               	cpfsgt	SendByteBBSPI@bitcount& (0+255),b
  4675  002808  EF08  F014         	goto	u2931
  4676  00280C  EF0A  F014         	goto	u2930
  4677  002810                     u2931:
  4678  002810  EFDD  F013         	goto	l613
  4679  002814                     u2930:
  4680  002814                     
  4681                           ; BSR set to: 0
  4682  002814  0012               	return		;funcret
  4683  002816                     __end_of_SendByteBBSPI:
  4684                           	opt callstack 0
  4685                           
  4686 ;; *************** function _tcInt *****************
  4687 ;; Defined at:
  4688 ;;		line 13 in file "main.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;		None
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;		None
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      void 
  4695 ;; Registers used:
  4696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;Total ram usage:        6 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    3
  4709 ;; This function calls:
  4710 ;;		_readButton1
  4711 ;;		_readButton2
  4712 ;;		_update
  4713 ;; This function is called by:
  4714 ;;		Interrupt level 2
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           	psect	intcode
  4719  000008                     __pintcode:
  4720                           	opt callstack 0
  4721  000008                     _tcInt:
  4722                           	opt callstack 21
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;incstack = 0
  4726  000008  8246               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4727  00000A  ED59  F013         	call	int_func,f	;refresh shadow registers
  4728                           
  4729                           	psect	intcode_body
  4730  0026B2                     __pintcode_body:
  4731                           	opt callstack 21
  4732  0026B2                     int_func:
  4733                           	opt callstack 21
  4734  0026B2  0006               	pop		; remove dummy address from shadow register refresh
  4735  0026B4  CFE1 F01E          	movff	fsr1l,??_tcInt
  4736  0026B8  CFE2 F01F          	movff	fsr1h,??_tcInt+1
  4737  0026BC  CFD9 F020          	movff	fsr2l,??_tcInt+2
  4738  0026C0  CFDA F021          	movff	fsr2h,??_tcInt+3
  4739  0026C4  CFF3 F022          	movff	prodl,??_tcInt+4
  4740  0026C8  CFF4 F023          	movff	prodh,??_tcInt+5
  4741  0026CC                     
  4742                           ;main.c: 14:     if (INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  4743  0026CC  AAF2               	btfss	242,5,c	;volatile
  4744  0026CE  EF6B  F013         	goto	i2u288_41
  4745  0026D2  EF6D  F013         	goto	i2u288_40
  4746  0026D6                     i2u288_41:
  4747  0026D6  EF91  F013         	goto	i2l996
  4748  0026DA                     i2u288_40:
  4749  0026DA  A4F2               	btfss	242,2,c	;volatile
  4750  0026DC  EF72  F013         	goto	i2u289_41
  4751  0026E0  EF74  F013         	goto	i2u289_40
  4752  0026E4                     i2u289_41:
  4753  0026E4  EF91  F013         	goto	i2l996
  4754  0026E8                     i2u289_40:
  4755  0026E8                     
  4756                           ;main.c: 15:         INTCONbits.TMR0IF = 0;
  4757  0026E8  94F2               	bcf	242,2,c	;volatile
  4758                           
  4759                           ;main.c: 16:         TMR0 = A;
  4760  0026EA  C0B2  FFD6         	movff	_A,4054	;volatile
  4761  0026EE  C0B3  FFD7         	movff	_A+1,4055	;volatile
  4762  0026F2                     
  4763                           ;main.c: 17:          countInter++;
  4764  0026F2  0100               	movlb	0	; () banked
  4765  0026F4  4B9A               	infsnz	_countInter& (0+255),f,b
  4766  0026F6  2B9B               	incf	(_countInter+1)& (0+255),f,b
  4767  0026F8                     
  4768                           ; BSR set to: 0
  4769                           ;main.c: 19:         if(countInter ==2)
  4770  0026F8  0E02               	movlw	2
  4771  0026FA  199A               	xorwf	_countInter& (0+255),w,b
  4772  0026FC  119B               	iorwf	(_countInter+1)& (0+255),w,b
  4773  0026FE  A4D8               	btfss	status,2,c
  4774  002700  EF84  F013         	goto	i2u290_41
  4775  002704  EF86  F013         	goto	i2u290_40
  4776  002708                     i2u290_41:
  4777  002708  EF8F  F013         	goto	i2l3785
  4778  00270C                     i2u290_40:
  4779  00270C                     
  4780                           ; BSR set to: 0
  4781                           ;main.c: 20:         {;main.c: 22:             readButton1();
  4782  00270C  EC64  F00E         	call	_readButton1	;wreg free
  4783                           
  4784                           ;main.c: 23:             readButton2();
  4785  002710  ECBB  F010         	call	_readButton2	;wreg free
  4786  002714                     
  4787                           ;main.c: 24:             countInter=0;
  4788  002714  0E00               	movlw	0
  4789  002716  0100               	movlb	0	; () banked
  4790  002718  6F9B               	movwf	(_countInter+1)& (0+255),b
  4791  00271A  0E00               	movlw	0
  4792  00271C  6F9A               	movwf	_countInter& (0+255),b
  4793  00271E                     i2l3785:
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;main.c: 26:         update();
  4797  00271E  EC9B  F00A         	call	_update	;wreg free
  4798  002722                     i2l996:
  4799  002722  C023  FFF4         	movff	??_tcInt+5,prodh
  4800  002726  C022  FFF3         	movff	??_tcInt+4,prodl
  4801  00272A  C021  FFDA         	movff	??_tcInt+3,fsr2h
  4802  00272E  C020  FFD9         	movff	??_tcInt+2,fsr2l
  4803  002732  C01F  FFE2         	movff	??_tcInt+1,fsr1h
  4804  002736  C01E  FFE1         	movff	??_tcInt,fsr1l
  4805  00273A  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4806  00273C  0011               	retfie		f
  4807  00273E                     __end_of_tcInt:
  4808                           	opt callstack 0
  4809                           
  4810 ;; *************** function _update *****************
  4811 ;; Defined at:
  4812 ;;		line 86 in file "Sche.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;  t               2   23[COMRAM] int 
  4817 ;;  ptr_temp        3   14[COMRAM] PTR FTN()void 
  4818 ;;		 -> NULL(0), fan1(1), fan3(1), heatpump(1), 
  4819 ;;		 -> fan2(1), heater(1), DHT_Result(1), 
  4820 ;;  temp_2          2   21[COMRAM] int 
  4821 ;;  time            2   19[COMRAM] int 
  4822 ;;  temp_1          2   17[COMRAM] int 
  4823 ;;  j               2   27[COMRAM] int 
  4824 ;;  i               2   25[COMRAM] int 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      void 
  4827 ;; Registers used:
  4828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;Total ram usage:       20 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    2
  4841 ;; This function calls:
  4842 ;;		_remove
  4843 ;;		i2___wmul
  4844 ;; This function is called by:
  4845 ;;		_tcInt
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text28
  4850  001536                     __ptext28:
  4851                           	opt callstack 0
  4852  001536                     _update:
  4853                           	opt callstack 21
  4854  001536                     
  4855                           ;Sche.c: 87:         int i = 0;
  4856  001536  0E00               	movlw	0
  4857  001538  6E1B               	movwf	(update@i+1)^0,c
  4858  00153A  0E00               	movlw	0
  4859  00153C  6E1A               	movwf	update@i^0,c
  4860                           
  4861                           ;Sche.c: 89:         index = 0;
  4862  00153E  0E00               	movlw	0
  4863  001540  0100               	movlb	0	; () banked
  4864  001542  6F89               	movwf	(_index+1)& (0+255),b
  4865  001544  0E00               	movlw	0
  4866  001546  6F88               	movwf	_index& (0+255),b
  4867  001548                     
  4868                           ; BSR set to: 0
  4869                           ;Sche.c: 90:         if(count < 5)
  4870  001548  BE25               	btfsc	(_count+1)^0,7,c
  4871  00154A  EFB2  F00A         	goto	i2u265_40
  4872  00154E  5025               	movf	(_count+1)^0,w,c
  4873  001550  E107               	bnz	i2u265_41
  4874  001552  0E05               	movlw	5
  4875  001554  5C24               	subwf	_count^0,w,c
  4876  001556  B0D8               	btfsc	status,0,c
  4877  001558  EFB0  F00A         	goto	i2u265_41
  4878  00155C  EFB2  F00A         	goto	i2u265_40
  4879  001560                     i2u265_41:
  4880  001560  EFB4  F00A         	goto	i2l3627
  4881  001564                     i2u265_40:
  4882  001564  EF96  F00C         	goto	i2l813
  4883  001568                     i2l3627:
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;Sche.c: 92:         SCH_Task[i].delay-=1;
  4887  001568  0E00               	movlw	0
  4888  00156A  6E02               	movwf	(i2___wmul@multiplier+1)^0,c
  4889  00156C  0E00               	movlw	0
  4890  00156E  6E01               	movwf	i2___wmul@multiplier^0,c
  4891  001570  0E00               	movlw	0
  4892  001572  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4893  001574  0E0B               	movlw	11
  4894  001576  6E03               	movwf	i2___wmul@multiplicand^0,c
  4895  001578  EC46  F015         	call	i2___wmul	;wreg free
  4896  00157C  0E00               	movlw	low _SCH_Task
  4897  00157E  2401               	addwf	?i2___wmul^0,w,c
  4898  001580  6ED9               	movwf	fsr2l,c
  4899  001582  0E01               	movlw	high _SCH_Task
  4900  001584  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4901  001586  6EDA               	movwf	fsr2h,c
  4902  001588  06DE               	decf	postinc2,f,c
  4903  00158A  0E00               	movlw	0
  4904  00158C  5ADD               	subwfb	postdec2,f,c
  4905                           
  4906                           ;Sche.c: 93:         while(SCH_Task[i].delay <= 0)
  4907  00158E  EF77  F00C         	goto	i2l3675
  4908  001592                     i2l3629:
  4909                           
  4910                           ;Sche.c: 94:         {;Sche.c: 95:             ptr[index] = SCH_Task[i].func_ptr;
  4911  001592  C01A  F001         	movff	update@i,i2___wmul@multiplier
  4912  001596  C01B  F002         	movff	update@i+1,i2___wmul@multiplier+1
  4913  00159A  0E00               	movlw	0
  4914  00159C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4915  00159E  0E0B               	movlw	11
  4916  0015A0  6E03               	movwf	i2___wmul@multiplicand^0,c
  4917  0015A2  EC46  F015         	call	i2___wmul	;wreg free
  4918  0015A6  0E08               	movlw	low (_SCH_Task+8)
  4919  0015A8  2401               	addwf	?i2___wmul^0,w,c
  4920  0015AA  6ED9               	movwf	fsr2l,c
  4921  0015AC  0E01               	movlw	high (_SCH_Task+8)
  4922  0015AE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4923  0015B0  6EDA               	movwf	fsr2h,c
  4924  0015B2  C088  F001         	movff	_index,i2___wmul@multiplier
  4925  0015B6  C089  F002         	movff	_index+1,i2___wmul@multiplier+1
  4926  0015BA  0E00               	movlw	0
  4927  0015BC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4928  0015BE  0E03               	movlw	3
  4929  0015C0  6E03               	movwf	i2___wmul@multiplicand^0,c
  4930  0015C2  EC46  F015         	call	i2___wmul	;wreg free
  4931  0015C6  0E60               	movlw	low _ptr
  4932  0015C8  2401               	addwf	?i2___wmul^0,w,c
  4933  0015CA  6EE1               	movwf	fsr1l,c
  4934  0015CC  0E00               	movlw	high _ptr
  4935  0015CE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4936  0015D0  6EE2               	movwf	fsr1h,c
  4937  0015D2  CFDE FFE6          	movff	postinc2,postinc1
  4938  0015D6  CFDE FFE6          	movff	postinc2,postinc1
  4939  0015DA  CFDE FFE6          	movff	postinc2,postinc1
  4940  0015DE                     
  4941                           ;Sche.c: 97:             int temp_1 =SCH_Task[i].period;
  4942  0015DE  C01A  F001         	movff	update@i,i2___wmul@multiplier
  4943  0015E2  C01B  F002         	movff	update@i+1,i2___wmul@multiplier+1
  4944  0015E6  0E00               	movlw	0
  4945  0015E8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4946  0015EA  0E0B               	movlw	11
  4947  0015EC  6E03               	movwf	i2___wmul@multiplicand^0,c
  4948  0015EE  EC46  F015         	call	i2___wmul	;wreg free
  4949  0015F2  0E04               	movlw	low (_SCH_Task+4)
  4950  0015F4  2401               	addwf	?i2___wmul^0,w,c
  4951  0015F6  6ED9               	movwf	fsr2l,c
  4952  0015F8  0E01               	movlw	high (_SCH_Task+4)
  4953  0015FA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4954  0015FC  6EDA               	movwf	fsr2h,c
  4955  0015FE  CFDE F012          	movff	postinc2,update@temp_1
  4956  001602  CFDD F013          	movff	postdec2,update@temp_1+1
  4957  001606                     
  4958                           ;Sche.c: 98:             int temp_2 = SCH_Task[i].period;
  4959  001606  C01A  F001         	movff	update@i,i2___wmul@multiplier
  4960  00160A  C01B  F002         	movff	update@i+1,i2___wmul@multiplier+1
  4961  00160E  0E00               	movlw	0
  4962  001610  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4963  001612  0E0B               	movlw	11
  4964  001614  6E03               	movwf	i2___wmul@multiplicand^0,c
  4965  001616  EC46  F015         	call	i2___wmul	;wreg free
  4966  00161A  0E04               	movlw	low (_SCH_Task+4)
  4967  00161C  2401               	addwf	?i2___wmul^0,w,c
  4968  00161E  6ED9               	movwf	fsr2l,c
  4969  001620  0E01               	movlw	high (_SCH_Task+4)
  4970  001622  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4971  001624  6EDA               	movwf	fsr2h,c
  4972  001626  CFDE F016          	movff	postinc2,update@temp_2
  4973  00162A  CFDD F017          	movff	postdec2,update@temp_2+1
  4974  00162E                     
  4975                           ;Sche.c: 99:             void (*ptr_temp)() = SCH_Task[i].func_ptr;
  4976  00162E  C01A  F001         	movff	update@i,i2___wmul@multiplier
  4977  001632  C01B  F002         	movff	update@i+1,i2___wmul@multiplier+1
  4978  001636  0E00               	movlw	0
  4979  001638  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4980  00163A  0E0B               	movlw	11
  4981  00163C  6E03               	movwf	i2___wmul@multiplicand^0,c
  4982  00163E  EC46  F015         	call	i2___wmul	;wreg free
  4983  001642  0E08               	movlw	low (_SCH_Task+8)
  4984  001644  2401               	addwf	?i2___wmul^0,w,c
  4985  001646  6ED9               	movwf	fsr2l,c
  4986  001648  0E01               	movlw	high (_SCH_Task+8)
  4987  00164A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4988  00164C  6EDA               	movwf	fsr2h,c
  4989  00164E  CFDE F00F          	movff	postinc2,update@ptr_temp
  4990  001652  CFDE F010          	movff	postinc2,update@ptr_temp+1
  4991  001656  CFDD F011          	movff	postdec2,update@ptr_temp+2
  4992  00165A                     
  4993                           ;Sche.c: 100:             remove();
  4994  00165A  EC0B  F00F         	call	_remove	;wreg free
  4995  00165E                     
  4996                           ;Sche.c: 101:             if(temp_2!=0){
  4997  00165E  5016               	movf	update@temp_2^0,w,c
  4998  001660  1017               	iorwf	(update@temp_2+1)^0,w,c
  4999  001662  B4D8               	btfsc	status,2,c
  5000  001664  EF36  F00B         	goto	i2u266_41
  5001  001668  EF38  F00B         	goto	i2u266_40
  5002  00166C                     i2u266_41:
  5003  00166C  EF74  F00C         	goto	i2l3673
  5004  001670                     i2u266_40:
  5005  001670                     
  5006                           ;Sche.c: 102:             for(j = 0; (j <= count-1 && temp_2>=SCH_Task[j].delay); j++)
  5007  001670  0E00               	movlw	0
  5008  001672  6E1D               	movwf	(update@j+1)^0,c
  5009  001674  0E00               	movlw	0
  5010  001676  6E1C               	movwf	update@j^0,c
  5011  001678  EF58  F00B         	goto	i2l3651
  5012  00167C                     i2l3645:
  5013                           
  5014                           ;Sche.c: 103:             {;Sche.c: 104:                     time=SCH_Task[j].delay;
  5015  00167C  C01C  F001         	movff	update@j,i2___wmul@multiplier
  5016  001680  C01D  F002         	movff	update@j+1,i2___wmul@multiplier+1
  5017  001684  0E00               	movlw	0
  5018  001686  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5019  001688  0E0B               	movlw	11
  5020  00168A  6E03               	movwf	i2___wmul@multiplicand^0,c
  5021  00168C  EC46  F015         	call	i2___wmul	;wreg free
  5022  001690  0E00               	movlw	low _SCH_Task
  5023  001692  2401               	addwf	?i2___wmul^0,w,c
  5024  001694  6ED9               	movwf	fsr2l,c
  5025  001696  0E01               	movlw	high _SCH_Task
  5026  001698  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5027  00169A  6EDA               	movwf	fsr2h,c
  5028  00169C  CFDE F014          	movff	postinc2,update@time
  5029  0016A0  CFDD F015          	movff	postdec2,update@time+1
  5030  0016A4                     
  5031                           ;Sche.c: 105:                     temp_2 -= time;
  5032  0016A4  5014               	movf	update@time^0,w,c
  5033  0016A6  5E16               	subwf	update@temp_2^0,f,c
  5034  0016A8  5015               	movf	(update@time+1)^0,w,c
  5035  0016AA  5A17               	subwfb	(update@temp_2+1)^0,f,c
  5036  0016AC                     
  5037                           ;Sche.c: 106:             }
  5038  0016AC  4A1C               	infsnz	update@j^0,f,c
  5039  0016AE  2A1D               	incf	(update@j+1)^0,f,c
  5040  0016B0                     i2l3651:
  5041  0016B0  0EFF               	movlw	255
  5042  0016B2  6E0A               	movwf	??_update^0,c
  5043  0016B4  0EFF               	movlw	255
  5044  0016B6  6E0B               	movwf	(??_update+1)^0,c
  5045  0016B8  C024  F00C         	movff	_count,??_update+2
  5046  0016BC  C025  F00D         	movff	_count+1,??_update+3
  5047  0016C0  500A               	movf	??_update^0,w,c
  5048  0016C2  260C               	addwf	(??_update+2)^0,f,c
  5049  0016C4  500B               	movf	(??_update+1)^0,w,c
  5050  0016C6  220D               	addwfc	(??_update+3)^0,f,c
  5051  0016C8  501C               	movf	update@j^0,w,c
  5052  0016CA  5C0C               	subwf	(??_update+2)^0,w,c
  5053  0016CC  500D               	movf	(??_update+3)^0,w,c
  5054  0016CE  0A80               	xorlw	128
  5055  0016D0  6E0E               	movwf	(??_update+4)^0,c
  5056  0016D2  501D               	movf	(update@j+1)^0,w,c
  5057  0016D4  0A80               	xorlw	128
  5058  0016D6  580E               	subwfb	(??_update+4)^0,w,c
  5059  0016D8  A0D8               	btfss	status,0,c
  5060  0016DA  EF71  F00B         	goto	i2u267_41
  5061  0016DE  EF73  F00B         	goto	i2u267_40
  5062  0016E2                     i2u267_41:
  5063  0016E2  EF92  F00B         	goto	i2l3655
  5064  0016E6                     i2u267_40:
  5065  0016E6  C01C  F001         	movff	update@j,i2___wmul@multiplier
  5066  0016EA  C01D  F002         	movff	update@j+1,i2___wmul@multiplier+1
  5067  0016EE  0E00               	movlw	0
  5068  0016F0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5069  0016F2  0E0B               	movlw	11
  5070  0016F4  6E03               	movwf	i2___wmul@multiplicand^0,c
  5071  0016F6  EC46  F015         	call	i2___wmul	;wreg free
  5072  0016FA  0E00               	movlw	low _SCH_Task
  5073  0016FC  2401               	addwf	?i2___wmul^0,w,c
  5074  0016FE  6ED9               	movwf	fsr2l,c
  5075  001700  0E01               	movlw	high _SCH_Task
  5076  001702  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5077  001704  6EDA               	movwf	fsr2h,c
  5078  001706  50DE               	movf	postinc2,w,c
  5079  001708  5C16               	subwf	update@temp_2^0,w,c
  5080  00170A  5017               	movf	(update@temp_2+1)^0,w,c
  5081  00170C  0A80               	xorlw	128
  5082  00170E  6E0C               	movwf	(??_update+2)^0,c
  5083  001710  50DE               	movf	postinc2,w,c
  5084  001712  0A80               	xorlw	128
  5085  001714  580C               	subwfb	(??_update+2)^0,w,c
  5086  001716  B0D8               	btfsc	status,0,c
  5087  001718  EF90  F00B         	goto	i2u268_41
  5088  00171C  EF92  F00B         	goto	i2u268_40
  5089  001720                     i2u268_41:
  5090  001720  EF3E  F00B         	goto	i2l3645
  5091  001724                     i2u268_40:
  5092  001724                     i2l3655:
  5093                           
  5094                           ;Sche.c: 107:             for(int t = count-1; t >= j; t--)
  5095  001724  0EFF               	movlw	255
  5096  001726  2424               	addwf	_count^0,w,c
  5097  001728  6E18               	movwf	update@t^0,c
  5098  00172A  0EFF               	movlw	255
  5099  00172C  2025               	addwfc	(_count+1)^0,w,c
  5100  00172E  6E19               	movwf	(update@t+1)^0,c
  5101  001730  EFC2  F00B         	goto	i2l3661
  5102  001734                     i2l3657:
  5103                           
  5104                           ;Sche.c: 108:             {;Sche.c: 109:                 SCH_Task[t+1] = SCH_Task[t];
  5105  001734  C018  F001         	movff	update@t,i2___wmul@multiplier
  5106  001738  C019  F002         	movff	update@t+1,i2___wmul@multiplier+1
  5107  00173C  0E00               	movlw	0
  5108  00173E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5109  001740  0E0B               	movlw	11
  5110  001742  6E03               	movwf	i2___wmul@multiplicand^0,c
  5111  001744  EC46  F015         	call	i2___wmul	;wreg free
  5112  001748  0E00               	movlw	low _SCH_Task
  5113  00174A  2401               	addwf	?i2___wmul^0,w,c
  5114  00174C  6ED9               	movwf	fsr2l,c
  5115  00174E  0E01               	movlw	high _SCH_Task
  5116  001750  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5117  001752  6EDA               	movwf	fsr2h,c
  5118  001754  C018  F001         	movff	update@t,i2___wmul@multiplier
  5119  001758  C019  F002         	movff	update@t+1,i2___wmul@multiplier+1
  5120  00175C  0E00               	movlw	0
  5121  00175E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5122  001760  0E0B               	movlw	11
  5123  001762  6E03               	movwf	i2___wmul@multiplicand^0,c
  5124  001764  EC46  F015         	call	i2___wmul	;wreg free
  5125  001768  0E0B               	movlw	low (_SCH_Task+11)
  5126  00176A  2401               	addwf	?i2___wmul^0,w,c
  5127  00176C  6EE1               	movwf	fsr1l,c
  5128  00176E  0E01               	movlw	high (_SCH_Task+11)
  5129  001770  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5130  001772  6EE2               	movwf	fsr1h,c
  5131  001774  0E0A               	movlw	10
  5132  001776                     i2u269_41:
  5133  001776  CFDB FFE3          	movff	plusw2,plusw1
  5134  00177A  06E8               	decf	wreg,f,c
  5135  00177C  E2FC               	bc	i2u269_41
  5136  00177E                     
  5137                           ;Sche.c: 110:             }
  5138  00177E  0618               	decf	update@t^0,f,c
  5139  001780  A0D8               	btfss	status,0,c
  5140  001782  0619               	decf	(update@t+1)^0,f,c
  5141  001784                     i2l3661:
  5142  001784  501C               	movf	update@j^0,w,c
  5143  001786  5C18               	subwf	update@t^0,w,c
  5144  001788  5019               	movf	(update@t+1)^0,w,c
  5145  00178A  0A80               	xorlw	128
  5146  00178C  6E0A               	movwf	??_update^0,c
  5147  00178E  501D               	movf	(update@j+1)^0,w,c
  5148  001790  0A80               	xorlw	128
  5149  001792  580A               	subwfb	??_update^0,w,c
  5150  001794  B0D8               	btfsc	status,0,c
  5151  001796  EFCF  F00B         	goto	i2u270_41
  5152  00179A  EFD1  F00B         	goto	i2u270_40
  5153  00179E                     i2u270_41:
  5154  00179E  EF9A  F00B         	goto	i2l3657
  5155  0017A2                     i2u270_40:
  5156  0017A2                     
  5157                           ;Sche.c: 111:             SCH_Task[j].delay = temp_2;
  5158  0017A2  C01C  F001         	movff	update@j,i2___wmul@multiplier
  5159  0017A6  C01D  F002         	movff	update@j+1,i2___wmul@multiplier+1
  5160  0017AA  0E00               	movlw	0
  5161  0017AC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5162  0017AE  0E0B               	movlw	11
  5163  0017B0  6E03               	movwf	i2___wmul@multiplicand^0,c
  5164  0017B2  EC46  F015         	call	i2___wmul	;wreg free
  5165  0017B6  0E00               	movlw	low _SCH_Task
  5166  0017B8  2401               	addwf	?i2___wmul^0,w,c
  5167  0017BA  6ED9               	movwf	fsr2l,c
  5168  0017BC  0E01               	movlw	high _SCH_Task
  5169  0017BE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5170  0017C0  6EDA               	movwf	fsr2h,c
  5171  0017C2  C016  FFDE         	movff	update@temp_2,postinc2
  5172  0017C6  C017  FFDD         	movff	update@temp_2+1,postdec2
  5173                           
  5174                           ;Sche.c: 112:             SCH_Task[j].period = temp_1;
  5175  0017CA  C01C  F001         	movff	update@j,i2___wmul@multiplier
  5176  0017CE  C01D  F002         	movff	update@j+1,i2___wmul@multiplier+1
  5177  0017D2  0E00               	movlw	0
  5178  0017D4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5179  0017D6  0E0B               	movlw	11
  5180  0017D8  6E03               	movwf	i2___wmul@multiplicand^0,c
  5181  0017DA  EC46  F015         	call	i2___wmul	;wreg free
  5182  0017DE  0E04               	movlw	low (_SCH_Task+4)
  5183  0017E0  2401               	addwf	?i2___wmul^0,w,c
  5184  0017E2  6ED9               	movwf	fsr2l,c
  5185  0017E4  0E01               	movlw	high (_SCH_Task+4)
  5186  0017E6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5187  0017E8  6EDA               	movwf	fsr2h,c
  5188  0017EA  C012  FFDE         	movff	update@temp_1,postinc2
  5189  0017EE  C013  FFDD         	movff	update@temp_1+1,postdec2
  5190                           
  5191                           ;Sche.c: 113:             SCH_Task[j].func_ptr = ptr_temp;
  5192  0017F2  C01C  F001         	movff	update@j,i2___wmul@multiplier
  5193  0017F6  C01D  F002         	movff	update@j+1,i2___wmul@multiplier+1
  5194  0017FA  0E00               	movlw	0
  5195  0017FC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5196  0017FE  0E0B               	movlw	11
  5197  001800  6E03               	movwf	i2___wmul@multiplicand^0,c
  5198  001802  EC46  F015         	call	i2___wmul	;wreg free
  5199  001806  0E08               	movlw	low (_SCH_Task+8)
  5200  001808  2401               	addwf	?i2___wmul^0,w,c
  5201  00180A  6ED9               	movwf	fsr2l,c
  5202  00180C  0E01               	movlw	high (_SCH_Task+8)
  5203  00180E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5204  001810  6EDA               	movwf	fsr2h,c
  5205  001812  C00F  FFDE         	movff	update@ptr_temp,postinc2
  5206  001816  C010  FFDE         	movff	update@ptr_temp+1,postinc2
  5207  00181A  C011  FFDE         	movff	update@ptr_temp+2,postinc2
  5208  00181E                     
  5209                           ;Sche.c: 114:             count++;
  5210  00181E  4A24               	infsnz	_count^0,f,c
  5211  001820  2A25               	incf	(_count+1)^0,f,c
  5212  001822                     
  5213                           ;Sche.c: 116:             if(SCH_Task[j+1].delay>0)
  5214  001822  C01C  F001         	movff	update@j,i2___wmul@multiplier
  5215  001826  C01D  F002         	movff	update@j+1,i2___wmul@multiplier+1
  5216  00182A  0E00               	movlw	0
  5217  00182C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5218  00182E  0E0B               	movlw	11
  5219  001830  6E03               	movwf	i2___wmul@multiplicand^0,c
  5220  001832  EC46  F015         	call	i2___wmul	;wreg free
  5221  001836  0E0B               	movlw	low (_SCH_Task+11)
  5222  001838  2401               	addwf	?i2___wmul^0,w,c
  5223  00183A  6ED9               	movwf	fsr2l,c
  5224  00183C  0E01               	movlw	high (_SCH_Task+11)
  5225  00183E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5226  001840  6EDA               	movwf	fsr2h,c
  5227  001842  0E01               	movlw	1
  5228  001844  BEDB               	btfsc	plusw2,7,c
  5229  001846  EF2E  F00C         	goto	i2u271_41
  5230  00184A  0E01               	movlw	1
  5231  00184C  50DB               	movf	plusw2,w,c
  5232  00184E  E108               	bnz	i2u271_40
  5233  001850  04DE               	decf	postinc2,w,c
  5234  001852  A0D8               	btfss	status,0,c
  5235  001854  EF2E  F00C         	goto	i2u271_41
  5236  001858  EF30  F00C         	goto	i2u271_40
  5237  00185C                     i2u271_41:
  5238  00185C  EF70  F00C         	goto	i2l3671
  5239  001860                     i2u271_40:
  5240  001860                     
  5241                           ;Sche.c: 117:             {;Sche.c: 118:                 SCH_Task[j+1].delay = SCH_Task[
      +                          j+1].delay-SCH_Task[j].delay;
  5242  001860  C01C  F001         	movff	update@j,i2___wmul@multiplier
  5243  001864  C01D  F002         	movff	update@j+1,i2___wmul@multiplier+1
  5244  001868  0E00               	movlw	0
  5245  00186A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5246  00186C  0E0B               	movlw	11
  5247  00186E  6E03               	movwf	i2___wmul@multiplicand^0,c
  5248  001870  EC46  F015         	call	i2___wmul	;wreg free
  5249  001874  0E00               	movlw	low _SCH_Task
  5250  001876  2401               	addwf	?i2___wmul^0,w,c
  5251  001878  6ED9               	movwf	fsr2l,c
  5252  00187A  0E01               	movlw	high _SCH_Task
  5253  00187C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5254  00187E  6EDA               	movwf	fsr2h,c
  5255  001880  CFDE F00A          	movff	postinc2,??_update
  5256  001884  CFDD F00B          	movff	postdec2,??_update+1
  5257  001888  C01C  F001         	movff	update@j,i2___wmul@multiplier
  5258  00188C  C01D  F002         	movff	update@j+1,i2___wmul@multiplier+1
  5259  001890  0E00               	movlw	0
  5260  001892  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5261  001894  0E0B               	movlw	11
  5262  001896  6E03               	movwf	i2___wmul@multiplicand^0,c
  5263  001898  EC46  F015         	call	i2___wmul	;wreg free
  5264  00189C  0E0B               	movlw	low (_SCH_Task+11)
  5265  00189E  2401               	addwf	?i2___wmul^0,w,c
  5266  0018A0  6ED9               	movwf	fsr2l,c
  5267  0018A2  0E01               	movlw	high (_SCH_Task+11)
  5268  0018A4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5269  0018A6  6EDA               	movwf	fsr2h,c
  5270  0018A8  CFDE F00C          	movff	postinc2,??_update+2
  5271  0018AC  CFDD F00D          	movff	postdec2,??_update+3
  5272  0018B0  500A               	movf	??_update^0,w,c
  5273  0018B2  5E0C               	subwf	(??_update+2)^0,f,c
  5274  0018B4  500B               	movf	(??_update+1)^0,w,c
  5275  0018B6  5A0D               	subwfb	(??_update+3)^0,f,c
  5276  0018B8  C01C  F001         	movff	update@j,i2___wmul@multiplier
  5277  0018BC  C01D  F002         	movff	update@j+1,i2___wmul@multiplier+1
  5278  0018C0  0E00               	movlw	0
  5279  0018C2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5280  0018C4  0E0B               	movlw	11
  5281  0018C6  6E03               	movwf	i2___wmul@multiplicand^0,c
  5282  0018C8  EC46  F015         	call	i2___wmul	;wreg free
  5283  0018CC  0E0B               	movlw	low (_SCH_Task+11)
  5284  0018CE  2401               	addwf	?i2___wmul^0,w,c
  5285  0018D0  6ED9               	movwf	fsr2l,c
  5286  0018D2  0E01               	movlw	high (_SCH_Task+11)
  5287  0018D4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5288  0018D6  6EDA               	movwf	fsr2h,c
  5289  0018D8  C00C  FFDE         	movff	??_update+2,postinc2
  5290  0018DC  C00D  FFDD         	movff	??_update+3,postdec2
  5291  0018E0                     i2l3671:
  5292                           
  5293                           ;Sche.c: 120:             i = 0;
  5294  0018E0  0E00               	movlw	0
  5295  0018E2  6E1B               	movwf	(update@i+1)^0,c
  5296  0018E4  0E00               	movlw	0
  5297  0018E6  6E1A               	movwf	update@i^0,c
  5298  0018E8                     i2l3673:
  5299                           
  5300                           ;Sche.c: 122:             index++;
  5301  0018E8  0100               	movlb	0	; () banked
  5302  0018EA  4B88               	infsnz	_index& (0+255),f,b
  5303  0018EC  2B89               	incf	(_index+1)& (0+255),f,b
  5304  0018EE                     i2l3675:
  5305                           
  5306                           ;Sche.c: 93:         while(SCH_Task[i].delay <= 0)
  5307  0018EE  C01A  F001         	movff	update@i,i2___wmul@multiplier
  5308  0018F2  C01B  F002         	movff	update@i+1,i2___wmul@multiplier+1
  5309  0018F6  0E00               	movlw	0
  5310  0018F8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5311  0018FA  0E0B               	movlw	11
  5312  0018FC  6E03               	movwf	i2___wmul@multiplicand^0,c
  5313  0018FE  EC46  F015         	call	i2___wmul	;wreg free
  5314  001902  0E00               	movlw	low _SCH_Task
  5315  001904  2401               	addwf	?i2___wmul^0,w,c
  5316  001906  6ED9               	movwf	fsr2l,c
  5317  001908  0E01               	movlw	high _SCH_Task
  5318  00190A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5319  00190C  6EDA               	movwf	fsr2h,c
  5320  00190E  0E01               	movlw	1
  5321  001910  BEDB               	btfsc	plusw2,7,c
  5322  001912  EF94  F00C         	goto	i2u272_41
  5323  001916  0E01               	movlw	1
  5324  001918  50DB               	movf	plusw2,w,c
  5325  00191A  E108               	bnz	i2u272_40
  5326  00191C  04DE               	decf	postinc2,w,c
  5327  00191E  A0D8               	btfss	status,0,c
  5328  001920  EF94  F00C         	goto	i2u272_41
  5329  001924  EF96  F00C         	goto	i2u272_40
  5330  001928                     i2u272_41:
  5331  001928  EFC9  F00A         	goto	i2l3629
  5332  00192C                     i2u272_40:
  5333  00192C                     i2l813:
  5334  00192C  0012               	return		;funcret
  5335  00192E                     __end_of_update:
  5336                           	opt callstack 0
  5337                           
  5338 ;; *************** function _remove *****************
  5339 ;; Defined at:
  5340 ;;		line 70 in file "Sche.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;  i               2    7[COMRAM] int 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;Total ram usage:        3 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    1
  5361 ;; This function calls:
  5362 ;;		i2___wmul
  5363 ;; This function is called by:
  5364 ;;		_update
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text29
  5369  001E16                     __ptext29:
  5370                           	opt callstack 0
  5371  001E16                     _remove:
  5372                           	opt callstack 21
  5373  001E16                     
  5374                           ;Sche.c: 71:         if(count == 0)
  5375  001E16  5024               	movf	_count^0,w,c
  5376  001E18  1025               	iorwf	(_count+1)^0,w,c
  5377  001E1A  A4D8               	btfss	status,2,c
  5378  001E1C  EF12  F00F         	goto	i2u211_41
  5379  001E20  EF14  F00F         	goto	i2u211_40
  5380  001E24                     i2u211_41:
  5381  001E24  EF16  F00F         	goto	i2l3307
  5382  001E28                     i2u211_40:
  5383  001E28  EFA7  F00F         	goto	i2l805
  5384  001E2C                     i2l3307:
  5385                           
  5386                           ;Sche.c: 74:         {;Sche.c: 75:             for(int i = 1; i<count;i++)
  5387  001E2C  0E00               	movlw	0
  5388  001E2E  6E09               	movwf	(remove@i+1)^0,c
  5389  001E30  0E01               	movlw	1
  5390  001E32  6E08               	movwf	remove@i^0,c
  5391  001E34  EF43  F00F         	goto	i2l3313
  5392  001E38                     i2l3309:
  5393                           
  5394                           ;Sche.c: 76:             {;Sche.c: 77:                  SCH_Task[i-1] = SCH_Task[i];
  5395  001E38  C008  F001         	movff	remove@i,i2___wmul@multiplier
  5396  001E3C  C009  F002         	movff	remove@i+1,i2___wmul@multiplier+1
  5397  001E40  0E00               	movlw	0
  5398  001E42  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5399  001E44  0E0B               	movlw	11
  5400  001E46  6E03               	movwf	i2___wmul@multiplicand^0,c
  5401  001E48  EC46  F015         	call	i2___wmul	;wreg free
  5402  001E4C  0E00               	movlw	low _SCH_Task
  5403  001E4E  2401               	addwf	?i2___wmul^0,w,c
  5404  001E50  6ED9               	movwf	fsr2l,c
  5405  001E52  0E01               	movlw	high _SCH_Task
  5406  001E54  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5407  001E56  6EDA               	movwf	fsr2h,c
  5408  001E58  C008  F001         	movff	remove@i,i2___wmul@multiplier
  5409  001E5C  C009  F002         	movff	remove@i+1,i2___wmul@multiplier+1
  5410  001E60  0E00               	movlw	0
  5411  001E62  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5412  001E64  0E0B               	movlw	11
  5413  001E66  6E03               	movwf	i2___wmul@multiplicand^0,c
  5414  001E68  EC46  F015         	call	i2___wmul	;wreg free
  5415  001E6C  0EF5               	movlw	low (_SCH_Task+65525)
  5416  001E6E  2401               	addwf	?i2___wmul^0,w,c
  5417  001E70  6EE1               	movwf	fsr1l,c
  5418  001E72  0E00               	movlw	high (_SCH_Task+65525)
  5419  001E74  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5420  001E76  6EE2               	movwf	fsr1h,c
  5421  001E78  0E0A               	movlw	10
  5422  001E7A                     i2u212_41:
  5423  001E7A  CFDB FFE3          	movff	plusw2,plusw1
  5424  001E7E  06E8               	decf	wreg,f,c
  5425  001E80  E2FC               	bc	i2u212_41
  5426  001E82                     
  5427                           ;Sche.c: 78:             }
  5428  001E82  4A08               	infsnz	remove@i^0,f,c
  5429  001E84  2A09               	incf	(remove@i+1)^0,f,c
  5430  001E86                     i2l3313:
  5431  001E86  5024               	movf	_count^0,w,c
  5432  001E88  5C08               	subwf	remove@i^0,w,c
  5433  001E8A  5009               	movf	(remove@i+1)^0,w,c
  5434  001E8C  0A80               	xorlw	128
  5435  001E8E  6E07               	movwf	??_remove^0,c
  5436  001E90  5025               	movf	(_count+1)^0,w,c
  5437  001E92  0A80               	xorlw	128
  5438  001E94  5807               	subwfb	??_remove^0,w,c
  5439  001E96  A0D8               	btfss	status,0,c
  5440  001E98  EF50  F00F         	goto	i2u213_41
  5441  001E9C  EF52  F00F         	goto	i2u213_40
  5442  001EA0                     i2u213_41:
  5443  001EA0  EF1C  F00F         	goto	i2l3309
  5444  001EA4                     i2u213_40:
  5445  001EA4                     
  5446                           ;Sche.c: 79:             SCH_Task[count-1].delay = -1;
  5447  001EA4  C024  F001         	movff	_count,i2___wmul@multiplier
  5448  001EA8  C025  F002         	movff	_count+1,i2___wmul@multiplier+1
  5449  001EAC  0E00               	movlw	0
  5450  001EAE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5451  001EB0  0E0B               	movlw	11
  5452  001EB2  6E03               	movwf	i2___wmul@multiplicand^0,c
  5453  001EB4  EC46  F015         	call	i2___wmul	;wreg free
  5454  001EB8  0EF5               	movlw	low (_SCH_Task+65525)
  5455  001EBA  2401               	addwf	?i2___wmul^0,w,c
  5456  001EBC  6ED9               	movwf	fsr2l,c
  5457  001EBE  0E00               	movlw	high (_SCH_Task+65525)
  5458  001EC0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5459  001EC2  6EDA               	movwf	fsr2h,c
  5460  001EC4  0EFF               	movlw	255
  5461  001EC6  6EDE               	movwf	postinc2,c
  5462  001EC8  0EFF               	movlw	255
  5463  001ECA  6EDD               	movwf	postdec2,c
  5464                           
  5465                           ;Sche.c: 80:             SCH_Task[count-1].period = 0;
  5466  001ECC  C024  F001         	movff	_count,i2___wmul@multiplier
  5467  001ED0  C025  F002         	movff	_count+1,i2___wmul@multiplier+1
  5468  001ED4  0E00               	movlw	0
  5469  001ED6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5470  001ED8  0E0B               	movlw	11
  5471  001EDA  6E03               	movwf	i2___wmul@multiplicand^0,c
  5472  001EDC  EC46  F015         	call	i2___wmul	;wreg free
  5473  001EE0  0EF9               	movlw	low (_SCH_Task+65529)
  5474  001EE2  2401               	addwf	?i2___wmul^0,w,c
  5475  001EE4  6ED9               	movwf	fsr2l,c
  5476  001EE6  0E00               	movlw	high (_SCH_Task+65529)
  5477  001EE8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5478  001EEA  6EDA               	movwf	fsr2h,c
  5479  001EEC  0E00               	movlw	0
  5480  001EEE  6EDE               	movwf	postinc2,c
  5481  001EF0  0E00               	movlw	0
  5482  001EF2  6EDD               	movwf	postdec2,c
  5483                           
  5484                           ;Sche.c: 81:             SCH_Task[count-1].runMe = 0;
  5485  001EF4  C024  F001         	movff	_count,i2___wmul@multiplier
  5486  001EF8  C025  F002         	movff	_count+1,i2___wmul@multiplier+1
  5487  001EFC  0E00               	movlw	0
  5488  001EFE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5489  001F00  0E0B               	movlw	11
  5490  001F02  6E03               	movwf	i2___wmul@multiplicand^0,c
  5491  001F04  EC46  F015         	call	i2___wmul	;wreg free
  5492  001F08  0EFB               	movlw	low (_SCH_Task+65531)
  5493  001F0A  2401               	addwf	?i2___wmul^0,w,c
  5494  001F0C  6ED9               	movwf	fsr2l,c
  5495  001F0E  0E00               	movlw	high (_SCH_Task+65531)
  5496  001F10  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5497  001F12  6EDA               	movwf	fsr2h,c
  5498  001F14  0E00               	movlw	0
  5499  001F16  6EDE               	movwf	postinc2,c
  5500  001F18  0E00               	movlw	0
  5501  001F1A  6EDD               	movwf	postdec2,c
  5502                           
  5503                           ;Sche.c: 82:             SCH_Task[count-1].func_ptr=((void*)0);
  5504  001F1C  C024  F001         	movff	_count,i2___wmul@multiplier
  5505  001F20  C025  F002         	movff	_count+1,i2___wmul@multiplier+1
  5506  001F24  0E00               	movlw	0
  5507  001F26  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5508  001F28  0E0B               	movlw	11
  5509  001F2A  6E03               	movwf	i2___wmul@multiplicand^0,c
  5510  001F2C  EC46  F015         	call	i2___wmul	;wreg free
  5511  001F30  0EFD               	movlw	low (_SCH_Task+65533)
  5512  001F32  2401               	addwf	?i2___wmul^0,w,c
  5513  001F34  6ED9               	movwf	fsr2l,c
  5514  001F36  0E00               	movlw	high (_SCH_Task+65533)
  5515  001F38  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5516  001F3A  6EDA               	movwf	fsr2h,c
  5517  001F3C  0E00               	movlw	0
  5518  001F3E  6EDE               	movwf	postinc2,c
  5519  001F40  0E00               	movlw	0
  5520  001F42  6EDE               	movwf	postinc2,c
  5521  001F44  0E00               	movlw	0
  5522  001F46  6EDE               	movwf	postinc2,c
  5523  001F48                     
  5524                           ;Sche.c: 83:             count--;
  5525  001F48  0624               	decf	_count^0,f,c
  5526  001F4A  A0D8               	btfss	status,0,c
  5527  001F4C  0625               	decf	(_count+1)^0,f,c
  5528  001F4E                     i2l805:
  5529  001F4E  0012               	return		;funcret
  5530  001F50                     __end_of_remove:
  5531                           	opt callstack 0
  5532                           
  5533 ;; *************** function i2___wmul *****************
  5534 ;; Defined at:
  5535 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  multiplier      2    0[COMRAM] unsigned int 
  5538 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  __wmul          2    4[COMRAM] unsigned int 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  2    0[COMRAM] unsigned int 
  5543 ;; Registers used:
  5544 ;;		wreg, status,2, status,0, prodl, prodh
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;Total ram usage:        6 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; This function calls:
  5557 ;;		Nothing
  5558 ;; This function is called by:
  5559 ;;		_remove
  5560 ;;		_update
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text30
  5565  002A8C                     __ptext30:
  5566                           	opt callstack 0
  5567  002A8C                     i2___wmul:
  5568                           	opt callstack 22
  5569  002A8C  5001               	movf	i2___wmul@multiplier^0,w,c
  5570  002A8E  0203               	mulwf	i2___wmul@multiplicand^0,c
  5571  002A90  CFF3 F005          	movff	prodl,i2___wmul@product
  5572  002A94  CFF4 F006          	movff	prodh,i2___wmul@product+1
  5573  002A98  5001               	movf	i2___wmul@multiplier^0,w,c
  5574  002A9A  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  5575  002A9C  50F3               	movf	243,w,c
  5576  002A9E  2606               	addwf	(i2___wmul@product+1)^0,f,c
  5577  002AA0  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  5578  002AA2  0203               	mulwf	i2___wmul@multiplicand^0,c
  5579  002AA4  50F3               	movf	243,w,c
  5580  002AA6  2606               	addwf	(i2___wmul@product+1)^0,f,c
  5581  002AA8  C005  F001         	movff	i2___wmul@product,?i2___wmul
  5582  002AAC  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  5583  002AB0  0012               	return		;funcret
  5584  002AB2                     __end_ofi2___wmul:
  5585                           	opt callstack 0
  5586                           
  5587 ;; *************** function _readButton2 *****************
  5588 ;; Defined at:
  5589 ;;		line 45 in file "BUTTON.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;		None
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;		None
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      void 
  5596 ;; Registers used:
  5597 ;;		wreg, status,2, status,0
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;Total ram usage:        1 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; This function calls:
  5610 ;;		Nothing
  5611 ;; This function is called by:
  5612 ;;		_tcInt
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text31
  5617  002176                     __ptext31:
  5618                           	opt callstack 0
  5619  002176                     _readButton2:
  5620                           	opt callstack 23
  5621  002176                     
  5622                           ;BUTTON.c: 47:     firstReadRA52 = secondReadRA52;
  5623  002176  C0B6  F02C         	movff	_secondReadRA52,_firstReadRA52
  5624  00217A  C0B7  F02D         	movff	_secondReadRA52+1,_firstReadRA52+1
  5625  00217E                     
  5626                           ;BUTTON.c: 48:     secondReadRA52 = PORTAbits.RA5;
  5627  00217E  BA80               	btfsc	128,5,c	;volatile
  5628  002180  EFC4  F010         	goto	i2u226_41
  5629  002184  EFC8  F010         	goto	i2u226_40
  5630  002188                     i2u226_41:
  5631  002188  6A01               	clrf	??_readButton2^0,c
  5632  00218A  2A01               	incf	??_readButton2^0,f,c
  5633  00218C  EFC9  F010         	goto	i2u226_48
  5634  002190                     i2u226_40:
  5635  002190  6A01               	clrf	??_readButton2^0,c
  5636  002192                     i2u226_48:
  5637  002192  5001               	movf	??_readButton2^0,w,c
  5638  002194  0100               	movlb	0	; () banked
  5639  002196  6FB6               	movwf	_secondReadRA52& (0+255),b
  5640  002198  6BB7               	clrf	(_secondReadRA52+1)& (0+255),b
  5641  00219A                     
  5642                           ; BSR set to: 0
  5643                           ;BUTTON.c: 49:     firstReadRB02 = secondReadRB02;
  5644  00219A  C0B4  F02A         	movff	_secondReadRB02,_firstReadRB02
  5645  00219E  C0B5  F02B         	movff	_secondReadRB02+1,_firstReadRB02+1
  5646                           
  5647                           ;BUTTON.c: 50:     secondReadRB02 = PORTBbits.RB0;
  5648  0021A2  B081               	btfsc	129,0,c	;volatile
  5649  0021A4  EFD6  F010         	goto	i2u227_41
  5650  0021A8  EFDA  F010         	goto	i2u227_40
  5651  0021AC                     i2u227_41:
  5652  0021AC  6A01               	clrf	??_readButton2^0,c
  5653  0021AE  2A01               	incf	??_readButton2^0,f,c
  5654  0021B0  EFDB  F010         	goto	i2u227_48
  5655  0021B4                     i2u227_40:
  5656  0021B4  6A01               	clrf	??_readButton2^0,c
  5657  0021B6                     i2u227_48:
  5658  0021B6  5001               	movf	??_readButton2^0,w,c
  5659  0021B8  0100               	movlb	0	; () banked
  5660  0021BA  6FB4               	movwf	_secondReadRB02& (0+255),b
  5661  0021BC  6BB5               	clrf	(_secondReadRB02+1)& (0+255),b
  5662  0021BE                     
  5663                           ; BSR set to: 0
  5664                           ;BUTTON.c: 51:     if (secondReadRB02 ==firstReadRB02 )
  5665  0021BE  502A               	movf	_firstReadRB02^0,w,c
  5666  0021C0  19B4               	xorwf	_secondReadRB02& (0+255),w,b
  5667  0021C2  E107               	bnz	i2u228_41
  5668  0021C4  502B               	movf	(_firstReadRB02+1)^0,w,c
  5669  0021C6  19B5               	xorwf	(_secondReadRB02+1)& (0+255),w,b
  5670  0021C8  A4D8               	btfss	status,2,c
  5671  0021CA  EFE9  F010         	goto	i2u228_41
  5672  0021CE  EFEB  F010         	goto	i2u228_40
  5673  0021D2                     i2u228_41:
  5674  0021D2  EF11  F011         	goto	i2l3375
  5675  0021D6                     i2u228_40:
  5676  0021D6                     
  5677                           ; BSR set to: 0
  5678                           ;BUTTON.c: 52:     {;BUTTON.c: 53:         if (firstReadRB02==0 && flagRB02==0 )
  5679  0021D6  502A               	movf	_firstReadRB02^0,w,c
  5680  0021D8  102B               	iorwf	(_firstReadRB02+1)^0,w,c
  5681  0021DA  A4D8               	btfss	status,2,c
  5682  0021DC  EFF2  F010         	goto	i2u229_41
  5683  0021E0  EFF4  F010         	goto	i2u229_40
  5684  0021E4                     i2u229_41:
  5685  0021E4  EF04  F011         	goto	i2l3371
  5686  0021E8                     i2u229_40:
  5687  0021E8                     
  5688                           ; BSR set to: 0
  5689  0021E8  503D               	movf	_flagRB02^0,w,c
  5690  0021EA  A4D8               	btfss	status,2,c
  5691  0021EC  EFFA  F010         	goto	i2u230_41
  5692  0021F0  EFFC  F010         	goto	i2u230_40
  5693  0021F4                     i2u230_41:
  5694  0021F4  EF04  F011         	goto	i2l3371
  5695  0021F8                     i2u230_40:
  5696  0021F8                     
  5697                           ; BSR set to: 0
  5698                           ;BUTTON.c: 54:         {;BUTTON.c: 55:             pressRB02 =1;
  5699  0021F8  0E00               	movlw	0
  5700  0021FA  6FB9               	movwf	(_pressRB02+1)& (0+255),b
  5701  0021FC  0E01               	movlw	1
  5702  0021FE  6FB8               	movwf	_pressRB02& (0+255),b
  5703                           
  5704                           ;BUTTON.c: 56:             flagRB02=1;
  5705  002200  0E01               	movlw	1
  5706  002202  6E3D               	movwf	_flagRB02^0,c
  5707                           
  5708                           ;BUTTON.c: 57:         }
  5709  002204  EF11  F011         	goto	i2l3375
  5710  002208                     i2l3371:
  5711                           
  5712                           ; BSR set to: 0
  5713  002208  042A               	decf	_firstReadRB02^0,w,c
  5714  00220A  102B               	iorwf	(_firstReadRB02+1)^0,w,c
  5715  00220C  A4D8               	btfss	status,2,c
  5716  00220E  EF0B  F011         	goto	i2u231_41
  5717  002212  EF0D  F011         	goto	i2u231_40
  5718  002216                     i2u231_41:
  5719  002216  EF11  F011         	goto	i2l3375
  5720  00221A                     i2u231_40:
  5721  00221A                     
  5722                           ; BSR set to: 0
  5723                           ;BUTTON.c: 59:             pressRB02 =0;
  5724  00221A  0E00               	movlw	0
  5725  00221C  6FB9               	movwf	(_pressRB02+1)& (0+255),b
  5726  00221E  0E00               	movlw	0
  5727  002220  6FB8               	movwf	_pressRB02& (0+255),b
  5728  002222                     i2l3375:
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;BUTTON.c: 63:     if (secondReadRA52 ==firstReadRA52 )
  5732  002222  502C               	movf	_firstReadRA52^0,w,c
  5733  002224  19B6               	xorwf	_secondReadRA52& (0+255),w,b
  5734  002226  E107               	bnz	i2u232_41
  5735  002228  502D               	movf	(_firstReadRA52+1)^0,w,c
  5736  00222A  19B7               	xorwf	(_secondReadRA52+1)& (0+255),w,b
  5737  00222C  A4D8               	btfss	status,2,c
  5738  00222E  EF1B  F011         	goto	i2u232_41
  5739  002232  EF1D  F011         	goto	i2u232_40
  5740  002236                     i2u232_41:
  5741  002236  EF43  F011         	goto	i2l123
  5742  00223A                     i2u232_40:
  5743  00223A                     
  5744                           ; BSR set to: 0
  5745                           ;BUTTON.c: 64:     {;BUTTON.c: 65:         if (firstReadRA52==0 && flagRA52==0)
  5746  00223A  502C               	movf	_firstReadRA52^0,w,c
  5747  00223C  102D               	iorwf	(_firstReadRA52+1)^0,w,c
  5748  00223E  A4D8               	btfss	status,2,c
  5749  002240  EF24  F011         	goto	i2u233_41
  5750  002244  EF26  F011         	goto	i2u233_40
  5751  002248                     i2u233_41:
  5752  002248  EF34  F011         	goto	i2l3383
  5753  00224C                     i2u233_40:
  5754  00224C                     
  5755                           ; BSR set to: 0
  5756  00224C  503E               	movf	_flagRA52^0,w,c
  5757  00224E  A4D8               	btfss	status,2,c
  5758  002250  EF2C  F011         	goto	i2u234_41
  5759  002254  EF2E  F011         	goto	i2u234_40
  5760  002258                     i2u234_41:
  5761  002258  EF34  F011         	goto	i2l3383
  5762  00225C                     i2u234_40:
  5763  00225C                     
  5764                           ; BSR set to: 0
  5765                           ;BUTTON.c: 66:         {;BUTTON.c: 67:             pressRA52 =1;
  5766  00225C  0E00               	movlw	0
  5767  00225E  6FBB               	movwf	(_pressRA52+1)& (0+255),b
  5768  002260  0E01               	movlw	1
  5769  002262  6FBA               	movwf	_pressRA52& (0+255),b
  5770                           
  5771                           ;BUTTON.c: 69:         }
  5772  002264  EF43  F011         	goto	i2l123
  5773  002268                     i2l3383:
  5774                           
  5775                           ; BSR set to: 0
  5776  002268  042C               	decf	_firstReadRA52^0,w,c
  5777  00226A  102D               	iorwf	(_firstReadRA52+1)^0,w,c
  5778  00226C  A4D8               	btfss	status,2,c
  5779  00226E  EF3B  F011         	goto	i2u235_41
  5780  002272  EF3D  F011         	goto	i2u235_40
  5781  002276                     i2u235_41:
  5782  002276  EF43  F011         	goto	i2l123
  5783  00227A                     i2u235_40:
  5784  00227A                     
  5785                           ; BSR set to: 0
  5786                           ;BUTTON.c: 71:             pressRA52 =0;
  5787  00227A  0E00               	movlw	0
  5788  00227C  6FBB               	movwf	(_pressRA52+1)& (0+255),b
  5789  00227E  0E00               	movlw	0
  5790  002280  6FBA               	movwf	_pressRA52& (0+255),b
  5791                           
  5792                           ;BUTTON.c: 72:             flagRA52 =0;
  5793  002282  0E00               	movlw	0
  5794  002284  6E3E               	movwf	_flagRA52^0,c
  5795  002286                     i2l123:
  5796                           
  5797                           ; BSR set to: 0
  5798  002286  0012               	return		;funcret
  5799  002288                     __end_of_readButton2:
  5800                           	opt callstack 0
  5801                           
  5802 ;; *************** function _readButton1 *****************
  5803 ;; Defined at:
  5804 ;;		line 3 in file "BUTTON.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;		None
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;		None
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      void 
  5811 ;; Registers used:
  5812 ;;		wreg, status,2, status,0
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;Total ram usage:        1 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; This function calls:
  5825 ;;		Nothing
  5826 ;; This function is called by:
  5827 ;;		_tcInt
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           	psect	text32
  5832  001CC8                     __ptext32:
  5833                           	opt callstack 0
  5834  001CC8                     _readButton1:
  5835                           	opt callstack 23
  5836  001CC8                     
  5837                           ;BUTTON.c: 5:     firstReadRA5 = secondReadRA5;
  5838  001CC8  C0BE  F030         	movff	_secondReadRA5,_firstReadRA5
  5839  001CCC  C0BF  F031         	movff	_secondReadRA5+1,_firstReadRA5+1
  5840  001CD0                     
  5841                           ;BUTTON.c: 6:     secondReadRA5 = PORTAbits.RA5;
  5842  001CD0  BA80               	btfsc	128,5,c	;volatile
  5843  001CD2  EF6D  F00E         	goto	i2u214_41
  5844  001CD6  EF71  F00E         	goto	i2u214_40
  5845  001CDA                     i2u214_41:
  5846  001CDA  6A01               	clrf	??_readButton1^0,c
  5847  001CDC  2A01               	incf	??_readButton1^0,f,c
  5848  001CDE  EF72  F00E         	goto	i2u214_48
  5849  001CE2                     i2u214_40:
  5850  001CE2  6A01               	clrf	??_readButton1^0,c
  5851  001CE4                     i2u214_48:
  5852  001CE4  5001               	movf	??_readButton1^0,w,c
  5853  001CE6  0100               	movlb	0	; () banked
  5854  001CE8  6FBE               	movwf	_secondReadRA5& (0+255),b
  5855  001CEA  6BBF               	clrf	(_secondReadRA5+1)& (0+255),b
  5856  001CEC                     
  5857                           ; BSR set to: 0
  5858                           ;BUTTON.c: 7:     firstReadRB0 = secondReadRB0;
  5859  001CEC  C0BC  F02E         	movff	_secondReadRB0,_firstReadRB0
  5860  001CF0  C0BD  F02F         	movff	_secondReadRB0+1,_firstReadRB0+1
  5861                           
  5862                           ;BUTTON.c: 8:     secondReadRB0 = PORTBbits.RB0;
  5863  001CF4  B081               	btfsc	129,0,c	;volatile
  5864  001CF6  EF7F  F00E         	goto	i2u215_41
  5865  001CFA  EF83  F00E         	goto	i2u215_40
  5866  001CFE                     i2u215_41:
  5867  001CFE  6A01               	clrf	??_readButton1^0,c
  5868  001D00  2A01               	incf	??_readButton1^0,f,c
  5869  001D02  EF84  F00E         	goto	i2u215_48
  5870  001D06                     i2u215_40:
  5871  001D06  6A01               	clrf	??_readButton1^0,c
  5872  001D08                     i2u215_48:
  5873  001D08  5001               	movf	??_readButton1^0,w,c
  5874  001D0A  0100               	movlb	0	; () banked
  5875  001D0C  6FBC               	movwf	_secondReadRB0& (0+255),b
  5876  001D0E  6BBD               	clrf	(_secondReadRB0+1)& (0+255),b
  5877  001D10                     
  5878                           ; BSR set to: 0
  5879                           ;BUTTON.c: 9:     if (secondReadRA5 ==firstReadRA5 )
  5880  001D10  5030               	movf	_firstReadRA5^0,w,c
  5881  001D12  19BE               	xorwf	_secondReadRA5& (0+255),w,b
  5882  001D14  E107               	bnz	i2u216_41
  5883  001D16  5031               	movf	(_firstReadRA5+1)^0,w,c
  5884  001D18  19BF               	xorwf	(_secondReadRA5+1)& (0+255),w,b
  5885  001D1A  A4D8               	btfss	status,2,c
  5886  001D1C  EF92  F00E         	goto	i2u216_41
  5887  001D20  EF94  F00E         	goto	i2u216_40
  5888  001D24                     i2u216_41:
  5889  001D24  EFBA  F00E         	goto	i2l3337
  5890  001D28                     i2u216_40:
  5891  001D28                     
  5892                           ; BSR set to: 0
  5893                           ;BUTTON.c: 10:     {;BUTTON.c: 11:         if (firstReadRA5==0 && flagRA5==0 )
  5894  001D28  5030               	movf	_firstReadRA5^0,w,c
  5895  001D2A  1031               	iorwf	(_firstReadRA5+1)^0,w,c
  5896  001D2C  A4D8               	btfss	status,2,c
  5897  001D2E  EF9B  F00E         	goto	i2u217_41
  5898  001D32  EF9D  F00E         	goto	i2u217_40
  5899  001D36                     i2u217_41:
  5900  001D36  EFAD  F00E         	goto	i2l3333
  5901  001D3A                     i2u217_40:
  5902  001D3A                     
  5903                           ; BSR set to: 0
  5904  001D3A  5040               	movf	_flagRA5^0,w,c
  5905  001D3C  A4D8               	btfss	status,2,c
  5906  001D3E  EFA3  F00E         	goto	i2u218_41
  5907  001D42  EFA5  F00E         	goto	i2u218_40
  5908  001D46                     i2u218_41:
  5909  001D46  EFAD  F00E         	goto	i2l3333
  5910  001D4A                     i2u218_40:
  5911  001D4A                     
  5912                           ; BSR set to: 0
  5913                           ;BUTTON.c: 12:         {;BUTTON.c: 13:             pressRA5 =1;
  5914  001D4A  0E00               	movlw	0
  5915  001D4C  6E33               	movwf	(_pressRA5+1)^0,c
  5916  001D4E  0E01               	movlw	1
  5917  001D50  6E32               	movwf	_pressRA5^0,c
  5918                           
  5919                           ;BUTTON.c: 14:             flagRA5=1;
  5920  001D52  0E01               	movlw	1
  5921  001D54  6E40               	movwf	_flagRA5^0,c
  5922                           
  5923                           ;BUTTON.c: 15:         }
  5924  001D56  EFBA  F00E         	goto	i2l3337
  5925  001D5A                     i2l3333:
  5926                           
  5927                           ; BSR set to: 0
  5928  001D5A  0430               	decf	_firstReadRA5^0,w,c
  5929  001D5C  1031               	iorwf	(_firstReadRA5+1)^0,w,c
  5930  001D5E  A4D8               	btfss	status,2,c
  5931  001D60  EFB4  F00E         	goto	i2u219_41
  5932  001D64  EFB6  F00E         	goto	i2u219_40
  5933  001D68                     i2u219_41:
  5934  001D68  EFBA  F00E         	goto	i2l3337
  5935  001D6C                     i2u219_40:
  5936  001D6C                     
  5937                           ; BSR set to: 0
  5938                           ;BUTTON.c: 17:             pressRA5 =0;
  5939  001D6C  0E00               	movlw	0
  5940  001D6E  6E33               	movwf	(_pressRA5+1)^0,c
  5941  001D70  0E00               	movlw	0
  5942  001D72  6E32               	movwf	_pressRA5^0,c
  5943  001D74                     i2l3337:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;BUTTON.c: 22:     if (secondReadRB0 ==firstReadRB0 )
  5947  001D74  502E               	movf	_firstReadRB0^0,w,c
  5948  001D76  19BC               	xorwf	_secondReadRB0& (0+255),w,b
  5949  001D78  E107               	bnz	i2u220_41
  5950  001D7A  502F               	movf	(_firstReadRB0+1)^0,w,c
  5951  001D7C  19BD               	xorwf	(_secondReadRB0+1)& (0+255),w,b
  5952  001D7E  A4D8               	btfss	status,2,c
  5953  001D80  EFC4  F00E         	goto	i2u220_41
  5954  001D84  EFC6  F00E         	goto	i2u220_40
  5955  001D88                     i2u220_41:
  5956  001D88  EF0A  F00F         	goto	i2l112
  5957  001D8C                     i2u220_40:
  5958  001D8C                     
  5959                           ; BSR set to: 0
  5960                           ;BUTTON.c: 23:     {;BUTTON.c: 24:         if (firstReadRB0==0)
  5961  001D8C  502E               	movf	_firstReadRB0^0,w,c
  5962  001D8E  102F               	iorwf	(_firstReadRB0+1)^0,w,c
  5963  001D90  A4D8               	btfss	status,2,c
  5964  001D92  EFCD  F00E         	goto	i2u221_41
  5965  001D96  EFCF  F00E         	goto	i2u221_40
  5966  001D9A                     i2u221_41:
  5967  001D9A  EFF7  F00E         	goto	i2l3353
  5968  001D9E                     i2u221_40:
  5969  001D9E                     
  5970                           ; BSR set to: 0
  5971                           ;BUTTON.c: 25:         {;BUTTON.c: 26:             if (flagRB0 == 0) {
  5972  001D9E  503F               	movf	_flagRB0^0,w,c
  5973  001DA0  A4D8               	btfss	status,2,c
  5974  001DA2  EFD5  F00E         	goto	i2u222_41
  5975  001DA6  EFD7  F00E         	goto	i2u222_40
  5976  001DAA                     i2u222_41:
  5977  001DAA  EFDB  F00E         	goto	i2l3345
  5978  001DAE                     i2u222_40:
  5979  001DAE                     
  5980                           ; BSR set to: 0
  5981                           ;BUTTON.c: 27:                 pressRB0 =1;
  5982  001DAE  0E00               	movlw	0
  5983  001DB0  6FC1               	movwf	(_pressRB0+1)& (0+255),b
  5984  001DB2  0E01               	movlw	1
  5985  001DB4  6FC0               	movwf	_pressRB0& (0+255),b
  5986  001DB6                     i2l3345:
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;BUTTON.c: 29:             if (flagRB0 == 1) {
  5990  001DB6  043F               	decf	_flagRB0^0,w,c
  5991  001DB8  A4D8               	btfss	status,2,c
  5992  001DBA  EFE1  F00E         	goto	i2u223_41
  5993  001DBE  EFE3  F00E         	goto	i2u223_40
  5994  001DC2                     i2u223_41:
  5995  001DC2  EFE5  F00E         	goto	i2l3349
  5996  001DC6                     i2u223_40:
  5997  001DC6                     
  5998                           ; BSR set to: 0
  5999                           ;BUTTON.c: 30:                 count_unit++;
  6000  001DC6  4B9C               	infsnz	_count_unit& (0+255),f,b
  6001  001DC8  2B9D               	incf	(_count_unit+1)& (0+255),f,b
  6002  001DCA                     i2l3349:
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;BUTTON.c: 32:             if(count_unit>100 )
  6006  001DCA  BF9D               	btfsc	(_count_unit+1)& (0+255),7,b
  6007  001DCC  EFF1  F00E         	goto	i2u224_41
  6008  001DD0  519D               	movf	(_count_unit+1)& (0+255),w,b
  6009  001DD2  E109               	bnz	i2u224_40
  6010  001DD4  0E65               	movlw	101
  6011  001DD6  5D9C               	subwf	_count_unit& (0+255),w,b
  6012  001DD8  A0D8               	btfss	status,0,c
  6013  001DDA  EFF1  F00E         	goto	i2u224_41
  6014  001DDE  EFF3  F00E         	goto	i2u224_40
  6015  001DE2                     i2u224_41:
  6016  001DE2  EF0A  F00F         	goto	i2l112
  6017  001DE6                     i2u224_40:
  6018  001DE6                     
  6019                           ; BSR set to: 0
  6020                           ;BUTTON.c: 33:             {;BUTTON.c: 34:                 count1A++;
  6021  001DE6  4BA2               	infsnz	_count1A& (0+255),f,b
  6022  001DE8  2BA3               	incf	(_count1A+1)& (0+255),f,b
  6023  001DEA  EF0A  F00F         	goto	i2l112
  6024  001DEE                     i2l3353:
  6025                           
  6026                           ; BSR set to: 0
  6027  001DEE  042E               	decf	_firstReadRB0^0,w,c
  6028  001DF0  102F               	iorwf	(_firstReadRB0+1)^0,w,c
  6029  001DF2  A4D8               	btfss	status,2,c
  6030  001DF4  EFFE  F00E         	goto	i2u225_41
  6031  001DF8  EF00  F00F         	goto	i2u225_40
  6032  001DFC                     i2u225_41:
  6033  001DFC  EF0A  F00F         	goto	i2l112
  6034  001E00                     i2u225_40:
  6035  001E00                     
  6036                           ; BSR set to: 0
  6037                           ;BUTTON.c: 38:             pressRB0 =0;
  6038  001E00  0E00               	movlw	0
  6039  001E02  6FC1               	movwf	(_pressRB0+1)& (0+255),b
  6040  001E04  0E00               	movlw	0
  6041  001E06  6FC0               	movwf	_pressRB0& (0+255),b
  6042                           
  6043                           ;BUTTON.c: 39:             flagRB0 =0;
  6044  001E08  0E00               	movlw	0
  6045  001E0A  6E3F               	movwf	_flagRB0^0,c
  6046                           
  6047                           ;BUTTON.c: 40:             count_unit = 0;
  6048  001E0C  0E00               	movlw	0
  6049  001E0E  6F9D               	movwf	(_count_unit+1)& (0+255),b
  6050  001E10  0E00               	movlw	0
  6051  001E12  6F9C               	movwf	_count_unit& (0+255),b
  6052  001E14                     i2l112:
  6053                           
  6054                           ; BSR set to: 0
  6055  001E14  0012               	return		;funcret
  6056  001E16                     __end_of_readButton1:
  6057                           	opt callstack 0
  6058                           
  6059                           	psect	text33
  6060  000000                     __ptext33:
  6061                           	opt callstack 0
  6062  000000                     
  6063                           	psect	rparam
  6064  0000                     
  6065                           	psect	temp
  6066  000046                     btemp:
  6067                           	opt callstack 0
  6068  000046                     	ds	1
  6069  0000                     int$flags	set	btemp
  6070  0000                     wtemp8	set	btemp+1
  6071  0000                     ttemp5	set	btemp+1
  6072  0000                     ttemp6	set	btemp+4
  6073  0000                     ttemp7	set	btemp+8
  6074                           tosu	equ	0xFFF
  6075                           tosh	equ	0xFFE
  6076                           tosl	equ	0xFFD
  6077                           stkptr	equ	0xFFC
  6078                           pclatu	equ	0xFFB
  6079                           pclath	equ	0xFFA
  6080                           pcl	equ	0xFF9
  6081                           tblptru	equ	0xFF8
  6082                           tblptrh	equ	0xFF7
  6083                           tblptrl	equ	0xFF6
  6084                           tablat	equ	0xFF5
  6085                           prodh	equ	0xFF4
  6086                           prodl	equ	0xFF3
  6087                           indf0	equ	0xFEF
  6088                           postinc0	equ	0xFEE
  6089                           postdec0	equ	0xFED
  6090                           preinc0	equ	0xFEC
  6091                           plusw0	equ	0xFEB
  6092                           fsr0h	equ	0xFEA
  6093                           fsr0l	equ	0xFE9
  6094                           wreg	equ	0xFE8
  6095                           indf1	equ	0xFE7
  6096                           postinc1	equ	0xFE6
  6097                           postdec1	equ	0xFE5
  6098                           preinc1	equ	0xFE4
  6099                           plusw1	equ	0xFE3
  6100                           fsr1h	equ	0xFE2
  6101                           fsr1l	equ	0xFE1
  6102                           bsr	equ	0xFE0
  6103                           indf2	equ	0xFDF
  6104                           postinc2	equ	0xFDE
  6105                           postdec2	equ	0xFDD
  6106                           preinc2	equ	0xFDC
  6107                           plusw2	equ	0xFDB
  6108                           fsr2h	equ	0xFDA
  6109                           fsr2l	equ	0xFD9
  6110                           status	equ	0xFD8


Data Sizes:
    Strings     57
    Constant    0
    Data        16
    BSS         252
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      69
    BANK0           160     30     154
    BANK1           256      0     110
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    dispatch@pFn	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), fan1(), fan3(), heatpump(), 
		 -> fan2(), heater(), DHT_Result(), 

    update@ptr_temp	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), fan1(), fan3(), heatpump(), 
		 -> fan2(), heater(), DHT_Result(), 

    ptr	PTR FTN()void [10] size(3) Largest target is 1
		 -> NULL(NULL[0]), fan1(), fan3(), heatpump(), 
		 -> fan2(), heater(), DHT_Result(), 

    insert@func_ptr	PTR FTN()void  size(3) Largest target is 1
		 -> fan1(), fan3(), heatpump(), fan2(), 
		 -> heater(), DHT_Result(), 

    S1204Node$func_ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), fan1(), fan3(), heatpump(), 
		 -> fan2(), heater(), DHT_Result(), 

    SCH_Task.func_ptr	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(NULL[0]), fan1(), fan3(), heatpump(), 
		 -> fan2(), heater(), DHT_Result(), 

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[8]), STR_5(CODE[12]), 
		 -> STR_4(CODE[10]), STR_3(CODE[12]), STR_2(CODE[10]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _tcInt in COMRAM

    _tcInt->_update
    _update->_remove
    _remove->i2___wmul

Critical Paths under _main in BANK0

    _main->_FSM
    _dispatch->_DHT_Result
    _DHT_Result->_LCDPutStr
    _DHT_Result->___awdiv
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _FSM->_insert
    _start->___wmul
    _insert->___awdiv
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _tcInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tcInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tcInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tcInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tcInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tcInt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tcInt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tcInt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _tcInt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _tcInt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _tcInt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _tcInt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _tcInt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _tcInt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _tcInt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _tcInt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   67412
                                _FSM
                            _LCDInit
                         _LCDPutInst
                                _PIN
                           _dispatch
                              _start
                                _tmr
 ---------------------------------------------------------------------------------
 (1) _tmr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispatch                                             8     8      0   17130
                                             10 BANK0      8     8      0
                         _DHT_Result *
                             ___wmul
                               _fan1 *
                               _fan2 *
                               _fan3 *
                             _heater *
                           _heatpump *
 ---------------------------------------------------------------------------------
 (2) _heatpump                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _heater                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _fan3                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _fan2                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _fan1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DHT_Result                                           2     2      0    8843
                                              8 BANK0      2     2      0
                          _DHT_Check
                           _DHT_Init
                       _DHT_ReadData
                         _LCDPutChar
                         _LCDPutInst
                          _LCDPutStr
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _DHT_ReadData                                         6     6      0     238
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) _DHT_Init                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _DHT_Check                                            2     2      0     111
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _PIN                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              1     1      0    2418
                                              6 BANK0      1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) _Port_BBSPIInit                                       1     1      0     235
                                              3 BANK0      1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (2) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FSM                                                  5     5      0   38442
                                             25 BANK0      5     5      0
                         _LCDPutChar
                         _LCDPutInst
                          _LCDPutStr
                            ___awdiv
                            ___awmod
                             ___wmul
                             _insert
                              _start
 ---------------------------------------------------------------------------------
 (1) _start                                                2     2      0    8315
                                              6 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _insert                                              17    10      7   13290
                                              8 BANK0     17    10      7
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    8092
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2785
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1513
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _LCDPutStr                                            2     0      2    1982
                                              6 BANK0      2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (4) _LCDPutChar                                           1     1      0    1107
                                              5 BANK0      1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _LCDPutInst                                           1     1      0    1107
                                              5 BANK0      1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (5) _WritePort_BBSPI                                      2     1      1    1076
                                              3 BANK0      2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (6) _SendByteBBSPI                                        3     3      0     204
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _tcInt                                                6     6      0    3467
                                             29 COMRAM     6     6      0
                        _readButton1
                        _readButton2
                             _update
 ---------------------------------------------------------------------------------
 (8) _update                                              20    20      0    3467
                                              9 COMRAM    20    20      0
                             _remove
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) _remove                                               3     3      0    1475
                                              6 COMRAM     3     3      0
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4    1407
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _readButton2                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _readButton1                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FSM
     _LCDPutChar
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
     ___awdiv
     ___awmod
     ___wmul
     _insert
       ___awdiv
       ___wmul
     _start
       ___wmul
   _LCDInit
     _InitBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _Port_BBSPIInit
       _SendByteBBSPI
     _WritePort_BBSPI
       _SendByteBBSPI
   _LCDPutInst
     _WritePort_BBSPI
       _SendByteBBSPI
   _PIN
   _dispatch
     _DHT_Result *
       _DHT_Check
       _DHT_Init
       _DHT_ReadData
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
       ___awdiv
       ___awmod
     ___wmul *
     _fan1 *
     _fan2 *
     _fan3 *
     _heater *
     _heatpump *
   _start
     ___wmul
   _tmr

 _tcInt (ROOT)
   _readButton1
   _readButton2
   _update
     _remove
       i2___wmul
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      6E       7       43.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      9A       5       96.3%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      45       1       73.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14D      32        0.0%
DATA                 0      0     14D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 01:21:09 2019

             _RH_Integral 0037                         _A 00B2                         _B 00F2  
             ?_LCDPutChar 0001              ___awdiv@sign 00D5               ?_LCDPutInst 0001  
                      _hr 00CE       ___wmul@multiplicand 00D2     SendByteBBSPI@bitcount 00D1  
                     l425 11D6                       l610 2B3C                       l436 1534  
                     l613 27BA                       l622 2B12                       l615 27CE  
                     l631 293A                       l607 287A                       l616 27D0  
                     l625 2AF4                       l561 2B2A                       l619 2814  
                     l628 28FA                       l637 28BA                       l565 2A64  
                     l573 2A3E                       l569 2A8A                       l577 2A18  
                     l773 2970                       l845 2062                       l790 1CC6  
                     l786 2174                       _FSM 103C                       _PIN 293C  
                     _Sum 003B                       _min 00CC                       _sec 00CA  
                     _ptr 0060                       _tmr 29A0              ___awmod@sign 00D5  
                     tosl 000FFD                       wreg 000FE8           __end_of_LCDInit 287C  
            __CFG_LVP$OFF 000000                      ?_FSM 0001               dispatch@pFn 00DD  
                    ?_PIN 0001            ??_DHT_ReadData 00D0              __CFG_WDT$OFF 000000  
                    l1109 29CA                      l1240 266C                      l1232 2AD4  
                    l1235 2636                      l1244 26A2                      l1252 23C6  
                    l1501 2558                      l1270 29F2                      l1238 26B0  
                    l1255 2492                      l4001 24F8                      l1514 260A  
                    l1266 2390                      l4011 252C                      l4003 2506  
                    l1259 2470                      l4013 2532                      l4005 250C  
                    l4101 1BCC                      l4031 257A                      l4023 255A  
                    l4007 2522                      l4015 2538                      l4103 1BFC  
                    l4111 2064                      l4041 25B2                      l4033 2588  
                    l4025 2560                      l4017 2548                      l4009 252A  
                    l4105 1C00                      l4121 2158                      l4201 1062  
                    l4043 25C0                      l4051 25EA                      l4035 2590  
                    l4027 256E                      l4019 2550                      l4107 1C40  
                    l4211 10B0                      l4203 1070                      l4123 2B14  
                    l4131 2A52                      l4053 25FA                      l4045 25D6  
                    l4037 25A2                      l4029 2576                      l4117 207E  
                    l4301 13F0                      l4221 1108                      l4213 10C2  
                    l4205 107A                      l4133 2A66                      l4125 2B18  
                    l4141 29F4                      l4055 2602                      l4047 25DE  
                    l4039 25AA                      l4071 19C8                      l4063 1946  
                    l4119 2154                      l4311 1494                      l4303 1414  
                    l4231 1158                      l4223 1128                      l4215 10D4  
                    l4207 108C                      l4135 2A78                      l4151 2296  
                    l4143 2A06                      l4049 25E4                      l4081 19EA  
                    l4065 1958                      l4321 14D0                      l4313 14A0  
                    l4305 1438                      l4241 11BA                      l4233 1168  
                    l4225 112E                      l4217 10E2                      l4209 109C  
                    l4161 22B4                      l4153 229C                      l4145 2288  
                    l4129 2A40                      l4137 2A1A                      l4401 29A6  
                    l4091 1AAE                      l4083 1A38                      l4067 19B2  
                    l4059 192E                      l4323 14E0                      l4315 14AE  
                    l4307 145E                      l4251 1212                      l4243 11CE  
                    l4235 1174                      l4227 113C                      l4219 10E8  
                    l4171 22FE                      l4155 22A2                      l4147 228C  
                    l4139 2A2C                      l4411 29B6                      l4403 29AE  
                    l4093 1AD8                      l4085 1A3E                      l4069 19BC  
                    l4077 19D0                      l4325 14F0                      l4317 14B4  
                    l4309 1482                      l4261 1264                      l4253 1224  
                    l4237 117A                      l4245 11DA                      l4229 1146  
                    l4341 281E                      l4173 231C                      l4157 22A8  
                    l4149 2290                      l4405 29B0                      l4095 1ADC  
                    l4087 1A4C                      l4079 19DA                      l4319 14BE  
                    l4263 1284                      l4255 1230                      l4271 12A6  
                    l4247 11EC                      l4239 119A                      l4191 103C  
                    l4183 2B2C                      l4351 284A                      l4343 2830  
                    l4335 2816                      l4175 233A                      l4167 22EA  
                    l4159 22AE                      l4407 29B2                      l4097 1AFA  
                    l4089 1AA2                      l4281 12F6                      l4273 12B8  
                    l4265 128A                      l4257 123E                      l4249 11FC  
                    l4193 1040                      l4329 14F8                      l4185 2AFA  
                    l4361 2874                      l4353 285C                      l4345 2832  
                    l4337 281A                      l4177 2340                      l4169 22F0  
                    l4409 29B4                      l4099 1BC2                      l4291 135C  
                    l4283 1316                      l4275 12C8                      l4267 1298  
                    l4259 1244                      l4195 1052                      l4187 2AFC  
                    l4355 2862                      l4347 2838                      l4339 281C  
                    l4179 2346                      l4451 2972                      l3901 2894  
                    l4293 136E                      l4285 1336                      l4277 12E8  
                    l4269 129C                      l4197 1056                      l4189 2B10  
                    l4357 2868                      l4349 283E                      l4381 294C  
                    l4373 293C                      l4461 2986                      l4453 2976  
                    l3903 289A                      l4295 138A                      l4279 12F0  
                    l4287 133A                      l4199 105C                      l4359 286E  
                    l4383 2966                      l4375 2940                      l3911 2AD2  
                    l4391 1FDC                      l4463 298C                      l4455 297A  
                    l3841 27EE                      l3833 27C8                      l3825 27B0  
                    l4297 13AC                      l4289 134C                      l4377 2948  
                    l3921 2644                      l3913 260C                      l3905 2AB2  
                    l4393 200C                      l4385 1F50                      l4465 2990  
                    l4457 297E                      l3851 27F8                      l3843 27F0  
                    l3835 27DE                      l3827 27B4                      l4299 13CE  
                    l4379 294A                      l3931 2686                      l3923 2650  
                    l3915 261A                      l3907 2AB6                      l4387 1F5E  
                    l4395 2010                      l4467 2994                      l4459 2982  
                    l3853 27FA                      l3845 27F2                      l3837 27E6  
                    l3861 2ADC                      l3917 2632                      l3909 2AC8  
                    l4397 202C                      l4389 1FC2                      l3855 2802  
                    l3847 27F4                      l3839 27EC                      l3863 2AF2  
                    l3871 28D4                      l3951 23DC                      l3943 23A8  
                    l4399 29A0                      l3857 2804                      l3849 27F6  
                    l3881 2900                      l3873 28DE                      l3865 28C0  
                    l4489 150E                      l3929 267A                      l3953 2402  
                    l3945 23C0                      l3937 2392                      l3859 2ADA  
                    l3891 2920                      l3883 2906                      l3875 28E0  
                    l3867 28C6                      l3955 2428                      l3893 292C  
                    l3885 2912                      l3877 28EC                      l3869 28D2  
                    l3981 249A                      l3973 29CC                      l3957 2448  
                    l3965 247E                      l3949 23D4                      l3895 292E  
                    l3887 2914                      l3879 28EE                      l3991 24CA  
                    l3983 24A8                      l3975 29EA                      l3967 2480  
                    l3959 2454                      l3889 291E                      l3897 287C  
                    l3993 24CE                      l3985 24B0                      l3969 2490  
                    l3899 2880                      l3995 24D6                      l3987 24B4  
                    l3979 2494                      l3997 24E8                      l3989 24C2  
                    l3999 24F0                      ?_tmr 0001                      STR_1 100D  
                    STR_2 1022                      STR_3 1001                      STR_4 1018  
                    STR_5 1001                      STR_6 102C                      STR_7 1037  
                    STR_8 1034                      u3000 26B0                      u3001 26AC  
                    u3010 23C0                      u3011 23BC                      u3100 2490  
                    u3020 23D4                      u3101 248C                      u3021 23D0  
                    _LATA 000F89                      u3110 24A8                      u3030 23EC  
                    _LATB 000F8A                      u3111 24A4                      u3031 23E6  
                    _LATC 000F8B                      u3200 25C0                      u3120 24C2  
                    u3040 23EE                      _LATD 000F8C                      u3201 25BC  
                    u3121 24BE                      u3210 25D6                      u3130 24E8  
                    u3050 2402                      u3211 25D2                      u3131 24E4  
                    u3051 23FE                      u3220 25FA                      u3140 2506  
                    u3300 2174                      u3221 25F6                      u3141 2502  
                    u3301 2170                      u3150 2522                      u3230 1942  
                    u3310 2B28                      u3151 251E                      u3231 193E  
                    u3311 2B22                      u3160 2548                      u3240 1958  
                    u3080 246C                      u3064 2416                      u3400 2A3C  
                    u3161 2544                      u3241 1954                      u3081 2468  
                    u3065 2412                      u3401 2A36                      u3170 256E  
                    u3090 247E                      u3074 243C                      u3330 2A52  
                    u3171 256A                      u3251 1A30                      u3091 247A  
                    u3075 2438                      u3331 2A4E                      u3180 2588  
                    u3260 1A4C                      u3500 1158                      u3340 2A62  
                    u3420 2A06                      u3181 2584                      u3261 1A48  
                    u3501 1154                      u3325 2B2A                      u3341 2A5C  
                    u3421 2A02                      u3190 25A2                      u3270 1AA2  
                    u3510 1168                      u3430 2A16                      u3191 259E  
                    u3271 1A9E                      u3511 1164                      u3415 2A3E  
                    u3431 2A10                      u3280 1AFA                      u3600 135C  
                    u3520 11CE                      u3360 2A78                      u3281 1AF6  
                    u3601 1358                      u3521 11CA                      u3361 2A74  
                    u3290 1C40                      u3610 145E                      u3530 11EC  
                    u3370 2A88                      u3450 22E6                      u3291 1C3C  
                    u3611 145A                      u3531 11E8                      u3371 2A82  
                    u3451 22E2                      u3355 2A64                      u3620 1494  
                    u3540 11FC                      u3460 1052                      u3621 1490  
                    u3541 11F8                      u3461 104E                      u3445 2A18  
                    u2910 27C8                      u3630 14D0                      u3550 1224  
                    u3470 108C                      u3390 2A2C                      u2911 27C4  
                    u3631 14CC                      u3551 1220                      u3471 1088  
                    u3391 2A28                      u2920 27DE                      u3640 14E0  
                    u3560 12B8                      u3480 109C                      u2921 27DA  
                    u3641 14DC                      u3561 12B4                      u3481 1098  
                    u3385 2A8A                      u2930 2814                      u3570 12C8  
                    u3490 10C2                      u2931 2810                      u3571 12C4  
                    u3491 10BE                      u2940 28BA                      u3580 12E8  
                    u3660 1FC2                      u2941 28B6                      u3581 12E4  
                    u3661 1FBE                      u3590 134C                      u2950 2632  
                    u3591 1348                      u3807 2852                      u2951 262E  
                    u2960 2644                      u3680 202C                      u3817 28C2  
                    u2961 2640                      u3681 2028                      u2970 2668  
                    u3690 2062                      u3827 2902                      u2971 2664  
                    u3691 205E                      u2980 267A                      u2981 2676  
                    u2990 269E                      u3678 1FC8                      u2991 269A  
                    u3767 23D6                      u3679 1FDC                      u3777 2ABE  
                    u3787 2ACC                      u3797 2826                      _TMR0 000FD6  
      __size_of_DHT_Check 00A6                      _Temp 0028              _stateprocess 00AE  
                    _fan1 29F4                      _fan2 2A40                      _fan3 2A1A  
                    _khac 00C8                      _main 2972                      fsr1h 000FE2  
                    fsr2h 000FDA                      fsr1l 000FE1                      fsr2l 000FD9  
                    btemp 0046             DHT_ReadData@i 00D5          ?_WritePort_BBSPI 00D3  
                    prodh 000FF4                      prodl 000FF3                      start 000E  
      __size_of_LCDPutStr 0040             __CFG_IESO$OFF 000000             __CFG_MCLRE$ON 000000  
            ___param_bank 000000                     ??_FSM 00E9                     ??_PIN 00D0  
        __end_of_DHT_Init 2AD6                     ??_tmr 00D0              ?_readButton1 0001  
            ?_readButton2 0001                     ?_fan1 0001                     ?_fan2 0001  
                   ?_fan3 0001                     ?_main 0001           __end_of___awdiv 255A  
         __end_of___awmod 260C           ___awdiv@divisor 00D2                     _LATD0 007C60  
                   _LATD1 007C61                     _LATD2 007C62                     _LATD3 007C63  
                   _LATD4 007C64                     i2l112 1E14                     i2l123 2286  
                   i2l805 1F4E                     i2l813 192C           ___awdiv@counter 00D4  
                   i2l996 2722                     _TANSO 00EE                     _PORTD 000F83  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISC 000F94  
                   _TRISD 000F95             __CFG_PWRT$OFF 000000             _firstReadRB02 002A  
           _firstReadRA52 002C                     _Humid 0026            __CFG_FCMEN$OFF 000000  
 __size_of_Port_BBSPIInit 001E            _secondReadRB02 00B4            _secondReadRA52 00B6  
     __size_of_DHT_Result 010A                     _count 0024                     _tcInt 0008  
                   _index 0088                _T_Integral 0035                     _reset 00F8  
                   _value 007E                     _start 2064            __CFG_BOREN$OFF 000000  
                   pclath 000FFA                     tablat 000FF5              update@temp_1 0012  
            update@temp_2 0016       __size_of_LCDPutChar 0040          __end_ofi2___wmul 2AB2  
                   plusw1 000FE3                     plusw2 000FDB       __size_of_LCDPutInst 0040  
                   ttemp5 0047                     ttemp6 004A                     ttemp7 004E  
                   status 000FD8                     wtemp8 0047           __initialization 273E  
            __end_of_fan1 2A1A              __end_of_fan2 2A66              __end_of_fan3 2A40  
            __end_of_main 29A0         __end_of_DHT_Check 26B2                    ??_fan1 00D0  
                  ??_fan2 00D0                    ??_fan3 00D0                    ??_main 00EE  
           __activetblptr 000003                 ??_LCDInit 00D6              LCDPutChar@ch 00D5  
                  FSM@lol 00EC         __end_of_LCDPutStr 28BC                    _ADCON1 000FC1  
                  ?_tcInt 0001        __size_of_InitBBSPI 0012            insert@func_ptr 00DC  
        ___awdiv@dividend 00D0              LCDPutInst@ch 00D5         _temperature_dht11 008C  
                  ?_start 0001                    i2l1270 2AB0                    i2l3125 2A8C  
                  i2l3301 1E16                    i2l3127 2AA8                    i2l3311 1E82  
                  i2l3321 1CD0                    i2l3313 1E86                    i2l3331 1D4A  
                  i2l3323 1CEC                    i2l3315 1EA4                    i2l3307 1E2C  
                  i2l3341 1D9E                    i2l3333 1D5A                    i2l3325 1D10  
                  i2l3317 1F48                    i2l3309 1E38                    i2l3351 1DE6  
                  i2l3343 1DAE                    i2l3335 1D6C                    i2l3327 1D28  
                  i2l3319 1CC8                    i2l3345 1DB6                    i2l3353 1DEE  
                  i2l3329 1D3A                    i2l3337 1D74                    i2l3361 219A  
                  i2l3355 1E00                    i2l3347 1DC6                    i2l3339 1D8C  
                  i2l3371 2208                    i2l3363 21BE                    i2l3349 1DCA  
                  i2l3381 225C                    i2l3373 221A                    i2l3365 21D6  
                  i2l3357 2176                    i2l3621 1536                    i2l3383 2268  
                  i2l3367 21E8                    i2l3375 2222                    i2l3359 217E  
                  i2l3631 15DE                    i2l3623 1548                    i2l3385 227A  
                  i2l3377 223A                    i2l3369 21F8                    i2l3641 165E  
                  i2l3633 15DE                    i2l3379 224C                    i2l3651 16B0  
                  i2l3643 1670                    i2l3635 1606                    i2l3627 1568  
                  i2l3661 1784                    i2l3653 16E6                    i2l3645 167C  
                  i2l3637 162E                    i2l3629 1592                    i2l3671 18E0  
                  i2l3663 17A2                    i2l3655 1724                    i2l3647 16A4  
                  i2l3639 165A                    i2l3665 181E                    i2l3657 1734  
                  i2l3649 16AC                    i2l3673 18E8                    i2l3667 1822  
                  i2l3659 177E                    i2l3675 18EE                    i2l3771 26CC  
                  i2l3669 1860                    i2l3781 270C                    i2l3773 26DA  
                  i2l3783 2714                    i2l3775 26E8                    i2l3785 271E  
                  i2l3777 26F2                    i2l3779 26F8              LCDPutStr@ptr 00D6  
          __CFG_XINST$OFF 000000          __end_of_heatpump 2A8C          __end_of_dispatch 2064  
                  ___wmul 29CC                 ??___awdiv 00D4                 ??___awmod 00D4  
                  _heater 2B14      __end_of_DHT_ReadData 2494                    _insert 192E  
                  clear_0 2784                    clear_1 2790                    clear_2 279C  
        ___awdiv@quotient 00D6           ___awmod@divisor 00D2                    _remove 1E16  
         ___awmod@counter 00D4                    _update 1536              __pdataCOMRAM 0042  
  Port_BBSPIInit@port_dir 00D3              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                    start@i 00D6  
               ?_DHT_Init 0001                __accesstop 0060   __end_of__initialization 27A2  
           ___rparam_used 000001    __size_of_SendByteBBSPI 006A              ??_DHT_Result 00D8  
          __pcstackCOMRAM 0001               insert@delay 00D8              __pidataBANK0 2B3E  
       __end_of_InitBBSPI 2B3E             __end_of_tcInt 273E              ??_LCDPutChar 00D5  
            ??_LCDPutInst 00D5             __end_of_start 2176      __size_of_readButton1 014E  
    __size_of_readButton2 0112                 ?i2___wmul 0001            _Port_BBSPIInit 2AF6  
                 ??_tcInt 001E        __end_of_DHT_Result 2392                   ??_start 00D6  
              __pbssBANK0 0060                __pbssBANK1 0100                ??_DHT_Init 00D0  
      __end_of_LCDPutChar 28FC        __end_of_LCDPutInst 293C                   ?___wmul 00D0  
              _blink_flag 00AA                   ?_heater 0001                   ?_insert 00D8  
                 ?_remove 0001                   ?_update 0001                _flagcount1 00A6  
              ??i2___wmul 0005    __end_of_Port_BBSPIInit 2B14                   _LCDInit 2816  
           _SendByteBBSPI 27AC                 ?_heatpump 0001           _stopwatch_count 00C6  
               ?_dispatch 0001          WritePort_BBSPI@a 00D3                _countInter 009A  
              _count_unit 009C                   __Hparam 0000     __size_of_DHT_ReadData 0102  
                 __Lparam 0000                   ___awdiv 2494                   ___awmod 255A  
         __size_of___wmul 0028  __size_of_WritePort_BBSPI 0020              __psmallconst 1000  
         __size_of_heater 0018                   __pcinit 273E                   _flagRB0 003F  
                 _flagRA5 0040           __size_of_insert 039A                   __ramtop 1000  
         __size_of_remove 013A                   __ptext0 2972                   __ptext1 29A0  
                 __ptext2 1F50                   __ptext3 29F4                   __ptext4 2A1A  
                 __ptext5 2A40                   __ptext6 2B14                   __ptext7 2288  
                 __ptext8 2A66                   __ptext9 2392           __size_of_update 03F8  
               _T0CONbits 000FD5                   _count1A 00A2                   _count2A 009E  
            __size_of_FSM 04FA              __size_of_PIN 0036            ?_SendByteBBSPI 0001  
         ?_Port_BBSPIInit 0001              __size_of_tmr 002C                   _maxhumi 0042  
               _DHT_Check 260C                   _maxtemp 0044          ___awmod@dividend 00D0  
                 fp__fan1 0000                   fp__fan2 0000                   fp__fan3 0000  
                 _state1A 00A0                ??_heatpump 00D0                 _LCDPutStr 287C  
              ??_dispatch 00DA            __pintcode_body 26B2      end_of_initialization 27A2  
            _DHT_ReadData 2392                   int_func 26B2       i2___wmul@multiplier 0001  
                 insert@i 00E7                   insert@j 00E5                   remove@i 0008  
                 postdec1 000FE5                   postdec2 000FDD                   update@i 001A  
                 update@j 001C                   update@t 0018                   postinc0 000FEE  
                 postinc1 000FE6                   postinc2 000FDE            update@ptr_temp 000F  
           fp__DHT_Result 0000                 _PORTAbits 000F80                 _PORTBbits 000F81  
               _PORTCbits 000F82                ?_DHT_Check 0001                 _TRISAbits 000F92  
               _TRISBbits 000F93                 _TRISCbits 000F94                 _TRISFbits 000F97  
              ?_LCDPutStr 00D6                _statepress 003C       SendByteBBSPI@output 00D0  
       __size_of_DHT_Init 0024                 _T_Decimal 0036              insert@period 00DA  
          __end_of___wmul 29F4             __pidataCOMRAM 2B4A              _firstReadRB0 002E  
            _firstReadRA5 0030            __end_of_heater 2B2C           ??_SendByteBBSPI 00D0  
           _secondReadRB0 00BC             _secondReadRA5 00BE            __end_of_insert 1CC8  
               _InitBBSPI 2B2C            __end_of_remove 1F50          i2___wmul@product 0005  
          __end_of_update 192E         ??_WritePort_BBSPI 00D4       start_initialization 273E  
             __end_of_FSM 1536         __size_ofi2___wmul 0026               __end_of_PIN 2972  
             __end_of_tmr 29CC          __CFG_OSC$INTIO67 000000                  ??___wmul 00D4  
                ??_heater 00D0               __pdataBANK0 00EE             ??_readButton1 0001  
           ??_readButton2 0001                  ??_insert 00DF                  ??_remove 0007  
                ??_update 000A                ?_InitBBSPI 0001                  ?_LCDInit 0001  
             ??_DHT_Check 00D0               __pbssCOMRAM 0024             __pcstackBANK0 00D0  
              insert@time 00E3               ??_LCDPutStr 00D8         __size_of_heatpump 0026  
       __size_of_dispatch 0114       DHT_ReadData@timeOut 00D3                 __pintcode 0008  
                ?___awdiv 00D0                  ?___awmod 00D0          ??_Port_BBSPIInit 00D3  
               _flagcount 00A8               _blink_count 00AC               __smallconst 1000  
     __end_of_readButton1 1E16       __end_of_readButton2 2288                 _lastHumid 008E  
               _cur_state 00B0            __size_of_tcInt 2736            __size_of_start 0112  
        DHT_Check@timeOut 00D0                  _DHT_Init 2AB2            ___wmul@product 00D4  
                _LATAbits 000F89                  _LATCbits 000F8B                  _LATFbits 000F8E  
                i2u211_40 1E28                  i2u211_41 1E24                  i2u220_40 1D8C  
                i2u220_41 1D88                  i2u212_41 1E7A                  i2u221_40 1D9E  
                i2u213_40 1EA4                  i2u221_41 1D9A                  i2u213_41 1EA0  
                i2u222_40 1DAE                  i2u214_40 1CE2                  i2u230_40 21F8  
                i2u222_41 1DAA                  i2u214_41 1CDA                  i2u230_41 21F4  
                i2u223_40 1DC6                  i2u215_40 1D06                  i2u214_48 1CE4  
                i2u231_40 221A                  i2u223_41 1DC2                  i2u215_41 1CFE  
                i2u231_41 2216                  i2u224_40 1DE6                  i2u216_40 1D28  
                i2u215_48 1D08                  i2u232_40 223A                  i2u224_41 1DE2  
                i2u216_41 1D24                  i2u232_41 2236                  i2u225_40 1E00  
                i2u217_40 1D3A                  i2u233_40 224C                  i2u225_41 1DFC  
                i2u217_41 1D36                  i2u233_41 2248                  i2u218_40 1D4A  
                i2u234_40 225C                  i2u226_40 2190                  i2u218_41 1D46  
                i2u234_41 2258                  i2u226_41 2188                  i2u219_40 1D6C  
                i2u235_40 227A                  i2u227_40 21B4                  i2u226_48 2192  
                i2u219_41 1D68                  i2u235_41 2276                  i2u227_41 21AC  
                i2u228_40 21D6                  i2u227_48 21B6                  i2u228_41 21D2  
                i2u229_40 21E8                  i2u229_41 21E4                  i2u270_40 17A2  
                i2u270_41 179E                 _resetStop 00F6                  i2u271_40 1860  
                i2u271_41 185C                  i2u272_40 192C                  i2u272_41 1928  
                i2u265_40 1564                  i2u265_41 1560                  i2u266_40 1670  
                i2u290_40 270C                  i2u266_41 166C                  i2u290_41 2708  
                i2u267_40 16E6                  i2u267_41 16E2                  i2u268_40 1724  
                i2u268_41 1720                  i2u269_41 1776                  i2u288_40 26DA  
                i2u288_41 26D6                  i2u289_40 26E8                  i2u289_41 26E4  
                _SCH_Task 0100                 _pressRB02 00B8                 _pressRA52 00BA  
               _temp_temp 00A4                 _portValue 0041                 fp__heater 0000  
        _stopwatch_minute 00C4          _stopwatch_second 00C2         ___wmul@multiplier 00D0  
             ??_InitBBSPI 00D0        SendByteBBSPI@input 00D2                  i2___wmul 2A8C  
               dispatch@i 00E0                  _Checksum 0034          __size_of_LCDInit 0066  
               copy_data0 2752                 copy_data1 2772                update@time 0014  
                __Hrparam 0000                  __Lrparam 0000           _WritePort_BBSPI 2AD6  
        __size_of___awdiv 00C6          __size_of___awmod 00B2     i2___wmul@multiplicand 0003  
             _readButton1 1CC8               _readButton2 2176        DHT_ReadData@datain 00D2  
                _checkSum 003A                  _flagLCD1 0098                  _flagLCD2 0096  
                _flagLCD3 0094                  _flagLCD4 0092                  _flagRB02 003D  
                _flagRA52 003E                  __ptext10 2AB2                  __ptext11 260C  
                __ptext20 2494                  __ptext12 293C                  __ptext21 255A  
                __ptext13 2816                  __ptext30 2A8C                  __ptext22 287C  
                __ptext14 2AF6                  __ptext31 2176                  __ptext23 28BC  
                __ptext15 2B2C                  __ptext32 1CC8                  __ptext24 28FC  
                __ptext16 103C                  __ptext33 0000                  __ptext25 2AD6  
                __ptext17 2064                  __ptext26 27AC                  __ptext18 192E  
                __ptext19 29CC                  __ptext28 1536                  __ptext29 1E16  
                _heatpump 2A66                  _dispatch 1F50                  _lastTemp 0090  
           __size_of_fan1 0026             __size_of_fan2 0026             __size_of_fan3 0026  
           __size_of_main 002E                _DHT_Result 2288                  _pressRB0 00C0  
                _pressRA5 0032                  _response 0039                  int$flags 0046  
              _LCDPutChar 28BC                _LCDPutInst 28FC                  _stopflag 00F4  
   __end_of_SendByteBBSPI 2816                _INTCONbits 000FF2                  intlevel2 0000  
 __end_of_WritePort_BBSPI 2AF6                _OSCCONbits 000FD3   WritePort_BBSPI@port_add 00D4  
          _humidity_dht11 008A             ?_DHT_ReadData 0001                _RH_Decimal 0038  
             fp__heatpump 0000               ?_DHT_Result 0001  
